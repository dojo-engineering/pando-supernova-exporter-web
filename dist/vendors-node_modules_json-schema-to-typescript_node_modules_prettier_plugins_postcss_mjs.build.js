"use strict";(self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_=self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_||[]).push([["vendors-node_modules_json-schema-to-typescript_node_modules_prettier_plugins_postcss_mjs"],{"./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/postcss.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/postcss.mjs ***!
  \******************************************************************************************/(e,t,r)=>{r.r(t),r.d(t,{default:()=>tn,languages:()=>vs,options:()=>gs,parsers:()=>ws,printers:()=>en});var s=Object.create,n=Object.defineProperty,o=Object.getOwnPropertyDescriptor,i=Object.getOwnPropertyNames,a=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty,u=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),c=(e,t)=>{for(var r in t)n(e,r,{get:t[r],enumerable:!0})},p=(e,t,r)=>(r=null!=e?s(a(e)):{},((e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of i(t))!l.call(e,a)&&a!==r&&n(e,a,{get:()=>t[a],enumerable:!(s=o(t,a))||s.enumerable});return e})(!t&&e&&e.__esModule?r:n(r,"default",{value:e,enumerable:!0}),e)),h=u((e=>{Object.defineProperty(e,"__esModule",{value:!0}),e.extract=function(e){let t=e.match(s);return t?t[0].trimLeft():""},e.parse=function(e){return c(e).pragmas},e.parseWithComments=c,e.print=function({comments:e="",pragmas:t={}}){let r="\n",s=" *",n=Object.keys(t),o=n.flatMap((e=>p(e,t[e]))).map((e=>`${s} ${e}${r}`)).join("");if(!e){if(0===n.length)return"";if(1===n.length&&!Array.isArray(t[n[0]])){let e=t[n[0]];return`/** ${p(n[0],e)[0]} */`}}let i=e.split(r).map((e=>`${s} ${e}`)).join(r)+r;return"/**\n"+(e?i:"")+(e&&n.length?s+r:"")+o+" */"},e.strip=function(e){let t=e.match(s);return t&&t[0]?e.substring(t[0].length):e};var t=/\*\/$/,r=/^\/\*\*?/,s=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,n=/(^|\s+)\/\/([^\r\n]*)/g,o=/^(\r?\n)+/,i=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,a=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,l=/(\r?\n|^) *\* ?/g,u=[];function c(e){e=e.replace(r,"").replace(t,"").replace(l,"$1");let s="";for(;s!==e;)s=e,e=e.replace(i,"\n$1 $2\n");e=e.replace(o,"").trimRight();let c,p=Object.create(null),h=e.replace(a,"").replace(o,"").trimRight();for(;c=a.exec(e);){let e=c[2].replace(n,"");"string"==typeof p[c[1]]||Array.isArray(p[c[1]])?p[c[1]]=u.concat(p[c[1]],e):p[c[1]]=e}return{comments:h,pragmas:p}}function p(e,t){return u.concat(t).map((t=>`@${e} ${t}`.trim()))}})),f=u(((e,t)=>{t.exports.isClean=Symbol("isClean"),t.exports.my=Symbol("my")})),d=u(((e,t)=>{var r=String,s=function(){return{isColorSupported:!1,reset:r,bold:r,dim:r,italic:r,underline:r,inverse:r,hidden:r,strikethrough:r,black:r,red:r,green:r,yellow:r,blue:r,magenta:r,cyan:r,white:r,gray:r,bgBlack:r,bgRed:r,bgGreen:r,bgYellow:r,bgBlue:r,bgMagenta:r,bgCyan:r,bgWhite:r}};t.exports=s(),t.exports.createColors=s})),m=u((()=>{})),y=u(((e,t)=>{var r=d(),s=m(),n=class e extends Error{constructor(t,r,s,n,o,i){super(t),this.name="CssSyntaxError",this.reason=t,o&&(this.file=o),n&&(this.source=n),i&&(this.plugin=i),typeof r<"u"&&typeof s<"u"&&("number"==typeof r?(this.line=r,this.column=s):(this.line=r.line,this.column=r.column,this.endLine=s.line,this.endColumn=s.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,e)}setMessage(){this.message=this.plugin?this.plugin+": ":"",this.message+=this.file?this.file:"<css input>",typeof this.line<"u"&&(this.message+=":"+this.line+":"+this.column),this.message+=": "+this.reason}showSourceCode(e){if(!this.source)return"";let t=this.source;null==e&&(e=r.isColorSupported),s&&e&&(t=s(t));let n,o,i=t.split(/\r?\n/),a=Math.max(this.line-3,0),l=Math.min(this.line+2,i.length),u=String(l).length;if(e){let{bold:e,gray:t,red:s}=r.createColors(!0);n=t=>e(s(t)),o=e=>t(e)}else n=o=e=>e;return i.slice(a,l).map(((e,t)=>{let r=a+1+t,s=" "+(" "+r).slice(-u)+" | ";if(r===this.line){let t=o(s.replace(/\d/g," "))+e.slice(0,this.column-1).replace(/[^\t]/g," ");return n(">")+o(s)+e+"\n "+t+n("^")}return" "+o(s)+e})).join("\n")}toString(){let e=this.showSourceCode();return e&&(e="\n\n"+e+"\n"),this.name+": "+this.message+e}};t.exports=n,n.default=n})),v=u(((e,t)=>{var r={after:"\n",beforeClose:"\n",beforeComment:"\n",beforeDecl:"\n",beforeOpen:" ",beforeRule:"\n",colon:": ",commentLeft:" ",commentRight:" ",emptyBody:"",indent:"    ",semicolon:!1};var s=class{constructor(e){this.builder=e}atrule(e,t){let r="@"+e.name,s=e.params?this.rawValue(e,"params"):"";if(typeof e.raws.afterName<"u"?r+=e.raws.afterName:s&&(r+=" "),e.nodes)this.block(e,r+s);else{let n=(e.raws.between||"")+(t?";":"");this.builder(r+s+n,e)}}beforeAfter(e,t){let r;r="decl"===e.type?this.raw(e,null,"beforeDecl"):"comment"===e.type?this.raw(e,null,"beforeComment"):"before"===t?this.raw(e,null,"beforeRule"):this.raw(e,null,"beforeClose");let s=e.parent,n=0;for(;s&&"root"!==s.type;)n+=1,s=s.parent;if(r.includes("\n")){let t=this.raw(e,null,"indent");if(t.length)for(let e=0;e<n;e++)r+=t}return r}block(e,t){let r,s=this.raw(e,"between","beforeOpen");this.builder(t+s+"{",e,"start"),e.nodes&&e.nodes.length?(this.body(e),r=this.raw(e,"after")):r=this.raw(e,"after","emptyBody"),r&&this.builder(r),this.builder("}",e,"end")}body(e){let t=e.nodes.length-1;for(;t>0&&"comment"===e.nodes[t].type;)t-=1;let r=this.raw(e,"semicolon");for(let s=0;s<e.nodes.length;s++){let n=e.nodes[s],o=this.raw(n,"before");o&&this.builder(o),this.stringify(n,t!==s||r)}}comment(e){let t=this.raw(e,"left","commentLeft"),r=this.raw(e,"right","commentRight");this.builder("/*"+t+e.text+r+"*/",e)}decl(e,t){let r=this.raw(e,"between","colon"),s=e.prop+r+this.rawValue(e,"value");e.important&&(s+=e.raws.important||" !important"),t&&(s+=";"),this.builder(s,e)}document(e){this.body(e)}raw(e,t,s){let n;if(s||(s=t),t&&(n=e.raws[t],typeof n<"u"))return n;let o=e.parent;if("before"===s&&(!o||"root"===o.type&&o.first===e||o&&"document"===o.type))return"";if(!o)return r[s];let i=e.root();if(i.rawCache||(i.rawCache={}),typeof i.rawCache[s]<"u")return i.rawCache[s];if("before"===s||"after"===s)return this.beforeAfter(e,s);{let r="raw"+((a=s)[0].toUpperCase()+a.slice(1));this[r]?n=this[r](i,e):i.walk((e=>{if(n=e.raws[t],typeof n<"u")return!1}))}var a;return typeof n>"u"&&(n=r[s]),i.rawCache[s]=n,n}rawBeforeClose(e){let t;return e.walk((e=>{if(e.nodes&&e.nodes.length>0&&typeof e.raws.after<"u")return t=e.raws.after,t.includes("\n")&&(t=t.replace(/[^\n]+$/,"")),!1})),t&&(t=t.replace(/\S/g,"")),t}rawBeforeComment(e,t){let r;return e.walkComments((e=>{if(typeof e.raws.before<"u")return r=e.raws.before,r.includes("\n")&&(r=r.replace(/[^\n]+$/,"")),!1})),typeof r>"u"?r=this.raw(t,null,"beforeDecl"):r&&(r=r.replace(/\S/g,"")),r}rawBeforeDecl(e,t){let r;return e.walkDecls((e=>{if(typeof e.raws.before<"u")return r=e.raws.before,r.includes("\n")&&(r=r.replace(/[^\n]+$/,"")),!1})),typeof r>"u"?r=this.raw(t,null,"beforeRule"):r&&(r=r.replace(/\S/g,"")),r}rawBeforeOpen(e){let t;return e.walk((e=>{if("decl"!==e.type&&(t=e.raws.between,typeof t<"u"))return!1})),t}rawBeforeRule(e){let t;return e.walk((r=>{if(r.nodes&&(r.parent!==e||e.first!==r)&&typeof r.raws.before<"u")return t=r.raws.before,t.includes("\n")&&(t=t.replace(/[^\n]+$/,"")),!1})),t&&(t=t.replace(/\S/g,"")),t}rawColon(e){let t;return e.walkDecls((e=>{if(typeof e.raws.between<"u")return t=e.raws.between.replace(/[^\s:]/g,""),!1})),t}rawEmptyBody(e){let t;return e.walk((e=>{if(e.nodes&&0===e.nodes.length&&(t=e.raws.after,typeof t<"u"))return!1})),t}rawIndent(e){if(e.raws.indent)return e.raws.indent;let t;return e.walk((r=>{let s=r.parent;if(s&&s!==e&&s.parent&&s.parent===e&&typeof r.raws.before<"u"){let e=r.raws.before.split("\n");return t=e[e.length-1],t=t.replace(/\S/g,""),!1}})),t}rawSemicolon(e){let t;return e.walk((e=>{if(e.nodes&&e.nodes.length&&"decl"===e.last.type&&(t=e.raws.semicolon,typeof t<"u"))return!1})),t}rawValue(e,t){let r=e[t],s=e.raws[t];return s&&s.value===r?s.raw:r}root(e){this.body(e),e.raws.after&&this.builder(e.raws.after)}rule(e){this.block(e,this.rawValue(e,"selector")),e.raws.ownSemicolon&&this.builder(e.raws.ownSemicolon,e,"end")}stringify(e,t){if(!this[e.type])throw new Error("Unknown AST node type "+e.type+". Maybe you need to change PostCSS stringifier.");this[e.type](e,t)}};t.exports=s,s.default=s})),g=u(((e,t)=>{var r=v();function s(e,t){new r(t).stringify(e)}t.exports=s,s.default=s})),w=u(((e,t)=>{var{isClean:r,my:s}=f(),n=y(),o=v(),i=g();function a(e,t){let r=new e.constructor;for(let s in e){if(!Object.prototype.hasOwnProperty.call(e,s)||"proxyCache"===s)continue;let n=e[s],o=typeof n;"parent"===s&&"object"===o?t&&(r[s]=t):"source"===s?r[s]=n:Array.isArray(n)?r[s]=n.map((e=>a(e,r))):("object"===o&&null!==n&&(n=a(n)),r[s]=n)}return r}var l=class{constructor(e={}){this.raws={},this[r]=!1,this[s]=!0;for(let t in e)if("nodes"===t){this.nodes=[];for(let r of e[t])"function"==typeof r.clone?this.append(r.clone()):this.append(r)}else this[t]=e[t]}addToError(e){if(e.postcssNode=this,e.stack&&this.source&&/\n\s{4}at /.test(e.stack)){let t=this.source;e.stack=e.stack.replace(/\n\s{4}at /,`$&${t.input.from}:${t.start.line}:${t.start.column}$&`)}return e}after(e){return this.parent.insertAfter(this,e),this}assign(e={}){for(let t in e)this[t]=e[t];return this}before(e){return this.parent.insertBefore(this,e),this}cleanRaws(e){delete this.raws.before,delete this.raws.after,e||delete this.raws.between}clone(e={}){let t=a(this);for(let r in e)t[r]=e[r];return t}cloneAfter(e={}){let t=this.clone(e);return this.parent.insertAfter(this,t),t}cloneBefore(e={}){let t=this.clone(e);return this.parent.insertBefore(this,t),t}error(e,t={}){if(this.source){let{end:r,start:s}=this.rangeBy(t);return this.source.input.error(e,{column:s.column,line:s.line},{column:r.column,line:r.line},t)}return new n(e)}getProxyProcessor(){return{get:(e,t)=>"proxyOf"===t?e:"root"===t?()=>e.root().toProxy():e[t],set:(e,t,r)=>(e[t]===r||(e[t]=r,("prop"===t||"value"===t||"name"===t||"params"===t||"important"===t||"text"===t)&&e.markDirty()),!0)}}markDirty(){if(this[r]){this[r]=!1;let e=this;for(;e=e.parent;)e[r]=!1}}next(){if(!this.parent)return;let e=this.parent.index(this);return this.parent.nodes[e+1]}positionBy(e,t){let r=this.source.start;if(e.index)r=this.positionInside(e.index,t);else if(e.word){let s=(t=this.toString()).indexOf(e.word);-1!==s&&(r=this.positionInside(s,t))}return r}positionInside(e,t){let r=t||this.toString(),s=this.source.start.column,n=this.source.start.line;for(let t=0;t<e;t++)"\n"===r[t]?(s=1,n+=1):s+=1;return{column:s,line:n}}prev(){if(!this.parent)return;let e=this.parent.index(this);return this.parent.nodes[e-1]}rangeBy(e){let t={column:this.source.start.column,line:this.source.start.line},r=this.source.end?{column:this.source.end.column+1,line:this.source.end.line}:{column:t.column+1,line:t.line};if(e.word){let s=this.toString(),n=s.indexOf(e.word);-1!==n&&(t=this.positionInside(n,s),r=this.positionInside(n+e.word.length,s))}else e.start?t={column:e.start.column,line:e.start.line}:e.index&&(t=this.positionInside(e.index)),e.end?r={column:e.end.column,line:e.end.line}:"number"==typeof e.endIndex?r=this.positionInside(e.endIndex):e.index&&(r=this.positionInside(e.index+1));return(r.line<t.line||r.line===t.line&&r.column<=t.column)&&(r={column:t.column+1,line:t.line}),{end:r,start:t}}raw(e,t){return(new o).raw(this,e,t)}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}replaceWith(...e){if(this.parent){let t=this,r=!1;for(let s of e)s===this?r=!0:r?(this.parent.insertAfter(t,s),t=s):this.parent.insertBefore(t,s);r||this.remove()}return this}root(){let e=this;for(;e.parent&&"document"!==e.parent.type;)e=e.parent;return e}toJSON(e,t){let r={},s=null==t;t=t||new Map;let n=0;for(let e in this){if(!Object.prototype.hasOwnProperty.call(this,e)||"parent"===e||"proxyCache"===e)continue;let s=this[e];if(Array.isArray(s))r[e]=s.map((e=>"object"==typeof e&&e.toJSON?e.toJSON(null,t):e));else if("object"==typeof s&&s.toJSON)r[e]=s.toJSON(null,t);else if("source"===e){let o=t.get(s.input);null==o&&(o=n,t.set(s.input,n),n++),r[e]={end:s.end,inputId:o,start:s.start}}else r[e]=s}return s&&(r.inputs=[...t.keys()].map((e=>e.toJSON()))),r}toProxy(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}toString(e=i){e.stringify&&(e=e.stringify);let t="";return e(this,(e=>{t+=e})),t}warn(e,t,r){let s={node:this};for(let e in r)s[e]=r[e];return e.warn(t,s)}get proxyOf(){return this}};t.exports=l,l.default=l})),b=u(((e,t)=>{var r=w(),s=class extends r{constructor(e){e&&typeof e.value<"u"&&"string"!=typeof e.value&&(e={...e,value:String(e.value)}),super(e),this.type="decl"}get variable(){return this.prop.startsWith("--")||"$"===this.prop[0]}};t.exports=s,s.default=s})),x=u(((e,t)=>{var r=w(),s=class extends r{constructor(e){super(e),this.type="comment"}};t.exports=s,s.default=s})),k=u(((e,t)=>{var r,s,n,o,{isClean:i,my:a}=f(),l=b(),u=x(),c=w();function p(e){return e.map((e=>(e.nodes&&(e.nodes=p(e.nodes)),delete e.source,e)))}function h(e){if(e[i]=!1,e.proxyOf.nodes)for(let t of e.proxyOf.nodes)h(t)}var d=class e extends c{append(...e){for(let t of e){let e=this.normalize(t,this.last);for(let t of e)this.proxyOf.nodes.push(t)}return this.markDirty(),this}cleanRaws(e){if(super.cleanRaws(e),this.nodes)for(let t of this.nodes)t.cleanRaws(e)}each(e){if(!this.proxyOf.nodes)return;let t,r,s=this.getIterator();for(;this.indexes[s]<this.proxyOf.nodes.length&&(t=this.indexes[s],r=e(this.proxyOf.nodes[t],t),!1!==r);)this.indexes[s]+=1;return delete this.indexes[s],r}every(e){return this.nodes.every(e)}getIterator(){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;let e=this.lastEach;return this.indexes[e]=0,e}getProxyProcessor(){return{get:(e,t)=>"proxyOf"===t?e:e[t]?"each"===t||"string"==typeof t&&t.startsWith("walk")?(...r)=>e[t](...r.map((e=>"function"==typeof e?(t,r)=>e(t.toProxy(),r):e))):"every"===t||"some"===t?r=>e[t](((e,...t)=>r(e.toProxy(),...t))):"root"===t?()=>e.root().toProxy():"nodes"===t?e.nodes.map((e=>e.toProxy())):"first"===t||"last"===t?e[t].toProxy():e[t]:e[t],set:(e,t,r)=>(e[t]===r||(e[t]=r,("name"===t||"params"===t||"selector"===t)&&e.markDirty()),!0)}}index(e){return"number"==typeof e?e:(e.proxyOf&&(e=e.proxyOf),this.proxyOf.nodes.indexOf(e))}insertAfter(e,t){let r,s=this.index(e),n=this.normalize(t,this.proxyOf.nodes[s]).reverse();s=this.index(e);for(let e of n)this.proxyOf.nodes.splice(s+1,0,e);for(let e in this.indexes)r=this.indexes[e],s<r&&(this.indexes[e]=r+n.length);return this.markDirty(),this}insertBefore(e,t){let r,s=this.index(e),n=0===s&&"prepend",o=this.normalize(t,this.proxyOf.nodes[s],n).reverse();s=this.index(e);for(let e of o)this.proxyOf.nodes.splice(s,0,e);for(let e in this.indexes)r=this.indexes[e],s<=r&&(this.indexes[e]=r+o.length);return this.markDirty(),this}normalize(t,o){if("string"==typeof t)t=p(r(t).nodes);else if(typeof t>"u")t=[];else if(Array.isArray(t)){t=t.slice(0);for(let e of t)e.parent&&e.parent.removeChild(e,"ignore")}else if("root"===t.type&&"document"!==this.type){t=t.nodes.slice(0);for(let e of t)e.parent&&e.parent.removeChild(e,"ignore")}else if(t.type)t=[t];else if(t.prop){if(typeof t.value>"u")throw new Error("Value field is missed in node creation");"string"!=typeof t.value&&(t.value=String(t.value)),t=[new l(t)]}else if(t.selector)t=[new s(t)];else if(t.name)t=[new n(t)];else{if(!t.text)throw new Error("Unknown node type in node creation");t=[new u(t)]}return t.map((t=>(t[a]||e.rebuild(t),(t=t.proxyOf).parent&&t.parent.removeChild(t),t[i]&&h(t),typeof t.raws.before>"u"&&o&&typeof o.raws.before<"u"&&(t.raws.before=o.raws.before.replace(/\S/g,"")),t.parent=this.proxyOf,t)))}prepend(...e){e=e.reverse();for(let t of e){let e=this.normalize(t,this.first,"prepend").reverse();for(let t of e)this.proxyOf.nodes.unshift(t);for(let t in this.indexes)this.indexes[t]=this.indexes[t]+e.length}return this.markDirty(),this}push(e){return e.parent=this,this.proxyOf.nodes.push(e),this}removeAll(){for(let e of this.proxyOf.nodes)e.parent=void 0;return this.proxyOf.nodes=[],this.markDirty(),this}removeChild(e){let t;e=this.index(e),this.proxyOf.nodes[e].parent=void 0,this.proxyOf.nodes.splice(e,1);for(let r in this.indexes)t=this.indexes[r],t>=e&&(this.indexes[r]=t-1);return this.markDirty(),this}replaceValues(e,t,r){return r||(r=t,t={}),this.walkDecls((s=>{t.props&&!t.props.includes(s.prop)||t.fast&&!s.value.includes(t.fast)||(s.value=s.value.replace(e,r))})),this.markDirty(),this}some(e){return this.nodes.some(e)}walk(e){return this.each(((t,r)=>{let s;try{s=e(t,r)}catch(e){throw t.addToError(e)}return!1!==s&&t.walk&&(s=t.walk(e)),s}))}walkAtRules(e,t){return t?e instanceof RegExp?this.walk(((r,s)=>{if("atrule"===r.type&&e.test(r.name))return t(r,s)})):this.walk(((r,s)=>{if("atrule"===r.type&&r.name===e)return t(r,s)})):(t=e,this.walk(((e,r)=>{if("atrule"===e.type)return t(e,r)})))}walkComments(e){return this.walk(((t,r)=>{if("comment"===t.type)return e(t,r)}))}walkDecls(e,t){return t?e instanceof RegExp?this.walk(((r,s)=>{if("decl"===r.type&&e.test(r.prop))return t(r,s)})):this.walk(((r,s)=>{if("decl"===r.type&&r.prop===e)return t(r,s)})):(t=e,this.walk(((e,r)=>{if("decl"===e.type)return t(e,r)})))}walkRules(e,t){return t?e instanceof RegExp?this.walk(((r,s)=>{if("rule"===r.type&&e.test(r.selector))return t(r,s)})):this.walk(((r,s)=>{if("rule"===r.type&&r.selector===e)return t(r,s)})):(t=e,this.walk(((e,r)=>{if("rule"===e.type)return t(e,r)})))}get first(){if(this.proxyOf.nodes)return this.proxyOf.nodes[0]}get last(){if(this.proxyOf.nodes)return this.proxyOf.nodes[this.proxyOf.nodes.length-1]}};d.registerParse=e=>{r=e},d.registerRule=e=>{s=e},d.registerAtRule=e=>{n=e},d.registerRoot=e=>{o=e},t.exports=d,d.default=d,d.rebuild=e=>{"atrule"===e.type?Object.setPrototypeOf(e,n.prototype):"rule"===e.type?Object.setPrototypeOf(e,s.prototype):"decl"===e.type?Object.setPrototypeOf(e,l.prototype):"comment"===e.type?Object.setPrototypeOf(e,u.prototype):"root"===e.type&&Object.setPrototypeOf(e,o.prototype),e[a]=!0,e.nodes&&e.nodes.forEach((e=>{d.rebuild(e)}))}})),O=u(((e,t)=>{var r=/[\t\n\f\r "#'()/;[\\\]{}]/g,s=/[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g,n=/.[\r\n"'(/\\]/,o=/[\da-f]/i;t.exports=function(e,t={}){let i,a,l,u,c,p,h,f,d,m,y=e.css.valueOf(),v=t.ignoreErrors,g=y.length,w=0,b=[],x=[];function k(t){throw e.error("Unclosed "+t,w)}return{back:function(e){x.push(e)},endOfFile:function(){return 0===x.length&&w>=g},nextToken:function(e){if(x.length)return x.pop();if(w>=g)return;let t=!!e&&e.ignoreUnclosed;switch(i=y.charCodeAt(w),i){case 10:case 32:case 9:case 13:case 12:a=w;do{a+=1,i=y.charCodeAt(a)}while(32===i||10===i||9===i||13===i||12===i);m=["space",y.slice(w,a)],w=a-1;break;case 91:case 93:case 123:case 125:case 58:case 59:case 41:{let e=String.fromCharCode(i);m=[e,e,w];break}case 40:if(f=b.length?b.pop()[1]:"",d=y.charCodeAt(w+1),"url"===f&&39!==d&&34!==d&&32!==d&&10!==d&&9!==d&&12!==d&&13!==d){a=w;do{if(p=!1,a=y.indexOf(")",a+1),-1===a){if(v||t){a=w;break}k("bracket")}for(h=a;92===y.charCodeAt(h-1);)h-=1,p=!p}while(p);m=["brackets",y.slice(w,a+1),w,a],w=a}else a=y.indexOf(")",w+1),u=y.slice(w,a+1),-1===a||n.test(u)?m=["(","(",w]:(m=["brackets",u,w,a],w=a);break;case 39:case 34:l=39===i?"'":'"',a=w;do{if(p=!1,a=y.indexOf(l,a+1),-1===a){if(v||t){a=w+1;break}k("string")}for(h=a;92===y.charCodeAt(h-1);)h-=1,p=!p}while(p);m=["string",y.slice(w,a+1),w,a],w=a;break;case 64:r.lastIndex=w+1,r.test(y),a=0===r.lastIndex?y.length-1:r.lastIndex-2,m=["at-word",y.slice(w,a+1),w,a],w=a;break;case 92:for(a=w,c=!0;92===y.charCodeAt(a+1);)a+=1,c=!c;if(i=y.charCodeAt(a+1),c&&47!==i&&32!==i&&10!==i&&9!==i&&13!==i&&12!==i&&(a+=1,o.test(y.charAt(a)))){for(;o.test(y.charAt(a+1));)a+=1;32===y.charCodeAt(a+1)&&(a+=1)}m=["word",y.slice(w,a+1),w,a],w=a;break;default:47===i&&42===y.charCodeAt(w+1)?(a=y.indexOf("*/",w+2)+1,0===a&&(v||t?a=y.length:k("comment")),m=["comment",y.slice(w,a+1),w,a],w=a):(s.lastIndex=w+1,s.test(y),a=0===s.lastIndex?y.length-1:s.lastIndex-2,m=["word",y.slice(w,a+1),w,a],b.push(m),w=a)}return w++,m},position:function(){return w}}}})),T=u(((e,t)=>{var r=k(),s=class extends r{constructor(e){super(e),this.type="atrule"}append(...e){return this.proxyOf.nodes||(this.nodes=[]),super.append(...e)}prepend(...e){return this.proxyOf.nodes||(this.nodes=[]),super.prepend(...e)}};t.exports=s,s.default=s,r.registerAtRule(s)})),_=u(((e,t)=>{var r,s,n=k(),o=class extends n{constructor(e){super(e),this.type="root",this.nodes||(this.nodes=[])}normalize(e,t,r){let s=super.normalize(e);if(t)if("prepend"===r)this.nodes.length>1?t.raws.before=this.nodes[1].raws.before:delete t.raws.before;else if(this.first!==t)for(let e of s)e.raws.before=t.raws.before;return s}removeChild(e,t){let r=this.index(e);return!t&&0===r&&this.nodes.length>1&&(this.nodes[1].raws.before=this.nodes[r].raws.before),super.removeChild(e)}toResult(e={}){return new r(new s,this,e).stringify()}};o.registerLazyResult=e=>{r=e},o.registerProcessor=e=>{s=e},t.exports=o,o.default=o,n.registerRoot(o)})),C=u(((e,t)=>{var r={comma:e=>r.split(e,[","],!0),space(e){let t=[" ","\n","\t"];return r.split(e,t)},split(e,t,r){let s=[],n="",o=!1,i=0,a=!1,l="",u=!1;for(let r of e)u?u=!1:"\\"===r?u=!0:a?r===l&&(a=!1):'"'===r||"'"===r?(a=!0,l=r):"("===r?i+=1:")"===r?i>0&&(i-=1):0===i&&t.includes(r)&&(o=!0),o?(""!==n&&s.push(n.trim()),n="",o=!1):n+=r;return(r||""!==n)&&s.push(n.trim()),s}};t.exports=r,r.default=r})),S=u(((e,t)=>{var r=k(),s=C(),n=class extends r{constructor(e){super(e),this.type="rule",this.nodes||(this.nodes=[])}get selectors(){return s.comma(this.selector)}set selectors(e){let t=this.selector?this.selector.match(/,\s*/):null,r=t?t[0]:","+this.raw("between","beforeOpen");this.selector=e.join(r)}};t.exports=n,n.default=n,r.registerRule(n)})),E=u(((e,t)=>{var r=b(),s=O(),n=x(),o=T(),i=_(),a=S(),l={empty:!0,space:!0};t.exports=class{constructor(e){this.input=e,this.root=new i,this.current=this.root,this.spaces="",this.semicolon=!1,this.createTokenizer(),this.root.source={input:e,start:{column:1,line:1,offset:0}}}atrule(e){let t=new o;t.name=e[1].slice(1),""===t.name&&this.unnamedAtrule(t,e),this.init(t,e[2]);let r,s,n,i=!1,a=!1,l=[],u=[];for(;!this.tokenizer.endOfFile();){if(r=(e=this.tokenizer.nextToken())[0],"("===r||"["===r?u.push("("===r?")":"]"):"{"===r&&u.length>0?u.push("}"):r===u[u.length-1]&&u.pop(),0===u.length){if(";"===r){t.source.end=this.getPosition(e[2]),t.source.end.offset++,this.semicolon=!0;break}if("{"===r){a=!0;break}if("}"===r){if(l.length>0){for(n=l.length-1,s=l[n];s&&"space"===s[0];)s=l[--n];s&&(t.source.end=this.getPosition(s[3]||s[2]),t.source.end.offset++)}this.end(e);break}l.push(e)}else l.push(e);if(this.tokenizer.endOfFile()){i=!0;break}}t.raws.between=this.spacesAndCommentsFromEnd(l),l.length?(t.raws.afterName=this.spacesAndCommentsFromStart(l),this.raw(t,"params",l),i&&(e=l[l.length-1],t.source.end=this.getPosition(e[3]||e[2]),t.source.end.offset++,this.spaces=t.raws.between,t.raws.between="")):(t.raws.afterName="",t.params=""),a&&(t.nodes=[],this.current=t)}checkMissedSemicolon(e){let t=this.colon(e);if(!1===t)return;let r,s=0;for(let n=t-1;n>=0&&(r=e[n],"space"===r[0]||(s+=1,2!==s));n--);throw this.input.error("Missed semicolon","word"===r[0]?r[3]+1:r[2])}colon(e){let t,r,s,n=0;for(let[o,i]of e.entries()){if(t=i,r=t[0],"("===r&&(n+=1),")"===r&&(n-=1),0===n&&":"===r){if(s){if("word"===s[0]&&"progid"===s[1])continue;return o}this.doubleColon(t)}s=t}return!1}comment(e){let t=new n;this.init(t,e[2]),t.source.end=this.getPosition(e[3]||e[2]),t.source.end.offset++;let r=e[1].slice(2,-2);if(/^\s*$/.test(r))t.text="",t.raws.left=r,t.raws.right="";else{let e=r.match(/^(\s*)([^]*\S)(\s*)$/);t.text=e[2],t.raws.left=e[1],t.raws.right=e[3]}}createTokenizer(){this.tokenizer=s(this.input)}decl(e,t){let s=new r;this.init(s,e[0][2]);let n,o=e[e.length-1];for(";"===o[0]&&(this.semicolon=!0,e.pop()),s.source.end=this.getPosition(o[3]||o[2]||function(e){for(let t=e.length-1;t>=0;t--){let r=e[t],s=r[3]||r[2];if(s)return s}}(e)),s.source.end.offset++;"word"!==e[0][0];)1===e.length&&this.unknownWord(e),s.raws.before+=e.shift()[1];for(s.source.start=this.getPosition(e[0][2]),s.prop="";e.length;){let t=e[0][0];if(":"===t||"space"===t||"comment"===t)break;s.prop+=e.shift()[1]}for(s.raws.between="";e.length;){if(n=e.shift(),":"===n[0]){s.raws.between+=n[1];break}"word"===n[0]&&/\w/.test(n[1])&&this.unknownWord([n]),s.raws.between+=n[1]}("_"===s.prop[0]||"*"===s.prop[0])&&(s.raws.before+=s.prop[0],s.prop=s.prop.slice(1));let i,a=[];for(;e.length&&(i=e[0][0],"space"===i||"comment"===i);)a.push(e.shift());this.precheckMissedSemicolon(e);for(let t=e.length-1;t>=0;t--){if(n=e[t],"!important"===n[1].toLowerCase()){s.important=!0;let r=this.stringFrom(e,t);r=this.spacesFromEnd(e)+r," !important"!==r&&(s.raws.important=r);break}if("important"===n[1].toLowerCase()){let r=e.slice(0),n="";for(let e=t;e>0;e--){let t=r[e][0];if(0===n.trim().indexOf("!")&&"space"!==t)break;n=r.pop()[1]+n}0===n.trim().indexOf("!")&&(s.important=!0,s.raws.important=n,e=r)}if("space"!==n[0]&&"comment"!==n[0])break}e.some((e=>"space"!==e[0]&&"comment"!==e[0]))&&(s.raws.between+=a.map((e=>e[1])).join(""),a=[]),this.raw(s,"value",a.concat(e),t),s.value.includes(":")&&!t&&this.checkMissedSemicolon(e)}doubleColon(e){throw this.input.error("Double colon",{offset:e[2]},{offset:e[2]+e[1].length})}emptyRule(e){let t=new a;this.init(t,e[2]),t.selector="",t.raws.between="",this.current=t}end(e){this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.semicolon=!1,this.current.raws.after=(this.current.raws.after||"")+this.spaces,this.spaces="",this.current.parent?(this.current.source.end=this.getPosition(e[2]),this.current.source.end.offset++,this.current=this.current.parent):this.unexpectedClose(e)}endFile(){this.current.parent&&this.unclosedBlock(),this.current.nodes&&this.current.nodes.length&&(this.current.raws.semicolon=this.semicolon),this.current.raws.after=(this.current.raws.after||"")+this.spaces,this.root.source.end=this.getPosition(this.tokenizer.position())}freeSemicolon(e){if(this.spaces+=e[1],this.current.nodes){let e=this.current.nodes[this.current.nodes.length-1];e&&"rule"===e.type&&!e.raws.ownSemicolon&&(e.raws.ownSemicolon=this.spaces,this.spaces="")}}getPosition(e){let t=this.input.fromOffset(e);return{column:t.col,line:t.line,offset:e}}init(e,t){this.current.push(e),e.source={input:this.input,start:this.getPosition(t)},e.raws.before=this.spaces,this.spaces="","comment"!==e.type&&(this.semicolon=!1)}other(e){let t=!1,r=null,s=!1,n=null,o=[],i=e[1].startsWith("--"),a=[],l=e;for(;l;){if(r=l[0],a.push(l),"("===r||"["===r)n||(n=l),o.push("("===r?")":"]");else if(i&&s&&"{"===r)n||(n=l),o.push("}");else if(0===o.length){if(";"===r){if(s)return void this.decl(a,i);break}if("{"===r)return void this.rule(a);if("}"===r){this.tokenizer.back(a.pop()),t=!0;break}":"===r&&(s=!0)}else r===o[o.length-1]&&(o.pop(),0===o.length&&(n=null));l=this.tokenizer.nextToken()}if(this.tokenizer.endOfFile()&&(t=!0),o.length>0&&this.unclosedBracket(n),t&&s){if(!i)for(;a.length&&(l=a[a.length-1][0],"space"===l||"comment"===l);)this.tokenizer.back(a.pop());this.decl(a,i)}else this.unknownWord(a)}parse(){let e;for(;!this.tokenizer.endOfFile();)switch(e=this.tokenizer.nextToken(),e[0]){case"space":this.spaces+=e[1];break;case";":this.freeSemicolon(e);break;case"}":this.end(e);break;case"comment":this.comment(e);break;case"at-word":this.atrule(e);break;case"{":this.emptyRule(e);break;default:this.other(e)}this.endFile()}precheckMissedSemicolon(){}raw(e,t,r,s){let n,o,i,a,u=r.length,c="",p=!0;for(let e=0;e<u;e+=1)n=r[e],o=n[0],"space"!==o||e!==u-1||s?"comment"===o?(a=r[e-1]?r[e-1][0]:"empty",i=r[e+1]?r[e+1][0]:"empty",l[a]||l[i]||","===c.slice(-1)?p=!1:c+=n[1]):c+=n[1]:p=!1;if(!p){let s=r.reduce(((e,t)=>e+t[1]),"");e.raws[t]={raw:s,value:c}}e[t]=c}rule(e){e.pop();let t=new a;this.init(t,e[0][2]),t.raws.between=this.spacesAndCommentsFromEnd(e),this.raw(t,"selector",e),this.current=t}spacesAndCommentsFromEnd(e){let t,r="";for(;e.length&&(t=e[e.length-1][0],"space"===t||"comment"===t);)r=e.pop()[1]+r;return r}spacesAndCommentsFromStart(e){let t,r="";for(;e.length&&(t=e[0][0],"space"===t||"comment"===t);)r+=e.shift()[1];return r}spacesFromEnd(e){let t,r="";for(;e.length&&(t=e[e.length-1][0],"space"===t);)r=e.pop()[1]+r;return r}stringFrom(e,t){let r="";for(let s=t;s<e.length;s++)r+=e[s][1];return e.splice(t,e.length-t),r}unclosedBlock(){let e=this.current.source.start;throw this.input.error("Unclosed block",e.line,e.column)}unclosedBracket(e){throw this.input.error("Unclosed bracket",{offset:e[2]},{offset:e[2]+1})}unexpectedClose(e){throw this.input.error("Unexpected }",{offset:e[2]},{offset:e[2]+1})}unknownWord(e){throw this.input.error("Unknown word",{offset:e[0][2]},{offset:e[0][2]+e[0][1].length})}unnamedAtrule(e,t){throw this.input.error("At-rule without name",{offset:t[2]},{offset:t[2]+t[1].length})}}})),A=u((()=>{})),j=u(((e,t)=>{t.exports={nanoid:(e=21)=>{let t="",r=e;for(;r--;)t+="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"[64*Math.random()|0];return t},customAlphabet:(e,t=21)=>(r=t)=>{let s="",n=r;for(;n--;)s+=e[Math.random()*e.length|0];return s}}})),I=u(((e,t)=>{t.exports=class{}})),P=u(((e,t)=>{var{SourceMapConsumer:r,SourceMapGenerator:s}=A(),{fileURLToPath:n,pathToFileURL:o}={},{isAbsolute:i,resolve:a}={},{nanoid:l}=j(),u=m(),c=y(),p=I(),h=Symbol("fromOffsetCache"),f=!(!r||!s),d=!(!a||!i),v=class{constructor(e,t={}){if(null===e||typeof e>"u"||"object"==typeof e&&!e.toString)throw new Error(`PostCSS received ${e} instead of CSS string`);if(this.css=e.toString(),"\ufeff"===this.css[0]||"￾"===this.css[0]?(this.hasBOM=!0,this.css=this.css.slice(1)):this.hasBOM=!1,t.from&&(!d||/^\w+:\/\//.test(t.from)||i(t.from)?this.file=t.from:this.file=a(t.from)),d&&f){let e=new p(this.css,t);if(e.text){this.map=e;let t=e.consumer().file;!this.file&&t&&(this.file=this.mapResolve(t))}}this.file||(this.id="<input css "+l(6)+">"),this.map&&(this.map.file=this.from)}error(e,t,r,s={}){let n,i,a;if(t&&"object"==typeof t){let e=t,s=r;if("number"==typeof e.offset){let s=this.fromOffset(e.offset);t=s.line,r=s.col}else t=e.line,r=e.column;if("number"==typeof s.offset){let e=this.fromOffset(s.offset);i=e.line,a=e.col}else i=s.line,a=s.column}else if(!r){let e=this.fromOffset(t);t=e.line,r=e.col}let l=this.origin(t,r,i,a);return n=l?new c(e,void 0===l.endLine?l.line:{column:l.column,line:l.line},void 0===l.endLine?l.column:{column:l.endColumn,line:l.endLine},l.source,l.file,s.plugin):new c(e,void 0===i?t:{column:r,line:t},void 0===i?r:{column:a,line:i},this.css,this.file,s.plugin),n.input={column:r,endColumn:a,endLine:i,line:t,source:this.css},this.file&&(o&&(n.input.url=o(this.file).toString()),n.input.file=this.file),n}fromOffset(e){let t,r;if(this[h])r=this[h];else{let e=this.css.split("\n");r=new Array(e.length);let t=0;for(let s=0,n=e.length;s<n;s++)r[s]=t,t+=e[s].length+1;this[h]=r}t=r[r.length-1];let s=0;if(e>=t)s=r.length-1;else{let t,n=r.length-2;for(;s<n;)if(t=s+(n-s>>1),e<r[t])n=t-1;else{if(!(e>=r[t+1])){s=t;break}s=t+1}}return{col:e-r[s]+1,line:s+1}}mapResolve(e){return/^\w+:\/\//.test(e)?e:a(this.map.consumer().sourceRoot||this.map.root||".",e)}origin(e,t,r,s){if(!this.map)return!1;let a,l,u=this.map.consumer(),c=u.originalPositionFor({column:t,line:e});if(!c.source)return!1;"number"==typeof r&&(a=u.originalPositionFor({column:s,line:r})),l=i(c.source)?o(c.source):new URL(c.source,this.map.consumer().sourceRoot||o(this.map.mapFile));let p={column:c.column,endColumn:a&&a.column,endLine:a&&a.line,line:c.line,url:l.toString()};if("file:"===l.protocol){if(!n)throw new Error("file: protocol is not available in this PostCSS build");p.file=n(l)}let h=u.sourceContentFor(c.source);return h&&(p.source=h),p}toJSON(){let e={};for(let t of["hasBOM","css","file","id"])null!=this[t]&&(e[t]=this[t]);return this.map&&(e.map={...this.map},e.map.consumerCache&&(e.map.consumerCache=void 0)),e}get from(){return this.file||this.id}};t.exports=v,v.default=v,u&&u.registerInput&&u.registerInput(v)})),M=u(((e,t)=>{var r=k(),s=E(),n=P();function o(e,t){let r=new n(e,t),o=new s(r);try{o.parse()}catch(e){throw e}return o.root}t.exports=o,o.default=o,r.registerParse(o)})),N=u(((e,t)=>{var r=O(),s=P();t.exports={isInlineComment(e){if("word"===e[0]&&"//"===e[1].slice(0,2)){let t,n,o=e,i=[];for(;e;){if(/\r?\n/.test(e[1])){if(/['"].*\r?\n/.test(e[1])){i.push(e[1].substring(0,e[1].indexOf("\n"))),n=e[1].substring(e[1].indexOf("\n"));let r=this.input.css.valueOf().substring(this.tokenizer.position());n+=r,t=e[3]+r.length-n.length}else this.tokenizer.back(e);break}i.push(e[1]),t=e[2],e=this.tokenizer.nextToken({ignoreUnclosed:!0})}let a=["comment",i.join(""),o[2],t];return this.inlineComment(a),n&&(this.input=new s(n),this.tokenizer=r(this.input)),!0}if("/"===e[1]){let r=this.tokenizer.nextToken({ignoreUnclosed:!0});if("comment"===r[0]&&/^\/\*/.test(r[1]))return r[0]="word",r[1]=r[1].slice(1),e[1]="//",this.tokenizer.back(r),t.exports.isInlineComment.bind(this)(e)}return!1}}})),R=u(((e,t)=>{t.exports={interpolation(e){let t=[e,this.tokenizer.nextToken()],r=["word","}"];if(t[0][1].length>1||"{"!==t[1][0])return this.tokenizer.back(t[1]),!1;for(e=this.tokenizer.nextToken();e&&r.includes(e[0]);)t.push(e),e=this.tokenizer.nextToken();let s=t.map((e=>e[1])),[n]=t,o=t.pop(),i=["word",s.join(""),n[2],o[2]];return this.tokenizer.back(e),this.tokenizer.back(i),!0}}})),$=u(((e,t)=>{var r=/^#[0-9a-fA-F]{6}$|^#[0-9a-fA-F]{3}$/,s=/\.[0-9]/;t.exports={isMixinToken:e=>{let[,t]=e,[n]=t;return("."===n||"#"===n)&&!1===r.test(t)&&!1===s.test(t)}}})),L=u(((e,t)=>{var r=O(),s=/^url\((.+)\)/;t.exports=e=>{let{name:t,params:n=""}=e;if("import"===t&&n.length){e.import=!0;let t=r({css:n});for(e.filename=n.replace(s,"$1");!t.endOfFile();){let[r,s]=t.nextToken();if("word"===r&&"url"===s)return;if("brackets"===r){e.options=s,e.filename=n.replace(s,"").trim();break}}}}})),W=u(((e,t)=>{var r=/:$/,s=/^:(\s+)?/;t.exports=e=>{let{name:t,params:n=""}=e;if(":"===e.name.slice(-1)){if(r.test(t)){let[s]=t.match(r);e.name=t.replace(s,""),e.raws.afterName=s+(e.raws.afterName||""),e.variable=!0,e.value=e.params}if(s.test(n)){let[t]=n.match(s);e.value=n.replace(t,""),e.raws.afterName=(e.raws.afterName||"")+t,e.variable=!0}}}})),z=u(((e,t)=>{var r=x(),s=E(),{isInlineComment:n}=N(),{interpolation:o}=R(),{isMixinToken:i}=$(),a=L(),l=W(),u=/(!\s*important)$/i;t.exports=class extends s{constructor(...e){super(...e),this.lastNode=null}atrule(e){o.bind(this)(e)||(super.atrule(e),a(this.lastNode),l(this.lastNode))}decl(...e){super.decl(...e),/extend\(.+\)/i.test(this.lastNode.value)&&(this.lastNode.extend=!0)}each(e){e[0][1]=` ${e[0][1]}`;let t=e.findIndex((e=>"("===e[0])),r=e.reverse().find((e=>")"===e[0])),s=e.reverse().indexOf(r),n=e.splice(t,s).map((e=>e[1])).join("");for(let t of e.reverse())this.tokenizer.back(t);this.atrule(this.tokenizer.nextToken()),this.lastNode.function=!0,this.lastNode.params=n}init(e,t,r){super.init(e,t,r),this.lastNode=e}inlineComment(e){let t=new r,s=e[1].slice(2);if(this.init(t,e[2]),t.source.end=this.getPosition(e[3]||e[2]),t.inline=!0,t.raws.begin="//",/^\s*$/.test(s))t.text="",t.raws.left=s,t.raws.right="";else{let e=s.match(/^(\s*)([^]*[^\s])(\s*)$/);[,t.raws.left,t.text,t.raws.right]=e}}mixin(e){let[t]=e,r=t[1].slice(0,1),s=e.findIndex((e=>"brackets"===e[0])),n=e.findIndex((e=>"("===e[0])),o="";if((s<0||s>3)&&n>0){let t=e.reduce(((e,t,r)=>")"===t[0]?r:e)),r=e.slice(n,t+n).map((e=>e[1])).join(""),[s]=e.slice(n),o=[s[2],s[3]],[i]=e.slice(t,t+1),a=[i[2],i[3]],l=["brackets",r].concat(o,a),u=e.slice(0,n),c=e.slice(t+1);(e=u).push(l),e=e.concat(c)}let i=[];for(let t of e)if(("!"===t[1]||i.length)&&i.push(t),"important"===t[1])break;if(i.length){let[t]=i,r=e.indexOf(t),s=i[i.length-1],n=[t[2],t[3]],o=[s[4],s[5]],a=["word",i.map((e=>e[1])).join("")].concat(n,o);e.splice(r,i.length,a)}let a=e.findIndex((e=>u.test(e[1])));a>0&&([,o]=e[a],e.splice(a,1));for(let t of e.reverse())this.tokenizer.back(t);this.atrule(this.tokenizer.nextToken()),this.lastNode.mixin=!0,this.lastNode.raws.identifier=r,o&&(this.lastNode.important=!0,this.lastNode.raws.important=o)}other(e){n.bind(this)(e)||super.other(e)}rule(e){let t=e[e.length-1],r=e[e.length-2];if("at-word"===r[0]&&"{"===t[0]&&(this.tokenizer.back(t),o.bind(this)(r))){let t=this.tokenizer.nextToken();e=e.slice(0,e.length-2).concat([t]);for(let t of e.reverse())this.tokenizer.back(t)}else super.rule(e),/:extend\(.+\)/i.test(this.lastNode.selector)&&(this.lastNode.extend=!0)}unknownWord(e){let[t]=e;"each"!==e[0][1]||"("!==e[1][0]?i(t)?this.mixin(e):super.unknownWord(e):this.each(e)}}})),q=u(((e,t)=>{var r=v();t.exports=class extends r{atrule(e,t){if(!e.mixin&&!e.variable&&!e.function)return void super.atrule(e,t);let r=`${e.function?"":e.raws.identifier||"@"}${e.name}`,s=e.params?this.rawValue(e,"params"):"",n=e.raws.important||"";if(e.variable&&(s=e.value),typeof e.raws.afterName<"u"?r+=e.raws.afterName:s&&(r+=" "),e.nodes)this.block(e,r+s+n);else{let o=(e.raws.between||"")+n+(t?";":"");this.builder(r+s+o,e)}}comment(e){if(e.inline){let t=this.raw(e,"left","commentLeft"),r=this.raw(e,"right","commentRight");this.builder(`//${t}${e.text}${r}`,e)}else super.comment(e)}}})),B=u(((e,t)=>{var r=P(),s=z(),n=q();t.exports={parse(e,t){let n=new r(e,t),o=new s(n);return o.parse(),o.root.walk((e=>{let t=n.css.lastIndexOf(e.source.input.css);if(0===t)return;if(t+e.source.input.css.length!==n.css.length)throw new Error("Invalid state detected in postcss-less");let r=t+e.source.start.offset,s=n.fromOffset(t+e.source.start.offset);if(e.source.start={offset:r,line:s.line,column:s.col},e.source.end){let r=t+e.source.end.offset,s=n.fromOffset(t+e.source.end.offset);e.source.end={offset:r,line:s.line,column:s.col}}})),o.root},stringify(e,t){new n(t).stringify(e)},nodeToString(e){let r="";return t.exports.stringify(e,(e=>{r+=e})),r}}})),D=u(((e,t)=>{t.exports=class{generate(){}}})),U=u(((e,t)=>{var r,s,n=k(),o=class extends n{constructor(e){super({type:"document",...e}),this.nodes||(this.nodes=[])}toResult(e={}){return new r(new s,this,e).stringify()}};o.registerLazyResult=e=>{r=e},o.registerProcessor=e=>{s=e},t.exports=o,o.default=o})),F=u(((e,t)=>{var r={};t.exports=function(e){r[e]||(r[e]=!0,typeof console<"u"&&console.warn&&console.warn(e))}})),V=u(((e,t)=>{var r=class{constructor(e,t={}){if(this.type="warning",this.text=e,t.node&&t.node.source){let e=t.node.rangeBy(t);this.line=e.start.line,this.column=e.start.column,this.endLine=e.end.line,this.endColumn=e.end.column}for(let e in t)this[e]=t[e]}toString(){return this.node?this.node.error(this.text,{index:this.index,plugin:this.plugin,word:this.word}).message:this.plugin?this.plugin+": "+this.text:this.text}};t.exports=r,r.default=r})),G=u(((e,t)=>{var r=V(),s=class{constructor(e,t,r){this.processor=e,this.messages=[],this.root=t,this.opts=r,this.css=void 0,this.map=void 0}toString(){return this.css}warn(e,t={}){t.plugin||this.lastPlugin&&this.lastPlugin.postcssPlugin&&(t.plugin=this.lastPlugin.postcssPlugin);let s=new r(e,t);return this.messages.push(s),s}warnings(){return this.messages.filter((e=>"warning"===e.type))}get content(){return this.css}};t.exports=s,s.default=s})),J=u(((e,t)=>{var{isClean:r,my:s}=f(),n=D(),o=g(),i=k(),a=U(),l=(F(),G()),u=M(),c=_(),p={atrule:"AtRule",comment:"Comment",decl:"Declaration",document:"Document",root:"Root",rule:"Rule"},h={AtRule:!0,AtRuleExit:!0,Comment:!0,CommentExit:!0,Declaration:!0,DeclarationExit:!0,Document:!0,DocumentExit:!0,Once:!0,OnceExit:!0,postcssPlugin:!0,prepare:!0,Root:!0,RootExit:!0,Rule:!0,RuleExit:!0},d={Once:!0,postcssPlugin:!0,prepare:!0},m=0;function y(e){return"object"==typeof e&&"function"==typeof e.then}function v(e){let t=!1,r=p[e.type];return"decl"===e.type?t=e.prop.toLowerCase():"atrule"===e.type&&(t=e.name.toLowerCase()),t&&e.append?[r,r+"-"+t,m,r+"Exit",r+"Exit-"+t]:t?[r,r+"-"+t,r+"Exit",r+"Exit-"+t]:e.append?[r,m,r+"Exit"]:[r,r+"Exit"]}function w(e){let t;return t="document"===e.type?["Document",m,"DocumentExit"]:"root"===e.type?["Root",m,"RootExit"]:v(e),{eventIndex:0,events:t,iterator:0,node:e,visitorIndex:0,visitors:[]}}function b(e){return e[r]=!1,e.nodes&&e.nodes.forEach((e=>b(e))),e}var x={},O=class e{constructor(t,r,n){let o;if(this.stringified=!1,this.processed=!1,"object"!=typeof r||null===r||"root"!==r.type&&"document"!==r.type)if(r instanceof e||r instanceof l)o=b(r.root),r.map&&(typeof n.map>"u"&&(n.map={}),n.map.inline||(n.map.inline=!1),n.map.prev=r.map);else{let e=u;n.syntax&&(e=n.syntax.parse),n.parser&&(e=n.parser),e.parse&&(e=e.parse);try{o=e(r,n)}catch(e){this.processed=!0,this.error=e}o&&!o[s]&&i.rebuild(o)}else o=b(r);this.result=new l(t,o,n),this.helpers={...x,postcss:x,result:this.result},this.plugins=this.processor.plugins.map((e=>"object"==typeof e&&e.prepare?{...e,...e.prepare(this.result)}:e))}async(){return this.error?Promise.reject(this.error):this.processed?Promise.resolve(this.result):(this.processing||(this.processing=this.runAsync()),this.processing)}catch(e){return this.async().catch(e)}finally(e){return this.async().then(e,e)}getAsyncError(){throw new Error("Use process(css).then(cb) to work with async plugins")}handleError(e,t){let r=this.result.lastPlugin;try{t&&t.addToError(e),this.error=e,"CssSyntaxError"!==e.name||e.plugin?r.postcssVersion:(e.plugin=r.postcssPlugin,e.setMessage())}catch(e){console&&console.error&&console.error(e)}return e}prepareVisitors(){this.listeners={};let e=(e,t,r)=>{this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push([e,r])};for(let t of this.plugins)if("object"==typeof t)for(let r in t){if(!h[r]&&/^[A-Z]/.test(r))throw new Error(`Unknown event ${r} in ${t.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);if(!d[r])if("object"==typeof t[r])for(let s in t[r])e(t,"*"===s?r:r+"-"+s.toLowerCase(),t[r][s]);else"function"==typeof t[r]&&e(t,r,t[r])}this.hasListener=Object.keys(this.listeners).length>0}async runAsync(){this.plugin=0;for(let e=0;e<this.plugins.length;e++){let t=this.plugins[e],r=this.runOnRoot(t);if(y(r))try{await r}catch(e){throw this.handleError(e)}}if(this.prepareVisitors(),this.hasListener){let e=this.result.root;for(;!e[r];){e[r]=!0;let t=[w(e)];for(;t.length>0;){let e=this.visitTick(t);if(y(e))try{await e}catch(e){let r=t[t.length-1].node;throw this.handleError(e,r)}}}if(this.listeners.OnceExit)for(let[t,r]of this.listeners.OnceExit){this.result.lastPlugin=t;try{if("document"===e.type){let t=e.nodes.map((e=>r(e,this.helpers)));await Promise.all(t)}else await r(e,this.helpers)}catch(e){throw this.handleError(e)}}}return this.processed=!0,this.stringify()}runOnRoot(e){this.result.lastPlugin=e;try{if("object"==typeof e&&e.Once){if("document"===this.result.root.type){let t=this.result.root.nodes.map((t=>e.Once(t,this.helpers)));return y(t[0])?Promise.all(t):t}return e.Once(this.result.root,this.helpers)}if("function"==typeof e)return e(this.result.root,this.result)}catch(e){throw this.handleError(e)}}stringify(){if(this.error)throw this.error;if(this.stringified)return this.result;this.stringified=!0,this.sync();let e=this.result.opts,t=o;e.syntax&&(t=e.syntax.stringify),e.stringifier&&(t=e.stringifier),t.stringify&&(t=t.stringify);let r=new n(t,this.result.root,this.result.opts).generate();return this.result.css=r[0],this.result.map=r[1],this.result}sync(){if(this.error)throw this.error;if(this.processed)return this.result;if(this.processed=!0,this.processing)throw this.getAsyncError();for(let e of this.plugins){if(y(this.runOnRoot(e)))throw this.getAsyncError()}if(this.prepareVisitors(),this.hasListener){let e=this.result.root;for(;!e[r];)e[r]=!0,this.walkSync(e);if(this.listeners.OnceExit)if("document"===e.type)for(let t of e.nodes)this.visitSync(this.listeners.OnceExit,t);else this.visitSync(this.listeners.OnceExit,e)}return this.result}then(e,t){return this.async().then(e,t)}toString(){return this.css}visitSync(e,t){for(let[r,s]of e){let e;this.result.lastPlugin=r;try{e=s(t,this.helpers)}catch(e){throw this.handleError(e,t.proxyOf)}if("root"!==t.type&&"document"!==t.type&&!t.parent)return!0;if(y(e))throw this.getAsyncError()}}visitTick(e){let t=e[e.length-1],{node:s,visitors:n}=t;if("root"!==s.type&&"document"!==s.type&&!s.parent)return void e.pop();if(n.length>0&&t.visitorIndex<n.length){let[e,r]=n[t.visitorIndex];t.visitorIndex+=1,t.visitorIndex===n.length&&(t.visitors=[],t.visitorIndex=0),this.result.lastPlugin=e;try{return r(s.toProxy(),this.helpers)}catch(e){throw this.handleError(e,s)}}if(0!==t.iterator){let n,o=t.iterator;for(;n=s.nodes[s.indexes[o]];)if(s.indexes[o]+=1,!n[r])return n[r]=!0,void e.push(w(n));t.iterator=0,delete s.indexes[o]}let o=t.events;for(;t.eventIndex<o.length;){let e=o[t.eventIndex];if(t.eventIndex+=1,e===m)return void(s.nodes&&s.nodes.length&&(s[r]=!0,t.iterator=s.getIterator()));if(this.listeners[e])return void(t.visitors=this.listeners[e])}e.pop()}walkSync(e){e[r]=!0;let t=v(e);for(let s of t)if(s===m)e.nodes&&e.each((e=>{e[r]||this.walkSync(e)}));else{let t=this.listeners[s];if(t&&this.visitSync(t,e.toProxy()))return}}warnings(){return this.sync().warnings()}get content(){return this.stringify().content}get css(){return this.stringify().css}get map(){return this.stringify().map}get messages(){return this.sync().messages}get opts(){return this.result.opts}get processor(){return this.result.processor}get root(){return this.sync().root}get[Symbol.toStringTag](){return"LazyResult"}};O.registerPostcss=e=>{x=e},t.exports=O,O.default=O,c.registerLazyResult(O),a.registerLazyResult(O)})),H=u(((e,t)=>{var r=D(),s=g(),n=(F(),M()),o=G(),i=class{constructor(e,t,n){t=t.toString(),this.stringified=!1,this._processor=e,this._css=t,this._opts=n,this._map=void 0;let i,a=s;this.result=new o(this._processor,i,this._opts),this.result.css=t;let l=this;Object.defineProperty(this.result,"root",{get:()=>l.root});let u=new r(a,i,this._opts,t);if(u.isMap()){let[e,t]=u.generate();e&&(this.result.css=e),t&&(this.result.map=t)}else u.clearAnnotation(),this.result.css=u.css}async(){return this.error?Promise.reject(this.error):Promise.resolve(this.result)}catch(e){return this.async().catch(e)}finally(e){return this.async().then(e,e)}sync(){if(this.error)throw this.error;return this.result}then(e,t){return this.async().then(e,t)}toString(){return this._css}warnings(){return[]}get content(){return this.result.css}get css(){return this.result.css}get map(){return this.result.map}get messages(){return[]}get opts(){return this.result.opts}get processor(){return this.result.processor}get root(){if(this._root)return this._root;let e,t=n;try{e=t(this._css,this._opts)}catch(e){this.error=e}if(this.error)throw this.error;return this._root=e,e}get[Symbol.toStringTag](){return"NoWorkResult"}};t.exports=i,i.default=i})),Q=u(((e,t)=>{var r=H(),s=J(),n=U(),o=_(),i=class{constructor(e=[]){this.version="8.4.38",this.plugins=this.normalize(e)}normalize(e){let t=[];for(let r of e)if(!0===r.postcss?r=r():r.postcss&&(r=r.postcss),"object"==typeof r&&Array.isArray(r.plugins))t=t.concat(r.plugins);else if("object"==typeof r&&r.postcssPlugin)t.push(r);else if("function"==typeof r)t.push(r);else if("object"!=typeof r||!r.parse&&!r.stringify)throw new Error(r+" is not a PostCSS plugin");return t}process(e,t={}){return this.plugins.length||t.parser||t.stringifier||t.syntax?new s(this,e,t):new r(this,e,t)}use(e){return this.plugins=this.plugins.concat(this.normalize([e])),this}};t.exports=i,i.default=i,o.registerProcessor(i),n.registerProcessor(i)})),Y=u(((e,t)=>{var r=b(),s=I(),n=x(),o=T(),i=P(),a=_(),l=S();function u(e,t){if(Array.isArray(e))return e.map((e=>u(e)));let{inputs:c,...p}=e;if(c){t=[];for(let e of c){let r={...e,__proto__:i.prototype};r.map&&(r.map={...r.map,__proto__:s.prototype}),t.push(r)}}if(p.nodes&&(p.nodes=e.nodes.map((e=>u(e,t)))),p.source){let{inputId:e,...r}=p.source;p.source=r,null!=e&&(p.source.input=t[e])}if("root"===p.type)return new a(p);if("decl"===p.type)return new r(p);if("rule"===p.type)return new l(p);if("comment"===p.type)return new n(p);if("atrule"===p.type)return new o(p);throw new Error("Unknown node type: "+e.type)}t.exports=u,u.default=u})),K=u(((e,t)=>{var r=y(),s=b(),n=J(),o=k(),i=Q(),a=g(),l=Y(),u=U(),c=V(),p=x(),h=T(),f=G(),d=P(),m=M(),v=C(),O=S(),E=_(),A=w();function j(...e){return 1===e.length&&Array.isArray(e[0])&&(e=e[0]),new i(e)}j.plugin=function(e,t){let r,s=!1;function n(...r){console&&console.warn&&!s&&(s=!0,console.warn(e+": postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration"));let n=t(...r);return n.postcssPlugin=e,n.postcssVersion=(new i).version,n}return Object.defineProperty(n,"postcss",{get:()=>(r||(r=n()),r)}),n.process=function(e,t,r){return j([n(r)]).process(e,t)},n},j.stringify=a,j.parse=m,j.fromJSON=l,j.list=v,j.comment=e=>new p(e),j.atRule=e=>new h(e),j.decl=e=>new s(e),j.rule=e=>new O(e),j.root=e=>new E(e),j.document=e=>new u(e),j.CssSyntaxError=r,j.Declaration=s,j.Container=o,j.Processor=i,j.Document=u,j.Comment=p,j.Warning=c,j.AtRule=h,j.Result=f,j.Input=d,j.Rule=O,j.Root=E,j.Node=A,n.registerPostcss(j),t.exports=j,j.default=j})),X=u(((e,t)=>{var{Container:r}=K();t.exports=class extends r{constructor(e){super(e),this.type="decl",this.isNested=!0,this.nodes||(this.nodes=[])}}})),Z=u(((e,t)=>{var r=/[\t\n\f\r "#'()/;[\\\]{}]/g,s=/[,\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g,n=/.[\r\n"'(/\\]/,o=/[\da-f]/i,i=/[\n\f\r]/g;t.exports=function(e,t={}){let a,l,u,c,p,h,f,d,m,y,v=e.css.valueOf(),g=t.ignoreErrors,w=v.length,b=0,x=[],k=[];function O(t){throw e.error("Unclosed "+t,b)}function T(){let e=1,t=!1,r=!1;for(;e>0;)l+=1,v.length<=l&&O("interpolation"),a=v.charCodeAt(l),d=v.charCodeAt(l+1),t?r||a!==t?92===a?r=!r:r&&(r=!1):(t=!1,r=!1):39===a||34===a?t=a:125===a?e-=1:35===a&&123===d&&(e+=1)}return{back:function(e){k.push(e)},endOfFile:function(){return 0===k.length&&b>=w},nextToken:function(e){if(k.length)return k.pop();if(b>=w)return;let t=!!e&&e.ignoreUnclosed;switch(a=v.charCodeAt(b),a){case 10:case 32:case 9:case 13:case 12:l=b;do{l+=1,a=v.charCodeAt(l)}while(32===a||10===a||9===a||13===a||12===a);m=["space",v.slice(b,l)],b=l-1;break;case 91:case 93:case 123:case 125:case 58:case 59:case 41:{let e=String.fromCharCode(a);m=[e,e,b];break}case 44:m=["word",",",b,b+1];break;case 40:if(f=x.length?x.pop()[1]:"",d=v.charCodeAt(b+1),"url"===f&&39!==d&&34!==d){for(y=1,h=!1,l=b+1;l<=v.length-1;){if(d=v.charCodeAt(l),92===d)h=!h;else if(40===d)y+=1;else if(41===d&&(y-=1,0===y))break;l+=1}c=v.slice(b,l+1),m=["brackets",c,b,l],b=l}else l=v.indexOf(")",b+1),c=v.slice(b,l+1),-1===l||n.test(c)?m=["(","(",b]:(m=["brackets",c,b,l],b=l);break;case 39:case 34:for(u=a,l=b,h=!1;l<w&&(l++,l===w&&O("string"),a=v.charCodeAt(l),d=v.charCodeAt(l+1),h||a!==u);)92===a?h=!h:h?h=!1:35===a&&123===d&&T();m=["string",v.slice(b,l+1),b,l],b=l;break;case 64:r.lastIndex=b+1,r.test(v),l=0===r.lastIndex?v.length-1:r.lastIndex-2,m=["at-word",v.slice(b,l+1),b,l],b=l;break;case 92:for(l=b,p=!0;92===v.charCodeAt(l+1);)l+=1,p=!p;if(a=v.charCodeAt(l+1),p&&47!==a&&32!==a&&10!==a&&9!==a&&13!==a&&12!==a&&(l+=1,o.test(v.charAt(l)))){for(;o.test(v.charAt(l+1));)l+=1;32===v.charCodeAt(l+1)&&(l+=1)}m=["word",v.slice(b,l+1),b,l],b=l;break;default:d=v.charCodeAt(b+1),35===a&&123===d?(l=b,T(),c=v.slice(b,l+1),m=["word",c,b,l],b=l):47===a&&42===d?(l=v.indexOf("*/",b+2)+1,0===l&&(g||t?l=v.length:O("comment")),m=["comment",v.slice(b,l+1),b,l],b=l):47===a&&47===d?(i.lastIndex=b+1,i.test(v),l=0===i.lastIndex?v.length-1:i.lastIndex-2,c=v.slice(b,l+1),m=["comment",c,b,l,"inline"],b=l):(s.lastIndex=b+1,s.test(v),l=0===s.lastIndex?v.length-1:s.lastIndex-2,m=["word",v.slice(b,l+1),b,l],x.push(m),b=l)}return b++,m},position:function(){return b}}}})),ee=u(((e,t)=>{var{Comment:r}=K(),s=E(),n=X(),o=Z();t.exports=class extends s{atrule(e){let t=e[1],r=e;for(;!this.tokenizer.endOfFile();){let e=this.tokenizer.nextToken();if("word"!==e[0]||e[2]!==r[3]+1){this.tokenizer.back(e);break}t+=e[1],r=e}super.atrule(["at-word",t,e[2],r[3]])}comment(e){if("inline"===e[4]){let t=new r;this.init(t,e[2]),t.raws.inline=!0;let s=this.input.fromOffset(e[3]);t.source.end={column:s.col,line:s.line,offset:e[3]+1};let n=e[1].slice(2);if(/^\s*$/.test(n))t.text="",t.raws.left=n,t.raws.right="";else{let e=n.match(/^(\s*)([^]*\S)(\s*)$/),r=e[2].replace(/(\*\/|\/\*)/g,"*//*");t.text=r,t.raws.left=e[1],t.raws.right=e[3],t.raws.text=e[2]}}else super.comment(e)}createTokenizer(){this.tokenizer=o(this.input)}raw(e,t,r,s){if(super.raw(e,t,r,s),e.raws[t]){let s=e.raws[t].raw;e.raws[t].raw=r.reduce(((e,t)=>{if("comment"===t[0]&&"inline"===t[4]){return e+"/*"+t[1].slice(2).replace(/(\*\/|\/\*)/g,"*//*")+"*/"}return e+t[1]}),""),s!==e.raws[t].raw&&(e.raws[t].scss=s)}}rule(e){let t=!1,r=0,s="";for(let n of e)if(t)"comment"!==n[0]&&"{"!==n[0]&&(s+=n[1]);else{if("space"===n[0]&&n[1].includes("\n"))break;"("===n[0]?r+=1:")"===n[0]?r-=1:0===r&&":"===n[0]&&(t=!0)}if(!t||""===s.trim()||/^[#:A-Za-z-]/.test(s))super.rule(e);else{e.pop();let t,r,s=new n;this.init(s,e[0][2]);for(let r=e.length-1;r>=0;r--)if("space"!==e[r][0]){t=e[r];break}if(t[3]){let e=this.input.fromOffset(t[3]);s.source.end={column:e.col,line:e.line,offset:t[3]+1}}else{let e=this.input.fromOffset(t[2]);s.source.end={column:e.col,line:e.line,offset:t[2]+1}}for(;"word"!==e[0][0];)s.raws.before+=e.shift()[1];if(e[0][2]){let t=this.input.fromOffset(e[0][2]);s.source.start={column:t.col,line:t.line,offset:e[0][2]}}for(s.prop="";e.length;){let t=e[0][0];if(":"===t||"space"===t||"comment"===t)break;s.prop+=e.shift()[1]}for(s.raws.between="";e.length;){if(r=e.shift(),":"===r[0]){s.raws.between+=r[1];break}s.raws.between+=r[1]}("_"===s.prop[0]||"*"===s.prop[0])&&(s.raws.before+=s.prop[0],s.prop=s.prop.slice(1)),s.raws.between+=this.spacesAndCommentsFromStart(e),this.precheckMissedSemicolon(e);for(let t=e.length-1;t>0;t--){if(r=e[t],"!important"===r[1]){s.important=!0;let r=this.stringFrom(e,t);r=this.spacesFromEnd(e)+r," !important"!==r&&(s.raws.important=r);break}if("important"===r[1]){let r=e.slice(0),n="";for(let e=t;e>0;e--){let t=r[e][0];if(0===n.trim().indexOf("!")&&"space"!==t)break;n=r.pop()[1]+n}0===n.trim().indexOf("!")&&(s.important=!0,s.raws.important=n,e=r)}if("space"!==r[0]&&"comment"!==r[0])break}this.raw(s,"value",e),s.value.includes(":")&&this.checkMissedSemicolon(e),this.current=s}}}})),te=u(((e,t)=>{var{Input:r}=K(),s=ee();t.exports=function(e,t){let n=new r(e,t),o=new s(n);return o.parse(),o.root}})),re=u((e=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e){this.after=e.after,this.before=e.before,this.type=e.type,this.value=e.value,this.sourceIndex=e.sourceIndex}})),se=u((e=>{Object.defineProperty(e,"__esModule",{value:!0});var t,r=re(),s=(t=r)&&t.__esModule?t:{default:t};function n(e){var t=this;this.constructor(e),this.nodes=e.nodes,void 0===this.after&&(this.after=this.nodes.length>0?this.nodes[this.nodes.length-1].after:""),void 0===this.before&&(this.before=this.nodes.length>0?this.nodes[0].before:""),void 0===this.sourceIndex&&(this.sourceIndex=this.before.length),this.nodes.forEach((function(e){e.parent=t}))}n.prototype=Object.create(s.default.prototype),n.constructor=s.default,n.prototype.walk=function(e,t){for(var r="string"==typeof e||e instanceof RegExp,s=r?t:e,n="string"==typeof e?new RegExp(e):e,o=0;o<this.nodes.length;o++){var i=this.nodes[o];if((!r||n.test(i.type))&&s&&!1===s(i,o,this.nodes)||i.nodes&&!1===i.walk(e,t))return!1}return!0},n.prototype.each=function(){for(var e=arguments.length<=0||void 0===arguments[0]?function(){}:arguments[0],t=0;t<this.nodes.length;t++){if(!1===e(this.nodes[t],t,this.nodes))return!1}return!0},e.default=n})),ne=u((e=>{Object.defineProperty(e,"__esModule",{value:!0}),e.parseMediaFeature=n,e.parseMediaQuery=o,e.parseMediaList=function(e){var s=[],n=0,i=0,a=/^(\s*)url\s*\(/.exec(e);if(null!==a){for(var l=a[0].length,u=1;u>0;){var c=e[l];"("===c&&u++,")"===c&&u--,l++}s.unshift(new t.default({type:"url",value:e.substring(0,l).trim(),sourceIndex:a[1].length,before:a[1],after:/^(\s*)/.exec(e.substring(l))[1]})),n=l}for(var p=n;p<e.length;p++){var h=e[p];if("("===h&&i++,")"===h&&i--,0===i&&","===h){var f=e.substring(n,p),d=/^(\s*)/.exec(f)[1];s.push(new r.default({type:"media-query",value:f.trim(),sourceIndex:n+d.length,nodes:o(f,n),before:d,after:/(\s*)$/.exec(f)[1]})),n=p+1}}var m=e.substring(n),y=/^(\s*)/.exec(m)[1];return s.push(new r.default({type:"media-query",value:m.trim(),sourceIndex:n+y.length,nodes:o(m,n),before:y,after:/(\s*)$/.exec(m)[1]})),s};var t=s(re()),r=s(se());function s(e){return e&&e.__esModule?e:{default:e}}function n(e){var t=[{mode:"normal",character:null}],r=[],s=0,n="",o=null,i=null,a=arguments.length<=1||void 0===arguments[1]?0:arguments[1],l=e;"("===e[0]&&")"===e[e.length-1]&&(l=e.substring(1,e.length-1),a++);for(var u=0;u<l.length;u++){var c=l[u];if(("'"===c||'"'===c)&&(!0===t[s].isCalculationEnabled?(t.push({mode:"string",isCalculationEnabled:!1,character:c}),s++):"string"===t[s].mode&&t[s].character===c&&"\\"!==l[u-1]&&(t.pop(),s--)),"{"===c?(t.push({mode:"interpolation",isCalculationEnabled:!0}),s++):"}"===c&&(t.pop(),s--),"normal"===t[s].mode&&":"===c){var p=l.substring(u+1);(i={type:"value",before:/^(\s*)/.exec(p)[1],after:/(\s*)$/.exec(p)[1],value:p.trim()}).sourceIndex=i.before.length+u+1+a,o={type:"colon",sourceIndex:u+a,after:i.before,value:":"};break}n+=c}return(n={type:"media-feature",before:/^(\s*)/.exec(n)[1],after:/(\s*)$/.exec(n)[1],value:n.trim()}).sourceIndex=n.before.length+a,r.push(n),null!==o&&(o.before=n.after,r.push(o)),null!==i&&r.push(i),r}function o(e){var s=arguments.length<=1||void 0===arguments[1]?0:arguments[1],o=[],i=0,a=!1,l=void 0;l={before:"",after:"",value:""};for(var u=0;u<e.length;u++){var c=e[u];a?(l.value+=c,("{"===c||"("===c)&&i++,(")"===c||"}"===c)&&i--):-1!==c.search(/\s/)?l.before+=c:("("===c&&(l.type="media-feature-expression",i++),l.value=c,l.sourceIndex=s+u,a=!0),a&&0===i&&(")"===c||u===e.length-1||-1!==e[u+1].search(/\s/))&&(-1!==["not","only","and"].indexOf(l.value)&&(l.type="keyword"),"media-feature-expression"===l.type&&(l.nodes=n(l.value,l.sourceIndex)),o.push(Array.isArray(l.nodes)?new r.default(l):new t.default(l)),l={before:"",after:"",value:""},a=!1)}for(var p=0;p<o.length;p++)if(l=o[p],p>0&&(o[p-1].after=l.before),void 0===l.type){if(p>0){if("media-feature-expression"===o[p-1].type){l.type="keyword";continue}if("not"===o[p-1].value||"only"===o[p-1].value){l.type="media-type";continue}if("and"===o[p-1].value){l.type="media-feature-expression";continue}"media-type"===o[p-1].type&&(o[p+1]?l.type="media-feature-expression"===o[p+1].type?"keyword":"media-feature-expression":l.type="media-feature-expression")}if(0===p){if(!o[p+1]){l.type="media-type";continue}if(o[p+1]&&("media-feature-expression"===o[p+1].type||"keyword"===o[p+1].type)){l.type="media-type";continue}if(o[p+2]){if("media-feature-expression"===o[p+2].type){l.type="media-type",o[p+1].type="keyword";continue}if("keyword"===o[p+2].type){l.type="keyword",o[p+1].type="media-type";continue}}if(o[p+3]&&"media-feature-expression"===o[p+3].type){l.type="keyword",o[p+1].type="media-type",o[p+2].type="keyword";continue}}}return o}})),oe=u((e=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(e){return new s.default({nodes:(0,n.parseMediaList)(e),type:"media-query-list",value:e.trim()})};var t,r=se(),s=(t=r)&&t.__esModule?t:{default:t},n=ne()})),ie=u(((e,t)=>{t.exports=function(e,t){return(t="number"==typeof t?t:1/0)?function e(r,s){return r.reduce((function(r,n){return Array.isArray(n)&&s<t?r.concat(e(n,s+1)):r.concat(n)}),[])}(e,1):Array.isArray(e)?e.map((function(e){return e})):e}})),ae=u(((e,t)=>{t.exports=function(e,t){for(var r=-1,s=[];-1!==(r=e.indexOf(t,r+1));)s.push(r);return s}})),le=u(((e,t)=>{t.exports=function(e,t,r){return 0===e.length?e:t?(r||e.sort(t),function(e,t){for(var r=1,s=e.length,n=e[0],o=e[0],i=1;i<s;++i)if(o=n,t(n=e[i],o)){if(i===r){r++;continue}e[r++]=n}return e.length=r,e}(e,t)):(r||e.sort(),function(e){for(var t=1,r=e.length,s=e[0],n=e[0],o=1;o<r;++o,n=s)if(n=s,(s=e[o])!==n){if(o===t){t++;continue}e[t++]=s}return e.length=t,e}(e))}})),ue=u(((e,t)=>{e.__esModule=!0;var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};var s=function e(t,s){if("object"!==(typeof t>"u"?"undefined":r(t)))return t;var n=new t.constructor;for(var o in t)if(t.hasOwnProperty(o)){var i=t[o],a=typeof i>"u"?"undefined":r(i);"parent"===o&&"object"===a?s&&(n[o]=s):n[o]=i instanceof Array?i.map((function(t){return e(t,n)})):e(i,n)}return n},n=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var r in function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t)this[r]=t[r];var s=t.spaces,n=(s=void 0===s?{}:s).before,o=void 0===n?"":n,i=s.after,a=void 0===i?"":i;this.spaces={before:o,after:a}}return e.prototype.remove=function(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this},e.prototype.replaceWith=function(){if(this.parent){for(var e in arguments)this.parent.insertBefore(this,arguments[e]);this.remove()}return this},e.prototype.next=function(){return this.parent.at(this.parent.index(this)+1)},e.prototype.prev=function(){return this.parent.at(this.parent.index(this)-1)},e.prototype.clone=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=s(this);for(var r in e)t[r]=e[r];return t},e.prototype.toString=function(){return[this.spaces.before,String(this.value),this.spaces.after].join("")},e}();e.default=n,t.exports=e.default})),ce=u((e=>{e.__esModule=!0;e.TAG="tag",e.STRING="string",e.SELECTOR="selector",e.ROOT="root",e.PSEUDO="pseudo",e.NESTING="nesting",e.ID="id",e.COMMENT="comment",e.COMBINATOR="combinator",e.CLASS="class",e.ATTRIBUTE="attribute",e.UNIVERSAL="universal"})),pe=u(((e,t)=>{e.__esModule=!0;var r,s=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),n=ue(),o=(r=n)&&r.__esModule?r:{default:r},i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(ce());var a=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.nodes||(s.nodes=[]),s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.append=function(e){return e.parent=this,this.nodes.push(e),this},t.prototype.prepend=function(e){return e.parent=this,this.nodes.unshift(e),this},t.prototype.at=function(e){return this.nodes[e]},t.prototype.index=function(e){return"number"==typeof e?e:this.nodes.indexOf(e)},t.prototype.removeChild=function(e){e=this.index(e),this.at(e).parent=void 0,this.nodes.splice(e,1);var t=void 0;for(var r in this.indexes)(t=this.indexes[r])>=e&&(this.indexes[r]=t-1);return this},t.prototype.removeAll=function(){var e=this.nodes,t=Array.isArray(e),r=0;for(e=t?e:e[Symbol.iterator]();;){var s;if(t){if(r>=e.length)break;s=e[r++]}else{if((r=e.next()).done)break;s=r.value}s.parent=void 0}return this.nodes=[],this},t.prototype.empty=function(){return this.removeAll()},t.prototype.insertAfter=function(e,t){var r=this.index(e);this.nodes.splice(r+1,0,t);var s=void 0;for(var n in this.indexes)r<=(s=this.indexes[n])&&(this.indexes[n]=s+this.nodes.length);return this},t.prototype.insertBefore=function(e,t){var r=this.index(e);this.nodes.splice(r,0,t);var s=void 0;for(var n in this.indexes)r<=(s=this.indexes[n])&&(this.indexes[n]=s+this.nodes.length);return this},t.prototype.each=function(e){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach++;var t=this.lastEach;if(this.indexes[t]=0,this.length){for(var r=void 0,s=void 0;this.indexes[t]<this.length&&(r=this.indexes[t],!1!==(s=e(this.at(r),r)));)this.indexes[t]+=1;if(delete this.indexes[t],!1===s)return!1}},t.prototype.walk=function(e){return this.each((function(t,r){var s=e(t,r);if(!1!==s&&t.length&&(s=t.walk(e)),!1===s)return!1}))},t.prototype.walkAttributes=function(e){var t=this;return this.walk((function(r){if(r.type===i.ATTRIBUTE)return e.call(t,r)}))},t.prototype.walkClasses=function(e){var t=this;return this.walk((function(r){if(r.type===i.CLASS)return e.call(t,r)}))},t.prototype.walkCombinators=function(e){var t=this;return this.walk((function(r){if(r.type===i.COMBINATOR)return e.call(t,r)}))},t.prototype.walkComments=function(e){var t=this;return this.walk((function(r){if(r.type===i.COMMENT)return e.call(t,r)}))},t.prototype.walkIds=function(e){var t=this;return this.walk((function(r){if(r.type===i.ID)return e.call(t,r)}))},t.prototype.walkNesting=function(e){var t=this;return this.walk((function(r){if(r.type===i.NESTING)return e.call(t,r)}))},t.prototype.walkPseudos=function(e){var t=this;return this.walk((function(r){if(r.type===i.PSEUDO)return e.call(t,r)}))},t.prototype.walkTags=function(e){var t=this;return this.walk((function(r){if(r.type===i.TAG)return e.call(t,r)}))},t.prototype.walkUniversals=function(e){var t=this;return this.walk((function(r){if(r.type===i.UNIVERSAL)return e.call(t,r)}))},t.prototype.split=function(e){var t=this,r=[];return this.reduce((function(s,n,o){var i=e.call(t,n);return r.push(n),i?(s.push(r),r=[]):o===t.length-1&&s.push(r),s}),[])},t.prototype.map=function(e){return this.nodes.map(e)},t.prototype.reduce=function(e,t){return this.nodes.reduce(e,t)},t.prototype.every=function(e){return this.nodes.every(e)},t.prototype.some=function(e){return this.nodes.some(e)},t.prototype.filter=function(e){return this.nodes.filter(e)},t.prototype.sort=function(e){return this.nodes.sort(e)},t.prototype.toString=function(){return this.map(String).join("")},s(t,[{key:"first",get:function(){return this.at(0)}},{key:"last",get:function(){return this.at(this.length-1)}},{key:"length",get:function(){return this.nodes.length}}]),t}(o.default);e.default=a,t.exports=e.default})),he=u(((e,t)=>{e.__esModule=!0;var r,s=pe(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.ROOT,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){var e=this.reduce((function(e,t){var r=String(t);return r?e+r+",":""}),"").slice(0,-1);return this.trailingComma?e+",":e},t}(n.default);e.default=i,t.exports=e.default})),fe=u(((e,t)=>{e.__esModule=!0;var r,s=pe(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.SELECTOR,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),de=u(((e,t)=>{e.__esModule=!0;var r,s=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),n=ue();var o=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){return[this.spaces.before,this.ns,String(this.value),this.spaces.after].join("")},s(t,[{key:"ns",get:function(){var e=this.namespace;return e?("string"==typeof e?e:"")+"|":""}}]),t}(((r=n)&&r.__esModule?r:{default:r}).default);e.default=o,t.exports=e.default})),me=u(((e,t)=>{e.__esModule=!0;var r,s=de(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.CLASS,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){return[this.spaces.before,this.ns,"."+this.value,this.spaces.after].join("")},t}(n.default);e.default=i,t.exports=e.default})),ye=u(((e,t)=>{e.__esModule=!0;var r,s=ue(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.COMMENT,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),ve=u(((e,t)=>{e.__esModule=!0;var r,s=de(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.ID,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){return[this.spaces.before,this.ns,"#"+this.value,this.spaces.after].join("")},t}(n.default);e.default=i,t.exports=e.default})),ge=u(((e,t)=>{e.__esModule=!0;var r,s=de(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.TAG,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),we=u(((e,t)=>{e.__esModule=!0;var r,s=ue(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.STRING,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),be=u(((e,t)=>{e.__esModule=!0;var r,s=pe(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.PSEUDO,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){var e=this.length?"("+this.map(String).join(",")+")":"";return[this.spaces.before,String(this.value),e,this.spaces.after].join("")},t}(n.default);e.default=i,t.exports=e.default})),xe=u(((e,t)=>{e.__esModule=!0;var r,s=de(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.ATTRIBUTE,s.raws={},s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t.prototype.toString=function(){var e=[this.spaces.before,"[",this.ns,this.attribute];return this.operator&&e.push(this.operator),this.value&&e.push(this.value),this.raws.insensitive?e.push(this.raws.insensitive):this.insensitive&&e.push(" i"),e.push("]"),e.concat(this.spaces.after).join("")},t}(n.default);e.default=i,t.exports=e.default})),ke=u(((e,t)=>{e.__esModule=!0;var r,s=de(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.UNIVERSAL,s.value="*",s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),Oe=u(((e,t)=>{e.__esModule=!0;var r,s=ue(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.COMBINATOR,s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),Te=u(((e,t)=>{e.__esModule=!0;var r,s=ue(),n=(r=s)&&r.__esModule?r:{default:r},o=ce();var i=function(e){function t(r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var s=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,r));return s.type=o.NESTING,s.value="&",s}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,e),t}(n.default);e.default=i,t.exports=e.default})),_e=u(((e,t)=>{e.__esModule=!0,e.default=function(e){return e.sort((function(e,t){return e-t}))},t.exports=e.default})),Ce=u(((e,t)=>{e.__esModule=!0,e.default=function(e){for(var t=[],S=e.css.valueOf(),E=void 0,A=void 0,j=void 0,I=void 0,P=void 0,M=void 0,N=void 0,R=void 0,$=void 0,L=void 0,W=void 0,z=S.length,q=-1,B=1,D=0,U=function(t,r){if(!e.safe)throw e.error("Unclosed "+t,B,D-q,D);A=(S+=r).length-1};D<z;){switch((E=S.charCodeAt(D))===i&&(q=D,B+=1),E){case i:case a:case u:case c:case l:A=D;do{A+=1,(E=S.charCodeAt(A))===i&&(q=A,B+=1)}while(E===a||E===i||E===u||E===c||E===l);t.push(["space",S.slice(D,A),B,D-q,D]),D=A-1;break;case p:case h:case f:case d:A=D;do{A+=1,E=S.charCodeAt(A)}while(E===p||E===h||E===f||E===d);t.push(["combinator",S.slice(D,A),B,D-q,D]),D=A-1;break;case x:t.push(["*","*",B,D-q,D]);break;case O:t.push(["&","&",B,D-q,D]);break;case m:t.push([",",",",B,D-q,D]);break;case g:t.push(["[","[",B,D-q,D]);break;case w:t.push(["]","]",B,D-q,D]);break;case k:t.push([":",":",B,D-q,D]);break;case b:t.push([";",";",B,D-q,D]);break;case y:t.push(["(","(",B,D-q,D]);break;case v:t.push([")",")",B,D-q,D]);break;case r:case s:j=E===r?"'":'"',A=D;do{for(L=!1,-1===(A=S.indexOf(j,A+1))&&U("quote",j),W=A;S.charCodeAt(W-1)===n;)W-=1,L=!L}while(L);t.push(["string",S.slice(D,A+1),B,D-q,B,A-q,D]),D=A;break;case T:_.lastIndex=D+1,_.test(S),A=0===_.lastIndex?S.length-1:_.lastIndex-2,t.push(["at-word",S.slice(D,A+1),B,D-q,B,A-q,D]),D=A;break;case n:for(A=D,N=!0;S.charCodeAt(A+1)===n;)A+=1,N=!N;E=S.charCodeAt(A+1),N&&E!==o&&E!==a&&E!==i&&E!==u&&E!==c&&E!==l&&(A+=1),t.push(["word",S.slice(D,A+1),B,D-q,B,A-q,D]),D=A;break;default:E===o&&S.charCodeAt(D+1)===x?(0===(A=S.indexOf("*/",D+2)+1)&&U("comment","*/"),(P=(I=(M=S.slice(D,A+1)).split("\n")).length-1)>0?(R=B+P,$=A-I[P].length):(R=B,$=q),t.push(["comment",M,B,D-q,R,A-$,D]),q=$,B=R,D=A):(C.lastIndex=D+1,C.test(S),A=0===C.lastIndex?S.length-1:C.lastIndex-2,t.push(["word",S.slice(D,A+1),B,D-q,B,A-q,D]),D=A)}D++}return t};var r=39,s=34,n=92,o=47,i=10,a=32,l=12,u=9,c=13,p=43,h=62,f=126,d=124,m=44,y=40,v=41,g=91,w=93,b=59,x=42,k=58,O=38,T=64,_=/[ \n\t\r\{\(\)'"\\;/]/g,C=/[ \n\t\r\(\)\*:;@!&'"\+\|~>,\[\]\\]|\/(?=\*)/g;t.exports=e.default})),Se=u(((e,t)=>{e.__esModule=!0;var r=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),s=x(ie()),n=x(ae()),o=x(le()),i=x(he()),a=x(fe()),l=x(me()),u=x(ye()),c=x(ve()),p=x(ge()),h=x(we()),f=x(be()),d=x(xe()),m=x(ke()),y=x(Oe()),v=x(Te()),g=x(_e()),w=x(Ce()),b=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}(ce());function x(e){return e&&e.__esModule?e:{default:e}}var k=function(){function e(t){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),this.input=t,this.lossy=!1===t.options.lossless,this.position=0,this.root=new i.default;var r=new a.default;return this.root.append(r),this.current=r,this.lossy?this.tokens=(0,w.default)({safe:t.safe,css:t.css.trim()}):this.tokens=(0,w.default)(t),this.loop()}return e.prototype.attribute=function(){var e="",t=void 0,r=this.currToken;for(this.position++;this.position<this.tokens.length&&"]"!==this.currToken[0];)e+=this.tokens[this.position][1],this.position++;this.position===this.tokens.length&&!~e.indexOf("]")&&this.error("Expected a closing square bracket.");var s=e.split(/((?:[*~^$|]?=))([^]*)/),n=s[0].split(/(\|)/g),o={operator:s[1],value:s[2],source:{start:{line:r[2],column:r[3]},end:{line:this.currToken[2],column:this.currToken[3]}},sourceIndex:r[4]};if(n.length>1?(""===n[0]&&(n[0]=!0),o.attribute=this.parseValue(n[2]),o.namespace=this.parseNamespace(n[0])):o.attribute=this.parseValue(s[0]),t=new d.default(o),s[2]){var i=s[2].split(/(\s+i\s*?)$/),a=i[0].trim();t.value=this.lossy?a:i[0],i[1]&&(t.insensitive=!0,this.lossy||(t.raws.insensitive=i[1])),t.quoted="'"===a[0]||'"'===a[0],t.raws.unquoted=t.quoted?a.slice(1,-1):a}this.newNode(t),this.position++},e.prototype.combinator=function(){if("|"===this.currToken[1])return this.namespace();for(var e=new y.default({value:"",source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[2],column:this.currToken[3]}},sourceIndex:this.currToken[4]});this.position<this.tokens.length&&this.currToken&&("space"===this.currToken[0]||"combinator"===this.currToken[0]);)this.nextToken&&"combinator"===this.nextToken[0]?(e.spaces.before=this.parseSpace(this.currToken[1]),e.source.start.line=this.nextToken[2],e.source.start.column=this.nextToken[3],e.source.end.column=this.nextToken[3],e.source.end.line=this.nextToken[2],e.sourceIndex=this.nextToken[4]):this.prevToken&&"combinator"===this.prevToken[0]?e.spaces.after=this.parseSpace(this.currToken[1]):"combinator"===this.currToken[0]?e.value=this.currToken[1]:"space"===this.currToken[0]&&(e.value=this.parseSpace(this.currToken[1]," ")),this.position++;return this.newNode(e)},e.prototype.comma=function(){if(this.position===this.tokens.length-1)return this.root.trailingComma=!0,void this.position++;var e=new a.default;this.current.parent.append(e),this.current=e,this.position++},e.prototype.comment=function(){var e=new u.default({value:this.currToken[1],source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[4],column:this.currToken[5]}},sourceIndex:this.currToken[6]});this.newNode(e),this.position++},e.prototype.error=function(e){throw new this.input.error(e)},e.prototype.missingBackslash=function(){return this.error("Expected a backslash preceding the semicolon.")},e.prototype.missingParenthesis=function(){return this.error("Expected opening parenthesis.")},e.prototype.missingSquareBracket=function(){return this.error("Expected opening square bracket.")},e.prototype.namespace=function(){var e=this.prevToken&&this.prevToken[1]||!0;return"word"===this.nextToken[0]?(this.position++,this.word(e)):"*"===this.nextToken[0]?(this.position++,this.universal(e)):void 0},e.prototype.nesting=function(){this.newNode(new v.default({value:this.currToken[1],source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[2],column:this.currToken[3]}},sourceIndex:this.currToken[4]})),this.position++},e.prototype.parentheses=function(){var e=this.current.last;if(e&&e.type===b.PSEUDO){var t=new a.default,r=this.current;e.append(t),this.current=t;var s=1;for(this.position++;this.position<this.tokens.length&&s;)"("===this.currToken[0]&&s++,")"===this.currToken[0]&&s--,s?this.parse():(t.parent.source.end.line=this.currToken[2],t.parent.source.end.column=this.currToken[3],this.position++);s&&this.error("Expected closing parenthesis."),this.current=r}else{var n=1;for(this.position++,e.value+="(";this.position<this.tokens.length&&n;)"("===this.currToken[0]&&n++,")"===this.currToken[0]&&n--,e.value+=this.parseParenthesisToken(this.currToken),this.position++;n&&this.error("Expected closing parenthesis.")}},e.prototype.pseudo=function(){for(var e=this,t="",r=this.currToken;this.currToken&&":"===this.currToken[0];)t+=this.currToken[1],this.position++;if(!this.currToken)return this.error("Expected pseudo-class or pseudo-element");if("word"===this.currToken[0]){var s=void 0;this.splitWord(!1,(function(n,o){t+=n,s=new f.default({value:t,source:{start:{line:r[2],column:r[3]},end:{line:e.currToken[4],column:e.currToken[5]}},sourceIndex:r[4]}),e.newNode(s),o>1&&e.nextToken&&"("===e.nextToken[0]&&e.error("Misplaced parenthesis.")}))}else this.error('Unexpected "'+this.currToken[0]+'" found.')},e.prototype.space=function(){var e=this.currToken;0===this.position||","===this.prevToken[0]||"("===this.prevToken[0]?(this.spaces=this.parseSpace(e[1]),this.position++):this.position===this.tokens.length-1||","===this.nextToken[0]||")"===this.nextToken[0]?(this.current.last.spaces.after=this.parseSpace(e[1]),this.position++):this.combinator()},e.prototype.string=function(){var e=this.currToken;this.newNode(new h.default({value:this.currToken[1],source:{start:{line:e[2],column:e[3]},end:{line:e[4],column:e[5]}},sourceIndex:e[6]})),this.position++},e.prototype.universal=function(e){var t=this.nextToken;if(t&&"|"===t[1])return this.position++,this.namespace();this.newNode(new m.default({value:this.currToken[1],source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[2],column:this.currToken[3]}},sourceIndex:this.currToken[4]}),e),this.position++},e.prototype.splitWord=function(e,t){for(var r=this,i=this.nextToken,a=this.currToken[1];i&&"word"===i[0];){this.position++;var u=this.currToken[1];if(a+=u,u.lastIndexOf("\\")===u.length-1){var h=this.nextToken;h&&"space"===h[0]&&(a+=this.parseSpace(h[1]," "),this.position++)}i=this.nextToken}var f=(0,n.default)(a,"."),d=(0,n.default)(a,"#"),m=(0,n.default)(a,"#{");m.length&&(d=d.filter((function(e){return!~m.indexOf(e)})));var y=(0,g.default)((0,o.default)((0,s.default)([[0],f,d])));y.forEach((function(s,n){var o=y[n+1]||a.length,i=a.slice(s,o);if(0===n&&t)return t.call(r,i,y.length);var u=void 0;u=~f.indexOf(s)?new l.default({value:i.slice(1),source:{start:{line:r.currToken[2],column:r.currToken[3]+s},end:{line:r.currToken[4],column:r.currToken[3]+(o-1)}},sourceIndex:r.currToken[6]+y[n]}):~d.indexOf(s)?new c.default({value:i.slice(1),source:{start:{line:r.currToken[2],column:r.currToken[3]+s},end:{line:r.currToken[4],column:r.currToken[3]+(o-1)}},sourceIndex:r.currToken[6]+y[n]}):new p.default({value:i,source:{start:{line:r.currToken[2],column:r.currToken[3]+s},end:{line:r.currToken[4],column:r.currToken[3]+(o-1)}},sourceIndex:r.currToken[6]+y[n]}),r.newNode(u,e)})),this.position++},e.prototype.word=function(e){var t=this.nextToken;return t&&"|"===t[1]?(this.position++,this.namespace()):this.splitWord(e)},e.prototype.loop=function(){for(;this.position<this.tokens.length;)this.parse(!0);return this.root},e.prototype.parse=function(e){switch(this.currToken[0]){case"space":this.space();break;case"comment":this.comment();break;case"(":this.parentheses();break;case")":e&&this.missingParenthesis();break;case"[":this.attribute();break;case"]":this.missingSquareBracket();break;case"at-word":case"word":this.word();break;case":":this.pseudo();break;case";":this.missingBackslash();break;case",":this.comma();break;case"*":this.universal();break;case"&":this.nesting();break;case"combinator":this.combinator();break;case"string":this.string()}},e.prototype.parseNamespace=function(e){if(this.lossy&&"string"==typeof e){var t=e.trim();return!t.length||t}return e},e.prototype.parseSpace=function(e,t){return this.lossy?t||"":e},e.prototype.parseValue=function(e){return this.lossy&&e&&"string"==typeof e?e.trim():e},e.prototype.parseParenthesisToken=function(e){return this.lossy?"space"===e[0]?this.parseSpace(e[1]," "):this.parseValue(e[1]):e[1]},e.prototype.newNode=function(e,t){return t&&(e.namespace=this.parseNamespace(t)),this.spaces&&(e.spaces.before=this.spaces,this.spaces=""),this.current.append(e)},r(e,[{key:"currToken",get:function(){return this.tokens[this.position]}},{key:"nextToken",get:function(){return this.tokens[this.position+1]}},{key:"prevToken",get:function(){return this.tokens[this.position-1]}}]),e}();e.default=k,t.exports=e.default})),Ee=u(((e,t)=>{e.__esModule=!0;var r,s=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),n=Se(),o=(r=n)&&r.__esModule?r:{default:r};var i=function(){function e(t){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.func=t||function(){},this}return e.prototype.process=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=new o.default({css:e,error:function(e){throw new Error(e)},options:t});return this.res=r,this.func(r),this},s(e,[{key:"result",get:function(){return String(this.res)}}]),e}();e.default=i,t.exports=e.default})),Ae=u(((e,t)=>{var r=function(e,t){let s=new e.constructor;for(let n in e){if(!e.hasOwnProperty(n))continue;let o=e[n],i=typeof o;"parent"===n&&"object"===i?t&&(s[n]=t):"source"===n?s[n]=o:o instanceof Array?s[n]=o.map((e=>r(e,s))):"before"!==n&&"after"!==n&&"between"!==n&&"semicolon"!==n&&("object"===i&&null!==o&&(o=r(o)),s[n]=o)}return s};t.exports=class{constructor(e){e=e||{},this.raws={before:"",after:""};for(let t in e)this[t]=e[t]}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}toString(){return[this.raws.before,String(this.value),this.raws.after].join("")}clone(e){e=e||{};let t=r(this);for(let r in e)t[r]=e[r];return t}cloneBefore(e){e=e||{};let t=this.clone(e);return this.parent.insertBefore(this,t),t}cloneAfter(e){e=e||{};let t=this.clone(e);return this.parent.insertAfter(this,t),t}replaceWith(){let e=Array.prototype.slice.call(arguments);if(this.parent){for(let t of e)this.parent.insertBefore(this,t);this.remove()}return this}moveTo(e){return this.cleanRaws(this.root()===e.root()),this.remove(),e.append(this),this}moveBefore(e){return this.cleanRaws(this.root()===e.root()),this.remove(),e.parent.insertBefore(e,this),this}moveAfter(e){return this.cleanRaws(this.root()===e.root()),this.remove(),e.parent.insertAfter(e,this),this}next(){let e=this.parent.index(this);return this.parent.nodes[e+1]}prev(){let e=this.parent.index(this);return this.parent.nodes[e-1]}toJSON(){let e={};for(let t in this){if(!this.hasOwnProperty(t)||"parent"===t)continue;let r=this[t];r instanceof Array?e[t]=r.map((e=>"object"==typeof e&&e.toJSON?e.toJSON():e)):"object"==typeof r&&r.toJSON?e[t]=r.toJSON():e[t]=r}return e}root(){let e=this;for(;e.parent;)e=e.parent;return e}cleanRaws(e){delete this.raws.before,delete this.raws.after,e||delete this.raws.between}positionInside(e){let t=this.toString(),r=this.source.start.column,s=this.source.start.line;for(let n=0;n<e;n++)"\n"===t[n]?(r=1,s+=1):r+=1;return{line:s,column:r}}positionBy(e){let t=this.source.start;if(Object(e).index)t=this.positionInside(e.index);else if(Object(e).word){let r=this.toString().indexOf(e.word);-1!==r&&(t=this.positionInside(r))}return t}}})),je=u(((e,t)=>{var r=Ae(),s=class extends r{constructor(e){super(e),this.nodes||(this.nodes=[])}push(e){return e.parent=this,this.nodes.push(e),this}each(e){this.lastEach||(this.lastEach=0),this.indexes||(this.indexes={}),this.lastEach+=1;let t,r,s=this.lastEach;if(this.indexes[s]=0,this.nodes){for(;this.indexes[s]<this.nodes.length&&(t=this.indexes[s],r=e(this.nodes[t],t),!1!==r);)this.indexes[s]+=1;return delete this.indexes[s],r}}walk(e){return this.each(((t,r)=>{let s=e(t,r);return!1!==s&&t.walk&&(s=t.walk(e)),s}))}walkType(e,t){if(!e||!t)throw new Error("Parameters {type} and {callback} are required.");let r="function"==typeof e;return this.walk(((s,n)=>{if(r&&s instanceof e||!r&&s.type===e)return t.call(this,s,n)}))}append(e){return e.parent=this,this.nodes.push(e),this}prepend(e){return e.parent=this,this.nodes.unshift(e),this}cleanRaws(e){if(super.cleanRaws(e),this.nodes)for(let t of this.nodes)t.cleanRaws(e)}insertAfter(e,t){let r,s=this.index(e);this.nodes.splice(s+1,0,t);for(let e in this.indexes)r=this.indexes[e],s<=r&&(this.indexes[e]=r+this.nodes.length);return this}insertBefore(e,t){let r,s=this.index(e);this.nodes.splice(s,0,t);for(let e in this.indexes)r=this.indexes[e],s<=r&&(this.indexes[e]=r+this.nodes.length);return this}removeChild(e){let t;e=this.index(e),this.nodes[e].parent=void 0,this.nodes.splice(e,1);for(let r in this.indexes)t=this.indexes[r],t>=e&&(this.indexes[r]=t-1);return this}removeAll(){for(let e of this.nodes)e.parent=void 0;return this.nodes=[],this}every(e){return this.nodes.every(e)}some(e){return this.nodes.some(e)}index(e){return"number"==typeof e?e:this.nodes.indexOf(e)}get first(){if(this.nodes)return this.nodes[0]}get last(){if(this.nodes)return this.nodes[this.nodes.length-1]}toString(){let e=this.nodes.map(String).join("");return this.value&&(e=this.value+e),this.raws.before&&(e=this.raws.before+e),this.raws.after&&(e+=this.raws.after),e}};s.registerWalker=e=>{let t="walk"+e.name;t.lastIndexOf("s")!==t.length-1&&(t+="s"),!s.prototype[t]&&(s.prototype[t]=function(t){return this.walkType(e,t)})},t.exports=s})),Ie=u(((e,t)=>{var r=je();t.exports=class extends r{constructor(e){super(e),this.type="root"}}})),Pe=u(((e,t)=>{var r=je();t.exports=class extends r{constructor(e){super(e),this.type="value",this.unbalanced=0}}})),Me=u(((e,t)=>{var r=je(),s=class extends r{constructor(e){super(e),this.type="atword"}toString(){this.quoted&&this.raws.quote;return[this.raws.before,"@",String.prototype.toString.call(this.value),this.raws.after].join("")}};r.registerWalker(s),t.exports=s})),Ne=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="colon"}};r.registerWalker(n),t.exports=n})),Re=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="comma"}};r.registerWalker(n),t.exports=n})),$e=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="comment",this.inline=Object(e).inline||!1}toString(){return[this.raws.before,this.inline?"//":"/*",String(this.value),this.inline?"":"*/",this.raws.after].join("")}};r.registerWalker(n),t.exports=n})),Le=u(((e,t)=>{var r=je(),s=class extends r{constructor(e){super(e),this.type="func",this.unbalanced=-1}};r.registerWalker(s),t.exports=s})),We=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="number",this.unit=Object(e).unit||""}toString(){return[this.raws.before,String(this.value),this.unit,this.raws.after].join("")}};r.registerWalker(n),t.exports=n})),ze=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="operator"}};r.registerWalker(n),t.exports=n})),qe=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="paren",this.parenType=""}};r.registerWalker(n),t.exports=n})),Be=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="string"}toString(){let e=this.quoted?this.raws.quote:"";return[this.raws.before,e,this.value+"",e,this.raws.after].join("")}};r.registerWalker(n),t.exports=n})),De=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="word"}};r.registerWalker(n),t.exports=n})),Ue=u(((e,t)=>{var r=je(),s=Ae(),n=class extends s{constructor(e){super(e),this.type="unicode-range"}};r.registerWalker(n),t.exports=n})),Fe=u(((e,t)=>{var r=class extends Error{constructor(e){super(e),this.name=this.constructor.name,this.message=e||"An error ocurred while tokzenizing.","function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}};t.exports=r})),Ve=u(((e,t)=>{var r=/[ \n\t\r\{\(\)'"\\;,/]/g,s=/[ \n\t\r\(\)\{\}\*:;@!&'"\+\|~>,\[\]\\]|\/(?=\*)/g,n=/[ \n\t\r\(\)\{\}\*:;@!&'"\-\+\|~>,\[\]\\]|\//g,o=/^[a-z0-9]/i,i=/^[a-f0-9?\-]/i,a=Fe();t.exports=function(e,t){t=t||{};let l,u,c,p,h,f,d,m,y,v,g,w=[],b=e.valueOf(),x=b.length,k=-1,O=1,T=0,_=0,C=null;function S(e){throw new a(`Unclosed ${e} at line: ${O}, column: ${T-k}, token: ${T}`)}for(;T<x;){switch(l=b.charCodeAt(T),10===l&&(k=T,O+=1),l){case 10:case 32:case 9:case 13:case 12:u=T;do{u+=1,l=b.charCodeAt(u),10===l&&(k=u,O+=1)}while(32===l||10===l||9===l||13===l||12===l);w.push(["space",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;break;case 58:u=T+1,w.push(["colon",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;break;case 44:u=T+1,w.push(["comma",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;break;case 123:w.push(["{","{",O,T-k,O,u-k,T]);break;case 125:w.push(["}","}",O,T-k,O,u-k,T]);break;case 40:_++,C=!C&&1===_&&w.length>0&&"word"===w[w.length-1][0]&&"url"===w[w.length-1][1],w.push(["(","(",O,T-k,O,u-k,T]);break;case 41:_--,C=C&&_>0,w.push([")",")",O,T-k,O,u-k,T]);break;case 39:case 34:c=39===l?"'":'"',u=T;do{for(y=!1,u=b.indexOf(c,u+1),-1===u&&S("quote"),v=u;92===b.charCodeAt(v-1);)v-=1,y=!y}while(y);w.push(["string",b.slice(T,u+1),O,T-k,O,u-k,T]),T=u;break;case 64:r.lastIndex=T+1,r.test(b),u=0===r.lastIndex?b.length-1:r.lastIndex-2,w.push(["atword",b.slice(T,u+1),O,T-k,O,u-k,T]),T=u;break;case 92:u=T,l=b.charCodeAt(u+1),w.push(["word",b.slice(T,u+1),O,T-k,O,u-k,T]),T=u;break;case 43:case 45:case 42:u=T+1,g=b.slice(T+1,u+1);b.slice(T-1,T);if(45===l&&45===g.charCodeAt(0)){u++,w.push(["word",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;break}w.push(["operator",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;break;default:if(47===l&&(42===b.charCodeAt(T+1)||t.loose&&!C&&47===b.charCodeAt(T+1))){if(42===b.charCodeAt(T+1))u=b.indexOf("*/",T+2)+1,0===u&&S("comment");else{let e=b.indexOf("\n",T+2);u=-1!==e?e-1:x}f=b.slice(T,u+1),p=f.split("\n"),h=p.length-1,h>0?(d=O+h,m=u-p[h].length):(d=O,m=k),w.push(["comment",f,O,T-k,d,u-m,T]),k=m,O=d,T=u}else if(35!==l||o.test(b.slice(T+1,T+2)))if(117!==l&&85!==l||43!==b.charCodeAt(T+1))if(47===l)u=T+1,w.push(["operator",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1;else{let e=s;if(l>=48&&l<=57&&(e=n),e.lastIndex=T+1,e.test(b),u=0===e.lastIndex?b.length-1:e.lastIndex-2,e===n||46===l){let e=b.charCodeAt(u),t=b.charCodeAt(u+1),r=b.charCodeAt(u+2);(101===e||69===e)&&(45===t||43===t)&&r>=48&&r<=57&&(n.lastIndex=u+2,n.test(b),u=0===n.lastIndex?b.length-1:n.lastIndex-2)}w.push(["word",b.slice(T,u+1),O,T-k,O,u-k,T]),T=u}else{u=T+2;do{u+=1,l=b.charCodeAt(u)}while(u<x&&i.test(b.slice(u,u+1)));w.push(["unicoderange",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1}else u=T+1,w.push(["#",b.slice(T,u),O,T-k,O,u-k,T]),T=u-1}T++}return w}})),Ge=u(((e,t)=>{var r=class extends Error{constructor(e){super(e),this.name=this.constructor.name,this.message=e||"An error ocurred while parsing.","function"==typeof Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error(e).stack}};t.exports=r})),Je=u(((e,t)=>{var r=Ie(),s=Pe(),n=Me(),o=Ne(),i=Re(),a=$e(),l=Le(),u=We(),c=ze(),p=qe(),h=Be(),f=De(),d=Ue(),m=Ve(),y=ie(),v=ae(),g=le(),w=Ge();t.exports=class{constructor(e,t){this.cache=[],this.input=e,this.options=Object.assign({},{loose:!1},t),this.position=0,this.unbalanced=0,this.root=new r;let n=new s;this.root.append(n),this.current=n,this.tokens=m(e,this.options)}parse(){return this.loop()}colon(){let e=this.currToken;this.newNode(new o({value:e[1],source:{start:{line:e[2],column:e[3]},end:{line:e[4],column:e[5]}},sourceIndex:e[6]})),this.position++}comma(){let e=this.currToken;this.newNode(new i({value:e[1],source:{start:{line:e[2],column:e[3]},end:{line:e[4],column:e[5]}},sourceIndex:e[6]})),this.position++}comment(){let e,t=!1,r=this.currToken[1].replace(/\/\*|\*\//g,"");this.options.loose&&r.startsWith("//")&&(r=r.substring(2),t=!0),e=new a({value:r,inline:t,source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[4],column:this.currToken[5]}},sourceIndex:this.currToken[6]}),this.newNode(e),this.position++}error(e,t){throw new w(e+` at line: ${t[2]}, column ${t[3]}`)}loop(){for(;this.position<this.tokens.length;)this.parseTokens();return!this.current.last&&this.spaces?this.current.raws.before+=this.spaces:this.spaces&&(this.current.last.raws.after+=this.spaces),this.spaces="",this.root}operator(){let e,t=this.currToken[1];if("+"===t||"-"===t)if(this.options.loose||this.position>0&&("func"===this.current.type&&"calc"===this.current.value?("space"!==this.prevToken[0]&&"("!==this.prevToken[0]||"space"!==this.nextToken[0]&&"word"!==this.nextToken[0]||"word"===this.nextToken[0]&&"operator"!==this.current.last.type&&"("!==this.current.last.value)&&this.error("Syntax Error",this.currToken):("space"===this.nextToken[0]||"operator"===this.nextToken[0]||"operator"===this.prevToken[0])&&this.error("Syntax Error",this.currToken)),this.options.loose){if((!this.current.nodes.length||this.current.last&&"operator"===this.current.last.type)&&"word"===this.nextToken[0])return this.word()}else if("word"===this.nextToken[0])return this.word();return e=new c({value:this.currToken[1],source:{start:{line:this.currToken[2],column:this.currToken[3]},end:{line:this.currToken[2],column:this.currToken[3]}},sourceIndex:this.currToken[4]}),this.position++,this.newNode(e)}parseTokens(){switch(this.currToken[0]){case"space":this.space();break;case"colon":this.colon();break;case"comma":this.comma();break;case"comment":this.comment();break;case"(":this.parenOpen();break;case")":this.parenClose();break;case"atword":case"word":default:this.word();break;case"operator":this.operator();break;case"string":this.string();break;case"unicoderange":this.unicodeRange()}}parenOpen(){let e,t=1,r=this.position+1,s=this.currToken;for(;r<this.tokens.length&&t;){let e=this.tokens[r];"("===e[0]&&t++,")"===e[0]&&t--,r++}if(t&&this.error("Expected closing parenthesis",s),e=this.current.last,e&&"func"===e.type&&e.unbalanced<0&&(e.unbalanced=0,this.current=e),this.current.unbalanced++,this.newNode(new p({value:s[1],source:{start:{line:s[2],column:s[3]},end:{line:s[4],column:s[5]}},sourceIndex:s[6]})),this.position++,"func"===this.current.type&&this.current.unbalanced&&"url"===this.current.value&&"string"!==this.currToken[0]&&")"!==this.currToken[0]&&!this.options.loose){let e=this.nextToken,t=this.currToken[1],r={line:this.currToken[2],column:this.currToken[3]};for(;e&&")"!==e[0]&&this.current.unbalanced;)this.position++,t+=this.currToken[1],e=this.nextToken;this.position!==this.tokens.length-1&&(this.position++,this.newNode(new f({value:t,source:{start:r,end:{line:this.currToken[4],column:this.currToken[5]}},sourceIndex:this.currToken[6]})))}}parenClose(){let e=this.currToken;this.newNode(new p({value:e[1],source:{start:{line:e[2],column:e[3]},end:{line:e[4],column:e[5]}},sourceIndex:e[6]})),this.position++,(!(this.position>=this.tokens.length-1)||this.current.unbalanced)&&(this.current.unbalanced--,this.current.unbalanced<0&&this.error("Expected opening parenthesis",e),!this.current.unbalanced&&this.cache.length&&(this.current=this.cache.pop()))}space(){let e=this.currToken;this.position===this.tokens.length-1||","===this.nextToken[0]||")"===this.nextToken[0]?(this.current.last.raws.after+=e[1],this.position++):(this.spaces=e[1],this.position++)}unicodeRange(){let e=this.currToken;this.newNode(new d({value:e[1],source:{start:{line:e[2],column:e[3]},end:{line:e[4],column:e[5]}},sourceIndex:e[6]})),this.position++}splitWord(){let e,t,r=this.nextToken,s=this.currToken[1],o=/^[\+\-]?((\d+(\.\d*)?)|(\.\d+))([eE][\+\-]?\d+)?/;if(!/^(?!\#([a-z0-9]+))[\#\{\}]/gi.test(s))for(;r&&"word"===r[0];){this.position++;let e=this.currToken[1];s+=e,r=this.nextToken}var i;e=v(s,"@"),i=g(y([[0],e])),t=i.sort(((e,t)=>e-t)),t.forEach(((i,a)=>{let c,p=t[a+1]||s.length,h=s.slice(i,p);if(~e.indexOf(i))c=new n({value:h.slice(1),source:{start:{line:this.currToken[2],column:this.currToken[3]+i},end:{line:this.currToken[4],column:this.currToken[3]+(p-1)}},sourceIndex:this.currToken[6]+t[a]});else if(o.test(this.currToken[1])){let e=h.replace(o,"");c=new u({value:h.replace(e,""),source:{start:{line:this.currToken[2],column:this.currToken[3]+i},end:{line:this.currToken[4],column:this.currToken[3]+(p-1)}},sourceIndex:this.currToken[6]+t[a],unit:e})}else c=new(r&&"("===r[0]?l:f)({value:h,source:{start:{line:this.currToken[2],column:this.currToken[3]+i},end:{line:this.currToken[4],column:this.currToken[3]+(p-1)}},sourceIndex:this.currToken[6]+t[a]}),"word"===c.type?(c.isHex=/^#(.+)/.test(h),c.isColor=/^#([0-9a-f]{3}|[0-9a-f]{4}|[0-9a-f]{6}|[0-9a-f]{8})$/i.test(h)):this.cache.push(this.current);this.newNode(c)})),this.position++}string(){let e,t=this.currToken,r=this.currToken[1],s=/^(\"|\')/,n=s.test(r),o="";n&&(o=r.match(s)[0],r=r.slice(1,r.length-1)),e=new h({value:r,source:{start:{line:t[2],column:t[3]},end:{line:t[4],column:t[5]}},sourceIndex:t[6],quoted:n}),e.raws.quote=o,this.newNode(e),this.position++}word(){return this.splitWord()}newNode(e){return this.spaces&&(e.raws.before+=this.spaces,this.spaces=""),this.current.append(e)}get currToken(){return this.tokens[this.position]}get nextToken(){return this.tokens[this.position+1]}get prevToken(){return this.tokens[this.position-1]}}})),He={};c(He,{languages:()=>vs,options:()=>gs,parsers:()=>ws,printers:()=>en});var Qe=(e,t,r,s)=>{if(!e||null!=t)return t.replaceAll?t.replaceAll(r,s):r.global?t.replace(r,s):t.split(r).join(s)},Ye="string",Ke="array",Xe="cursor",Ze="indent",et="align",tt="trim",rt="group",st="fill",nt="if-break",ot="indent-if-break",it="line-suffix",at="line-suffix-boundary",lt="line",ut="label",ct="break-parent",pt=new Set([Xe,Ze,et,tt,rt,st,nt,ot,it,at,lt,ut,ct]);var ht=function(e){if("string"==typeof e)return Ye;if(Array.isArray(e))return Ke;if(!e)return;let{type:t}=e;return pt.has(t)?t:void 0};function ft(e){let t=null===e?"null":typeof e;if("string"!==t&&"object"!==t)return`Unexpected doc '${t}', \nExpected it to be 'string' or 'object'.`;if(ht(e))throw new Error("doc is valid.");let r=Object.prototype.toString.call(e);if("[object Object]"!==r)return`Unexpected doc '${r}'.`;let s=(e=>new Intl.ListFormat("en-US",{type:"disjunction"}).format(e))([...pt].map((e=>`'${e}'`)));return`Unexpected doc.type '${e.type}'.\nExpected it to be ${s}.`}var dt=class extends Error{name="InvalidDocError";constructor(e){super(ft(e)),this.doc=e}},mt=()=>{},yt=mt,vt=mt;function gt(e){return yt(e),{type:Ze,contents:e}}function wt(e,t){return yt(t),{type:et,contents:t,n:e}}function bt(e,t={}){return yt(e),vt(t.expandedStates,!0),{type:rt,id:t.id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}function xt(e){return wt(-1,e)}function kt(e){return vt(e),{type:st,parts:e}}function Ot(e,t="",r={}){return yt(e),""!==t&&yt(t),{type:nt,breakContents:e,flatContents:t,groupId:r.groupId}}var Tt={type:ct},_t={type:lt},Ct={type:lt,soft:!0},St=[{type:lt,hard:!0},Tt];function Et(e,t){yt(e),vt(t);let r=[];for(let s=0;s<t.length;s++)0!==s&&r.push(e),r.push(t[s]);return r}var At=(e,t,r)=>{if(!e||null!=t)return Array.isArray(t)||"string"==typeof t?t[r<0?t.length+r:r]:t.at(r)};function jt(e,t){if("string"==typeof e)return t(e);let r=new Map;return s(e);function s(e){if(r.has(e))return r.get(e);let n=function(e){switch(ht(e)){case Ke:return t(e.map(s));case st:return t({...e,parts:e.parts.map(s)});case nt:return t({...e,breakContents:s(e.breakContents),flatContents:s(e.flatContents)});case rt:{let{expandedStates:r,contents:n}=e;return r?(r=r.map(s),n=r[0]):n=s(n),t({...e,contents:n,expandedStates:r})}case et:case Ze:case ot:case ut:case it:return t({...e,contents:s(e.contents)});case Ye:case Xe:case tt:case at:case lt:case ct:return t(e);default:throw new dt(e)}}(e);return r.set(e,n),n}}function It(e){return e.type!==lt||e.hard?e.type===nt?e.flatContents:e:e.soft?"":" "}var Pt=function(e){return Array.isArray(e)&&e.length>0},Mt="'";var Nt=function(e,t){let r=!0===t||t===Mt?Mt:'"',s=r===Mt?'"':Mt,n=0,o=0;for(let t of e)t===r?n++:t===s&&o++;return n>o?s:r};var Rt=function(e,t,r){let s='"'===t?"'":'"',n=Qe(!1,e,/\\(.)|(["'])/gs,((e,n,o)=>n===s?n:o===t?"\\"+o:o||(r&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(n)?n:"\\"+n)));return t+n+t};var $t=function(e,t){let r=e.slice(1,-1),s="json"===t.parser||"jsonc"===t.parser||"json5"===t.parser&&"preserve"===t.quoteProps&&!t.singleQuote?'"':t.__isInHtmlAttribute?"'":Nt(r,t.singleQuote);return Rt(r,s,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.__embeddedInHtml))},Lt=class extends Error{name="UnexpectedNodeError";constructor(e,t,r="type"){super(`Unexpected ${t} node ${r}: ${JSON.stringify(e[r])}.`),this.node=e}};var Wt=function(e){return"front-matter"===(null==e?void 0:e.type)},zt=new Set(["raw","raws","sourceIndex","source","before","after","trailingComma","spaces"]);function qt(e,t,r){if(Wt(e)&&"yaml"===e.language&&delete t.value,"css-comment"===e.type&&"css-root"===r.type&&r.nodes.length>0&&((r.nodes[0]===e||Wt(r.nodes[0])&&r.nodes[1]===e)&&(delete t.text,/^\*\s*@(?:format|prettier)\s*$/.test(e.text))||"css-root"===r.type&&At(!1,r.nodes,-1)===e))return null;if("value-root"===e.type&&delete t.text,("media-query"===e.type||"media-query-list"===e.type||"media-feature-expression"===e.type)&&delete t.value,"css-rule"===e.type&&delete t.params,("media-feature"===e.type||"media-keyword"===e.type||"media-type"===e.type||"media-unknown"===e.type||"media-url"===e.type||"media-value"===e.type||"selector-attribute"===e.type||"selector-string"===e.type||"selector-class"===e.type||"selector-combinator"===e.type||"value-string"===e.type)&&e.value&&(t.value=function(e){return Qe(!1,Qe(!1,e,"'",'"'),/\\([^\da-f])/gi,"$1")}(e.value)),"selector-combinator"===e.type&&(t.value=Qe(!1,t.value,/\s+/g," ")),"media-feature"===e.type&&(t.value=Qe(!1,t.value," ","")),("value-word"===e.type&&(e.isColor&&e.isHex||["initial","inherit","unset","revert"].includes(e.value.toLowerCase()))||"media-feature"===e.type||"selector-root-invalid"===e.type||"selector-pseudo"===e.type)&&(t.value=t.value.toLowerCase()),"css-decl"===e.type&&(t.prop=e.prop.toLowerCase()),("css-atrule"===e.type||"css-import"===e.type)&&(t.name=e.name.toLowerCase()),"value-number"===e.type&&(t.unit=e.unit.toLowerCase()),"value-unknown"===e.type&&(t.value=Qe(!1,t.value,/;$/g,"")),"selector-attribute"===e.type&&(t.attribute=e.attribute.trim(),e.namespace&&"string"==typeof e.namespace&&(t.namespace=e.namespace.trim()||!0),e.value&&(t.value=Qe(!1,t.value.trim(),/^["']|["']$/g,""),delete t.quoted)),("media-value"===e.type||"media-type"===e.type||"value-number"===e.type||"selector-root-invalid"===e.type||"selector-class"===e.type||"selector-combinator"===e.type||"selector-tag"===e.type)&&e.value&&(t.value=Qe(!1,t.value,/([\d+.e-]+)([a-z]*)/gi,((e,t,r)=>{let s=Number(t);return Number.isNaN(s)?e:s+r.toLowerCase()}))),"selector-tag"===e.type){let e=t.value.toLowerCase();["from","to"].includes(e)&&(t.value=e)}if("css-atrule"===e.type&&"supports"===e.name.toLowerCase()&&delete t.value,"selector-unknown"===e.type&&delete t.value,"value-comma_group"===e.type){let r=e.groups.findIndex((e=>"value-number"===e.type&&"..."===e.unit));-1!==r&&(t.groups[r].unit="",t.groups.splice(r+1,0,{type:"value-word",value:"...",isColor:!1,isHex:!1}))}return"value-comma_group"===e.type&&e.groups.some((e=>"value-atword"===e.type&&e.value.endsWith("[")||"value-word"===e.type&&e.value.startsWith("]")))?{type:"value-atword",value:e.groups.map((e=>e.value)).join(""),group:{open:null,close:null,groups:[],type:"value-paren_group"}}:void 0}qt.ignoredProperties=zt;var Bt=qt;var Dt=async function(e,t){if("yaml"===e.language){let r=e.value.trim(),s=r?await t(r,{parser:"yaml"}):"";return function(e){return wt({type:"root"},e)}([e.startDelimiter,e.explicitLanguage,St,s,s?St:"",e.endDelimiter])}};function Ut(e){let{node:t}=e;if("front-matter"===t.type)return async e=>{let r=await Dt(t,e);return r?[r,St]:void 0}}Ut.getVisitorKeys=e=>"css-root"===e.type?["frontMatter"]:[];var Ft=Ut,Vt=null;function Gt(e){if(null!==Vt&&(Vt.property,1)){let e=Vt;return Vt=Gt.prototype=null,e}return Vt=Gt.prototype=e??Object.create(null),new Gt}for(let e=0;e<=10;e++)Gt();var Jt=function(e,t="type"){return function(e){Gt(e)}(e),function(r){let s=r[t],n=e[s];if(!Array.isArray(n))throw Object.assign(new Error(`Missing visitor keys for '${s}'.`),{node:r});return n}}({"front-matter":[],"css-root":["frontMatter","nodes"],"css-comment":[],"css-rule":["selector","nodes"],"css-decl":["value","selector","nodes"],"css-atrule":["selector","params","value","nodes"],"media-query-list":["nodes"],"media-query":["nodes"],"media-type":[],"media-feature-expression":["nodes"],"media-feature":[],"media-colon":[],"media-value":[],"media-keyword":[],"media-url":[],"media-unknown":[],"selector-root":["nodes"],"selector-selector":["nodes"],"selector-comment":[],"selector-string":[],"selector-tag":[],"selector-id":[],"selector-class":[],"selector-attribute":[],"selector-combinator":["nodes"],"selector-universal":[],"selector-pseudo":["nodes"],"selector-nesting":[],"selector-unknown":[],"value-value":["group"],"value-root":["group"],"value-comment":[],"value-comma_group":["groups"],"value-paren_group":["open","groups","close"],"value-func":["group"],"value-paren":[],"value-number":[],"value-operator":[],"value-word":[],"value-colon":[],"value-comma":[],"value-string":[],"value-atword":[],"value-unicode-range":[],"value-unknown":[]});var Ht=function(e,t){let r=0;for(let s=0;s<e.line-1;++s)r=t.indexOf("\n",r)+1;return r+e.column};function Qt(e){return(t,r,s)=>{let n=!(null==s||!s.backwards);if(!1===r)return!1;let{length:o}=t,i=r;for(;i>=0&&i<o;){let r=t.charAt(i);if(e instanceof RegExp){if(!e.test(r))return i}else if(!e.includes(r))return i;n?i--:i++}return(-1===i||i===o)&&i}}Qt(/\s/);var Yt=Qt(" \t"),Kt=Qt(",; \t"),Xt=Qt(/[^\n\r]/);function Zt(e,t){var r,s,n;if("number"==typeof(null==(s=null==(r=e.source)?void 0:r.start)?void 0:s.offset))return e.source.start.offset;if("number"==typeof e.sourceIndex)return e.sourceIndex;if(null!=(n=e.source)&&n.start)return Ht(e.source.start,t);throw Object.assign(new Error("Can not locate node."),{node:e})}function er(e,t){var r,s;if("css-comment"===e.type&&e.inline)return Xt(t,e.source.startOffset);if("number"==typeof(null==(s=null==(r=e.source)?void 0:r.end)?void 0:s.offset))return e.source.end.offset;if(e.source){if(e.source.end)return Ht(e.source.end,t);if(Pt(e.nodes))return er(At(!1,e.nodes,-1),t)}return null}function tr(e,t){e.source&&(e.source.startOffset=Zt(e,t),e.source.endOffset=er(e,t));for(let r in e){let s=e[r];"source"===r||!s||"object"!=typeof s||("value-root"===s.type||"value-unknown"===s.type?rr(s,sr(e),s.text||s.value):tr(s,t))}}function rr(e,t,r){e.source&&(e.source.startOffset=Zt(e,r)+t,e.source.endOffset=er(e,r)+t);for(let s in e){let n=e[s];"source"===s||!n||"object"!=typeof n||rr(n,t,r)}}function sr(e){var t;let r=e.source.startOffset;return"string"==typeof e.prop&&(r+=e.prop.length),"css-atrule"===e.type&&"string"==typeof e.name&&(r+=1+e.name.length+e.raws.afterName.match(/^\s*:?\s*/)[0].length),"css-atrule"!==e.type&&"string"==typeof(null==(t=e.raws)?void 0:t.between)&&(r+=e.raws.between.length),r}function nr(e){var t;return null==(t=e.source)?void 0:t.startOffset}function or(e){var t;return null==(t=e.source)?void 0:t.endOffset}var ir=p(h(),1);var ar=function(e){if(!e.startsWith("#!"))return"";let t=e.indexOf("\n");return-1===t?e:e.slice(0,t)};function lr(e){let t=ar(e);t&&(e=e.slice(t.length+1));let r=(0,ir.extract)(e),{pragmas:s,comments:n}=(0,ir.parseWithComments)(r);return{shebang:t,text:e,pragmas:s,comments:n}}var ur=3;var cr=function(e){let t=function(e){let t=e.slice(0,ur);if("---"!==t&&"+++"!==t)return;let r=e.indexOf("\n",ur);if(-1===r)return;let s=e.slice(ur,r).trim(),n=e.indexOf(`\n${t}`,r),o=s;if(o||(o="+++"===t?"toml":"yaml"),-1===n&&"---"===t&&"yaml"===o&&(n=e.indexOf("\n...",r)),-1===n)return;let i=n+1+ur,a=e.charAt(i+1);if(!/\s?/.test(a))return;let l=e.slice(0,i);return{type:"front-matter",language:o,explicitLanguage:s,value:e.slice(r+1,n),startDelimiter:t,endDelimiter:l.slice(-ur),raw:l}}(e);if(!t)return{content:e};let{raw:r}=t;return{frontMatter:t,content:Qe(!1,r,/[^\n]/g," ")+e.slice(r.length)}};var pr=new Set(["red","green","blue","alpha","a","rgb","hue","h","saturation","s","lightness","l","whiteness","w","blackness","b","tint","shade","blend","blenda","contrast","hsl","hsla","hwb","hwba"]);var hr=new Set(["initial","inherit","unset","revert"]);function fr(e,t){var r;let s=e.findAncestor((e=>"css-atrule"===e.type));return(null==(r=null==s?void 0:s.name)?void 0:r.toLowerCase().endsWith("keyframes"))&&["from","to"].includes(t.toLowerCase())}function dr(e){return e.includes("$")||e.includes("@")||e.includes("#")||e.startsWith("%")||e.startsWith("--")||e.startsWith(":--")||e.includes("(")&&e.includes(")")?e:e.toLowerCase()}function mr(e,t){var r;let s=e.findAncestor((e=>"value-func"===e.type));return(null==(r=null==s?void 0:s.value)?void 0:r.toLowerCase())===t}function yr(e){var t;let r=e.findAncestor((e=>"css-rule"===e.type)),s=null==(t=null==r?void 0:r.raws)?void 0:t.selector;return s&&(s.startsWith(":import")||s.startsWith(":export"))}function vr(e,t){let r=Array.isArray(t)?t:[t],s=e.findAncestor((e=>"css-atrule"===e.type));return s&&r.includes(s.name.toLowerCase())}function gr(e,t){var r;let s=null==(r=e.parent)?void 0:r.nodes;return s&&s.indexOf(t)===s.length-1}function wr(e){let{selector:t}=e;return!!t&&("string"==typeof t&&/^@.+:.*$/.test(t)||t.value&&/^@.+:.*$/.test(t.value))}function br(e){return"value-word"===e.type&&["from","through","end"].includes(e.value)}function xr(e){return"value-word"===e.type&&["and","or","not"].includes(e.value)}function kr(e){return"value-word"===e.type&&"in"===e.value}function Or(e){return"value-operator"===e.type&&"*"===e.value}function Tr(e){return"value-operator"===e.type&&"/"===e.value}function _r(e){return"value-operator"===e.type&&"+"===e.value}function Cr(e){return"value-operator"===e.type&&"-"===e.value}function Sr(e){return Or(e)||Tr(e)||_r(e)||Cr(e)||function(e){return"value-operator"===e.type&&"%"===e.value}(e)}function Er(e){return"value-word"===e.type&&["==","!="].includes(e.value)}function Ar(e){return"value-word"===e.type&&["<",">","<=",">="].includes(e.value)}function jr(e,t){return"scss"===t.parser&&"css-atrule"===e.type&&["if","else","for","each","while"].includes(e.name)}function Ir(e){var t;return(null==(t=e.raws)?void 0:t.params)&&/^\(\s*\)$/.test(e.raws.params)}function Pr(e){return e.name.startsWith("prettier-placeholder")}function Mr(e){return e.prop.startsWith("@prettier-placeholder")}function Nr(e,t){return"$$"===e.value&&"value-func"===e.type&&"value-word"===(null==t?void 0:t.type)&&!t.raws.before}function Rr(e){var t,r,s;return"value-paren_group"===(null==(s=null==(r=null==(t=e.value)?void 0:t.group)?void 0:r.group)?void 0:s.type)&&null!==e.value.group.group.open&&null!==e.value.group.group.close}function $r(e){var t;return""===(null==(t=e.raws)?void 0:t.before)}function Lr(e){var t,r;return"value-comma_group"===e.type&&"value-colon"===(null==(r=null==(t=e.groups)?void 0:t[1])?void 0:r.type)}function Wr(e){var t;return"value-paren_group"===e.type&&(null==(t=e.groups)?void 0:t[0])&&Lr(e.groups[0])}function zr(e,t){var r;if("scss"!==t.parser)return!1;let{node:s}=e;if(0===s.groups.length)return!1;let n=e.grandparent;if(!(Wr(s)||n&&Wr(n)))return!1;let o=e.findAncestor((e=>"css-decl"===e.type));return!!(null!=(r=null==o?void 0:o.prop)&&r.startsWith("$")||Wr(n)||"value-func"===n.type)}function qr(e){return"value-comment"===e.type&&e.inline}function Br(e){return"value-word"===e.type&&"#"===e.value}function Dr(e){return"value-word"===e.type&&"{"===e.value}function Ur(e){return"value-word"===e.type&&"}"===e.value}function Fr(e){return["value-word","value-atword"].includes(e.type)}function Vr(e){return"value-colon"===(null==e?void 0:e.type)}function Gr(e){return e.value&&["not","and","or"].includes(e.value.toLowerCase())}function Jr(e){return"value-func"===e.type&&pr.has(e.value.toLowerCase())}function Hr(e){return/\/\//.test(e.split(/[\n\r]/).pop())}function Qr(e){return"value-atword"===(null==e?void 0:e.type)&&e.value.startsWith("prettier-placeholder-")}function Yr(e){var t,r;return"value-paren_group"===e.type&&"("===(null==(t=e.open)?void 0:t.value)&&")"===(null==(r=e.close)?void 0:r.value)}var Kr=function(e,t,r){var s;let{node:n}=e,o=e.parent,i=e.grandparent,a=function(e){var t,r;return null==(r=null==(t=e.findAncestor((e=>"css-decl"===e.type)))?void 0:t.prop)?void 0:r.toLowerCase()}(e),l=a&&"value-value"===o.type&&("grid"===a||a.startsWith("grid-template")),u=e.findAncestor((e=>"css-atrule"===e.type)),c=u&&jr(u,t),p=n.groups.some((e=>qr(e))),h=e.map(r,"groups"),f=[],d=mr(e,"url"),m=!1,y=!1;for(let r=0;r<n.groups.length;++r){f.push(h[r]);let a=n.groups[r-1],p=n.groups[r],v=n.groups[r+1],g=n.groups[r+2];if(d){(v&&_r(v)||_r(p))&&f.push(" ");continue}if(vr(e,"forward")&&"value-word"===p.type&&p.value&&void 0!==a&&"value-word"===a.type&&"as"===a.value&&"value-operator"===v.type&&"*"===v.value||!v||"value-word"===p.type&&p.value.endsWith("-")&&Qr(v))continue;if("value-string"===p.type&&p.quoted){let e=p.value.lastIndexOf("#{"),t=p.value.lastIndexOf("}");-1!==e&&-1!==t?m=e>t:-1!==e?m=!0:-1!==t&&(m=!1)}if(m||Vr(p)||Vr(v)||"value-atword"===p.type&&(""===p.value||p.value.endsWith("["))||"value-word"===v.type&&v.value.startsWith("]")||"~"===p.value||"value-string"!==p.type&&p.value&&p.value.includes("\\")&&v&&"value-comment"!==v.type||null!=a&&a.value&&a.value.indexOf("\\")===a.value.length-1&&"value-operator"===p.type&&"/"===p.value||"\\"===p.value||Nr(p,v)||Br(p)||Dr(p)||Ur(v)||Dr(v)&&$r(v)||Ur(p)&&$r(v)||"--"===p.value&&Br(v))continue;let w=Sr(p),b=Sr(v);if((w&&Br(v)||b&&Ur(p))&&$r(v)||!a&&Tr(p)||mr(e,"calc")&&(_r(p)||_r(v)||Cr(p)||Cr(v))&&$r(v))continue;let x=(_r(p)||Cr(p))&&0===r&&("value-number"===v.type||v.isHex)&&i&&Jr(i)&&!$r(v),k="value-func"===(null==g?void 0:g.type)||g&&Fr(g)||"value-func"===p.type||Fr(p),O="value-func"===v.type||Fr(v)||"value-func"===(null==a?void 0:a.type)||a&&Fr(a);if("scss"===t.parser&&w&&"-"===p.value&&"value-func"===v.type&&or(p)!==nr(v))f.push(" ");else if((Or(v)||Or(p)||mr(e,"calc")||x||!(Tr(v)&&!k||Tr(p)&&!O||_r(v)&&!k||_r(p)&&!O||Cr(v)||Cr(p))||!($r(v)||w&&(!a||a&&Sr(a))))&&("scss"!==t.parser&&"less"!==t.parser||!w||"-"!==p.value||!Yr(v)||or(p)!==nr(v.open)||"("!==v.open.value)){if(qr(p)){if("value-paren_group"===o.type){f.push(xt(St));continue}f.push(St);continue}if(c&&(Er(v)||Ar(v)||xr(v)||kr(p)||br(p))){f.push(" ");continue}if(u&&"namespace"===u.name.toLowerCase()){f.push(" ");continue}if(l){p.source&&v.source&&p.source.start.line!==v.source.start.line?(f.push(St),y=!0):f.push(" ");continue}if(b){f.push(" ");continue}if(!("..."===(null==v?void 0:v.value)||Qr(p)&&Qr(v)&&or(p)===nr(v))){if(Qr(p)&&Yr(v)&&or(p)===nr(v.open)){f.push(Ct);continue}if("with"===p.value&&Yr(v)){f.push(" ");continue}null!=(s=p.value)&&s.endsWith("#")&&"{"===v.value&&Yr(v.group)||f.push(_t)}}}return p&&f.push(Tt),y&&f.unshift(St),c?bt(gt(f)):function(e){var t;let{node:r}=e;return"url"===r.groups[0].value&&2===r.groups.length&&"import"===(null==(t=e.findAncestor((e=>"css-atrule"===e.type)))?void 0:t.name)}(e)?bt(kt(f)):bt(gt(kt(f)))};var Xr=function(e){return 1===e.length?e:e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(?=\d)/,"$1$2").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},Zr=new Map([["em","em"],["rem","rem"],["ex","ex"],["rex","rex"],["cap","cap"],["rcap","rcap"],["ch","ch"],["rch","rch"],["ic","ic"],["ric","ric"],["lh","lh"],["rlh","rlh"],["vw","vw"],["svw","svw"],["lvw","lvw"],["dvw","dvw"],["vh","vh"],["svh","svh"],["lvh","lvh"],["dvh","dvh"],["vi","vi"],["svi","svi"],["lvi","lvi"],["dvi","dvi"],["vb","vb"],["svb","svb"],["lvb","lvb"],["dvb","dvb"],["vmin","vmin"],["svmin","svmin"],["lvmin","lvmin"],["dvmin","dvmin"],["vmax","vmax"],["svmax","svmax"],["lvmax","lvmax"],["dvmax","dvmax"],["cm","cm"],["mm","mm"],["q","Q"],["in","in"],["pt","pt"],["pc","pc"],["px","px"],["deg","deg"],["grad","grad"],["rad","rad"],["turn","turn"],["s","s"],["ms","ms"],["hz","Hz"],["khz","kHz"],["dpi","dpi"],["dpcm","dpcm"],["dppx","dppx"],["x","x"],["cqw","cqw"],["cqh","cqh"],["cqi","cqi"],["cqb","cqb"],["cqmin","cqmin"],["cqmax","cqmax"]]);function es(e){let t=e.toLowerCase();return Zr.has(t)?Zr.get(t):e}var ts=/(["'])(?:(?!\1)[^\\]|\\.)*\1/gs,rs=new RegExp(ts.source+`|(${/[$@]?[_a-z\u0080-\uFFFF][\w\u0080-\uFFFF-]*/gi.source})?(${/(?:\d*\.\d+|\d+\.?)(?:e[+-]?\d+)?/gi.source})(${/[a-z]+/gi.source})?`,"gi");function ss(e,t){return Qe(!1,e,ts,(e=>$t(e,t)))}function ns(e,t){let r=t.singleQuote?"'":'"';return e.includes('"')||e.includes("'")?e:r+e+r}function os(e){return Qe(!1,e,rs,((e,t,r,s,n)=>!r&&s?is(s)+dr(n||""):e))}function is(e){return Xr(e).replace(/\.0(?=$|e)/,"")}var as=function(e,t,r){let s=!(null==r||!r.backwards);if(!1===t)return!1;let n=e.charAt(t);if(s){if("\r"===e.charAt(t-1)&&"\n"===n)return t-2;if("\n"===n||"\r"===n||"\u2028"===n||"\u2029"===n)return t-1}else{if("\r"===n&&"\n"===e.charAt(t+1))return t+2;if("\n"===n||"\r"===n||"\u2028"===n||"\u2029"===n)return t+1}return t};var ls=function(e,t,r={}){let s=Yt(e,r.backwards?t-1:t,r);return s!==as(e,s,r)};var us=function(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let r=t+2;r<e.length;++r)if("*"===e.charAt(r)&&"/"===e.charAt(r+1))return r+2;return t};var cs=function(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?Xt(e,t):t)};var ps=function(e,t){let r=null,s=t;for(;s!==r;)r=s,s=Kt(e,s),s=us(e,s),s=Yt(e,s);return s=cs(e,s),s=as(e,s),!1!==s&&ls(e,s)};function hs(e,t){return function(e){return"value-func"===e.type&&"var"===e.value.toLowerCase()}(e.grandparent)&&function({node:e,parent:t},r){return!(!e.source||!r.originalText.slice(nr(e),nr(t.close)).trimEnd().endsWith(","))}(e,t)?",":"value-comment"===e.node.type||"value-comma_group"===e.node.type&&e.node.groups.every((e=>"value-comment"===e.type))||!function(e){return"es5"===e.trailingComma||"all"===e.trailingComma}(t)||!e.callParent((()=>zr(e,t)))?"":Ot(",")}function fs(e,t,r){let{node:s,parent:n}=e,o=e.map((({node:e})=>"string"==typeof e?e:r()),"groups");if(n&&function(e){return"value-func"===e.type&&"url"===e.value.toLowerCase()}(n)&&(1===s.groups.length||s.groups.length>0&&"value-comma_group"===s.groups[0].type&&s.groups[0].groups.length>0&&"value-word"===s.groups[0].groups[0].type&&s.groups[0].groups[0].value.startsWith("data:")))return[s.open?r("open"):"",Et(",",o),s.close?r("close"):""];if(!s.open){let t=ds(e),r=Et([",",t?St:_t],o);return gt(t?[St,r]:bt(kt(r)))}let i=e.map((({node:r,isLast:s,index:n})=>{var i;let a=o[n];if(Lr(r)&&"value-comma_group"===r.type&&r.groups&&"value-paren_group"!==r.groups[0].type&&"value-paren_group"===(null==(i=r.groups[2])?void 0:i.type)){let{parts:e}=a.contents.contents;e[1]=bt(e[1]),a=bt(xt(a))}let l=[a,s?hs(e,t):","];if(!s&&"value-comma_group"===r.type&&Pt(r.groups)){let e=At(!1,r.groups,-1);!e.source&&e.close&&(e=e.close),e.source&&ps(t.originalText,or(e))&&l.push(St)}return l}),"groups"),a=function(e,t){if(!Lr(t))return!1;let{groups:r}=t,s=r.indexOf(e);return-1!==s&&Vr(r[s+1])}(s,n),l=function(e,t){var r,s;if("("!==(null==(r=e.open)?void 0:r.value)||")"!==(null==(s=e.close)?void 0:s.value)||e.groups.some((e=>"value-comma_group"!==e.type)))return!1;if("value-comma_group"===t.type){let r=t.groups.indexOf(e)-1,s=t.groups[r];if("value-word"===(null==s?void 0:s.type)&&"with"===s.value)return!0}return!1}(s,n),u=zr(e,t),c=l||u&&!a,p=l||a,h=bt([s.open?r("open"):"",gt([Ct,Et(_t,i)]),Ct,s.close?r("close"):""],{shouldBreak:c});return p?xt(h):h}function ds(e){return e.match((e=>"value-paren_group"===e.type&&!e.open&&e.groups.some((e=>"value-comma_group"===e.type))),((e,t)=>"group"===t&&"value-value"===e.type),((e,t)=>"group"===t&&"value-root"===e.type),((e,t)=>"value"===t&&("css-decl"===e.type&&!e.prop.startsWith("--")||"css-atrule"===e.type&&e.variable)))}var ms=function(e,t,r){let s=[];return e.each((()=>{let{node:n,previous:o}=e;if("css-comment"===(null==o?void 0:o.type)&&"prettier-ignore"===o.text.trim()?s.push(t.originalText.slice(nr(n),or(n))):s.push(r()),e.isLast)return;let{next:i}=e;"css-comment"===i.type&&!ls(t.originalText,nr(i),{backwards:!0})&&!Wt(n)||"css-atrule"===i.type&&"else"===i.name&&"css-comment"!==n.type?s.push(" "):(s.push(t.__isHTMLStyleAttribute?_t:St),ps(t.originalText,or(n))&&!Wt(n)&&s.push(St))}),"nodes"),s};var ys={print:function(e,t,r){var s,n,o,i,a,l;let{node:u}=e;switch(u.type){case"front-matter":return[u.raw,St];case"css-root":{let s=ms(e,t,r),n=u.raws.after.trim();return n.startsWith(";")&&(n=n.slice(1).trim()),[u.frontMatter?[r("frontMatter"),St]:"",s,n?` ${n}`:"",u.nodes.length>0?St:""]}case"css-comment":{let e=u.inline||u.raws.inline,r=t.originalText.slice(nr(u),or(u));return e?r.trimEnd():r}case"css-rule":return[r("selector"),u.important?" !important":"",u.nodes?["selector-unknown"===(null==(s=u.selector)?void 0:s.type)&&Hr(u.selector.value)?_t:u.selector?" ":"","{",u.nodes.length>0?gt([St,ms(e,t,r)]):"",St,"}",wr(u)?";":""]:";"];case"css-decl":{let s=e.parent,{between:i}=u.raws,a=i.trim(),l=":"===a,c="string"==typeof u.value&&/^ *$/.test(u.value),p="string"==typeof u.value?u.value:r("value");return p=function(e){var t,r;return"value-root"===(null==(t=e.value)?void 0:t.type)&&"value-value"===(null==(r=e.value.group)?void 0:r.type)&&"composes"===e.prop.toLowerCase()}(u)?function(e){return jt(e,It)}(p):p,!l&&Hr(a)&&!(null!=(o=null==(n=u.value)?void 0:n.group)&&o.group&&e.call((()=>ds(e)),"value","group","group"))&&(p=gt([St,xt(p)])),[Qe(!1,u.raws.before,/[\s;]/g,""),"css-atrule"===s.type&&s.variable||yr(e)?u.prop:dr(u.prop),a.startsWith("//")?" ":"",a,u.extend||c?"":" ","less"===t.parser&&u.extend&&u.selector?["extend(",r("selector"),")"]:"",p,u.raws.important?u.raws.important.replace(/\s*!\s*important/i," !important"):u.important?" !important":"",u.raws.scssDefault?u.raws.scssDefault.replace(/\s*!default/i," !default"):u.scssDefault?" !default":"",u.raws.scssGlobal?u.raws.scssGlobal.replace(/\s*!global/i," !global"):u.scssGlobal?" !global":"",u.nodes?[" {",gt([Ct,ms(e,t,r)]),Ct,"}"]:Mr(u)&&!s.raws.semicolon&&";"!==t.originalText[or(u)-1]?"":t.__isHTMLStyleAttribute&&gr(e,u)?Ot(";"):";"]}case"css-atrule":{let s=e.parent,n=Pr(u)&&!s.raws.semicolon&&";"!==t.originalText[or(u)-1];if("less"===t.parser){if(u.mixin)return[r("selector"),u.important?" !important":"",n?"":";"];if(u.function)return[u.name,"string"==typeof u.params?u.params:r("params"),n?"":";"];if(u.variable)return["@",u.name,": ",u.value?r("value"):"",u.raws.between.trim()?u.raws.between.trim()+" ":"",u.nodes?["{",gt([u.nodes.length>0?Ct:"",ms(e,t,r)]),Ct,"}"]:"",n?"":";"]}let o="import"===u.name&&"value-unknown"===(null==(i=u.params)?void 0:i.type)&&u.params.value.endsWith(";");return["@",Ir(u)||u.name.endsWith(":")||Pr(u)?u.name:dr(u.name),u.params?[Ir(u)?"":Pr(u)?""===u.raws.afterName?"":u.name.endsWith(":")?" ":/^\s*\n\s*\n/.test(u.raws.afterName)?[St,St]:/^\s*\n/.test(u.raws.afterName)?St:" ":" ","string"==typeof u.params?u.params:r("params")]:"",u.selector?gt([" ",r("selector")]):"",u.value?bt([" ",r("value"),jr(u,t)?Rr(u)?" ":_t:""]):"else"===u.name?" ":"",u.nodes?[jr(u,t)?"":u.selector&&!u.selector.nodes&&"string"==typeof u.selector.value&&Hr(u.selector.value)||!u.selector&&"string"==typeof u.params&&Hr(u.params)?_t:" ","{",gt([u.nodes.length>0?Ct:"",ms(e,t,r)]),Ct,"}"]:n||o?"":";"]}case"media-query-list":{let t=[];return e.each((({node:e})=>{"media-query"===e.type&&""===e.value||t.push(r())}),"nodes"),bt(gt(Et(_t,t)))}case"media-query":return[Et(" ",e.map(r,"nodes")),gr(e,u)?"":","];case"media-type":case"media-value":return os(ss(u.value,t));case"media-feature-expression":return u.nodes?["(",...e.map(r,"nodes"),")"]:u.value;case"media-feature":return dr(ss(Qe(!1,u.value,/ +/g," "),t));case"media-colon":return[u.value," "];case"media-keyword":case"selector-string":return ss(u.value,t);case"media-url":return ss(Qe(!1,Qe(!1,u.value,/^url\(\s+/gi,"url("),/\s+\)$/g,")"),t);case"media-unknown":case"selector-comment":case"selector-nesting":case"value-paren":case"value-operator":case"value-unicode-range":case"value-unknown":return u.value;case"selector-root":return bt([vr(e,"custom-selector")?[e.findAncestor((e=>"css-atrule"===e.type)).customSelector,_t]:"",Et([",",vr(e,["extend","custom-selector","nest"])?_t:St],e.map(r,"nodes"))]);case"selector-selector":return bt(gt(e.map(r,"nodes")));case"selector-tag":return[u.namespace?[!0===u.namespace?"":u.namespace.trim(),"|"]:"","selector-nesting"===(null==(a=e.previous)?void 0:a.type)?u.value:os(fr(e,u.value)?u.value.toLowerCase():u.value)];case"selector-id":return["#",u.value];case"selector-class":return[".",os(ss(u.value,t))];case"selector-attribute":return["[",u.namespace?[!0===u.namespace?"":u.namespace.trim(),"|"]:"",u.attribute.trim(),u.operator??"",u.value?ns(ss(u.value.trim(),t),t):"",u.insensitive?" i":"","]"];case"selector-combinator":if("+"===u.value||">"===u.value||"~"===u.value||">>>"===u.value){let t=e.parent;return["selector-selector"===t.type&&t.nodes[0]===u?"":_t,u.value,gr(e,u)?"":" "]}return[u.value.trim().startsWith("(")?_t:"",os(ss(u.value.trim(),t))||_t];case"selector-universal":return[u.namespace?[!0===u.namespace?"":u.namespace.trim(),"|"]:"",u.value];case"selector-pseudo":return[dr(u.value),Pt(u.nodes)?bt(["(",gt([Ct,Et([",",_t],e.map(r,"nodes"))]),Ct,")"]):""];case"selector-unknown":{let r=e.findAncestor((e=>"css-rule"===e.type));if(null!=r&&r.isSCSSNesterProperty)return os(ss(dr(u.value),t));let s=e.parent;if(null!=(l=s.raws)&&l.selector){let e=nr(s),r=e+s.raws.selector.length;return t.originalText.slice(e,r).trim()}let n=e.grandparent;if("value-paren_group"===s.type&&"value-func"===(null==n?void 0:n.type)&&"selector"===n.value){let e=or(s.open)+1,r=nr(s.close),n=t.originalText.slice(e,r).trim();return Hr(n)?[Tt,n]:n}return u.value}case"value-value":case"value-root":return r("group");case"value-comment":return t.originalText.slice(nr(u),or(u));case"value-comma_group":return Kr(e,t,r);case"value-paren_group":return fs(e,t,r);case"value-func":return[u.value,vr(e,"supports")&&Gr(u)?" ":"",r("group")];case"value-number":return[is(u.value),es(u.unit)];case"value-word":return u.isColor&&u.isHex||function(e){return hr.has(e.toLowerCase())}(u.value)?u.value.toLowerCase():u.value;case"value-colon":{let{previous:t}=e;return[u.value,"string"==typeof(null==t?void 0:t.value)&&t.value.endsWith("\\")||mr(e,"url")?"":_t]}case"value-string":return $t(u.raws.quote+u.value+u.raws.quote,t);case"value-atword":return["@",u.value];default:throw new Lt(u,"PostCSS")}},embed:Ft,insertPragma:function(e){let{frontMatter:t,content:r}=cr(e);return(t?t.raw+"\n\n":"")+function(e){let{shebang:t,text:r,pragmas:s,comments:n}=lr(e),o=(0,ir.strip)(r);return(t?`${t}\n`:"")+(0,ir.print)({pragmas:{format:"",...s},comments:n.trimStart()})+(o.startsWith("\n")?"\n":"\n\n")+o}(r)},massageAstNode:Bt,getVisitorKeys:Jt},vs=[{linguistLanguageId:50,name:"CSS",type:"markup",tmScope:"source.css",aceMode:"css",codemirrorMode:"css",codemirrorMimeType:"text/css",color:"#563d7c",extensions:[".css",".wxss"],parsers:["css"],vscodeLanguageIds:["css"]},{linguistLanguageId:262764437,name:"PostCSS",type:"markup",color:"#dc3a0c",tmScope:"source.postcss",group:"CSS",extensions:[".pcss",".postcss"],aceMode:"text",parsers:["css"],vscodeLanguageIds:["postcss"]},{linguistLanguageId:198,name:"Less",type:"markup",color:"#1d365d",aliases:["less-css"],extensions:[".less"],tmScope:"source.css.less",aceMode:"less",codemirrorMode:"css",codemirrorMimeType:"text/css",parsers:["less"],vscodeLanguageIds:["less"]},{linguistLanguageId:329,name:"SCSS",type:"markup",color:"#c6538c",tmScope:"source.css.scss",aceMode:"scss",codemirrorMode:"css",codemirrorMimeType:"text/x-scss",extensions:[".scss"],parsers:["scss"],vscodeLanguageIds:["scss"]}],gs={singleQuote:{category:"Common",type:"boolean",default:!1,description:"Use single quotes instead of double quotes."}},ws={};c(ws,{css:()=>Ks,less:()=>Xs,scss:()=>Zs});var bs=p(M(),1),xs=p(B(),1),ks=p(te(),1);var Os=function(e,t){let r=new SyntaxError(e+" ("+t.loc.start.line+":"+t.loc.start.column+")");return Object.assign(r,t)};function Ts(e,t,r){if(e&&"object"==typeof e){delete e.parent;for(let s in e)Ts(e[s],t,r),"type"===s&&"string"==typeof e[s]&&!e[s].startsWith(t)&&(!r||!r.test(e[s]))&&(e[s]=t+e[s])}return e}function _s(e){if(e&&"object"==typeof e){delete e.parent;for(let t in e)_s(e[t]);!Array.isArray(e)&&e.value&&!e.type&&(e.type="unknown")}return e}var Cs=p(oe(),1).default.default;var Ss=function(e){let t;try{t=Cs(e)}catch{return{type:"selector-unknown",value:e}}return Ts(_s(t),"media-")},Es=p(Ee(),1);var As=function(e){if(/\/\/|\/\*/.test(e))return{type:"selector-unknown",value:e.trim()};let t;try{new Es.default((e=>{t=e})).process(e)}catch{return{type:"selector-unknown",value:e}}return Ts(t,"selector-")},js=p(Je(),1),Is=e=>{for(;e.parent;)e=e.parent;return e};var Ps=function(e){return Is(e).text.slice(e.group.open.sourceIndex+1,e.group.close.sourceIndex).trim()};var Ms=function(e){if(Pt(e))for(let t=e.length-1;t>0;t--)if("word"===e[t].type&&"{"===e[t].value&&"word"===e[t-1].type&&e[t-1].value.endsWith("#"))return!0;return!1};var Ns=function(e){return e.some((e=>"string"===e.type||"func"===e.type&&!e.value.endsWith("\\")))};var Rs=function(e,t){return!("scss"!==t.parser||"word"!==(null==e?void 0:e.type)||!e.value.startsWith("$"))};function $s(e,t){var r;let{nodes:s}=e,n={open:null,close:null,groups:[],type:"paren_group"},o=[n],i=n,a={groups:[],type:"comma_group"},l=[a];for(let i=0;i<s.length;++i){let u=s[i];if("scss"===t.parser&&"number"===u.type&&".."===u.unit&&u.value.endsWith(".")&&(u.value=u.value.slice(0,-1),u.unit="..."),"func"===u.type&&"selector"===u.value&&(u.group.groups=[As(Is(e).text.slice(u.group.open.sourceIndex+1,u.group.close.sourceIndex))]),"func"===u.type&&"url"===u.value){let e=(null==(r=u.group)?void 0:r.groups)??[],s=[];for(let t=0;t<e.length;t++){let r=e[t];"comma_group"===r.type?s=[...s,...r.groups]:s.push(r)}(Ms(s)||!Ns(s)&&!Rs(s[0],t))&&(u.group.groups=[Ps(u)])}if("paren"===u.type&&"("===u.value)n={open:u,close:null,groups:[],type:"paren_group"},o.push(n),a={groups:[],type:"comma_group"},l.push(a);else if("paren"===u.type&&")"===u.value){if(a.groups.length>0&&n.groups.push(a),n.close=u,1===l.length)throw new Error("Unbalanced parenthesis");l.pop(),a=At(!1,l,-1),a.groups.push(n),o.pop(),n=At(!1,o,-1)}else"comma"===u.type?(n.groups.push(a),a={groups:[],type:"comma_group"},l[l.length-1]=a):a.groups.push(u)}return a.groups.length>0&&n.groups.push(a),i}function Ls(e){return"paren_group"===e.type&&!e.open&&!e.close&&1===e.groups.length||"comma_group"===e.type&&1===e.groups.length?Ls(e.groups[0]):"paren_group"===e.type||"comma_group"===e.type?{...e,groups:e.groups.map(Ls)}:e}function Ws(e,t){if(e&&"object"==typeof e)for(let r in e)"parent"!==r&&(Ws(e[r],t),"nodes"===r&&(e.group=Ls($s(e,t)),delete e[r]));return e}var zs=function(e,t){if("less"===t.parser&&e.startsWith("~`"))return{type:"value-unknown",value:e};let r=null;try{r=new js.default(e,{loose:!0}).parse()}catch{return{type:"value-unknown",value:e}}return r.text=e,Ts(Ws(r,t),"value-",/^selector-/)},qs=new Set(["import","use","forward"]);var Bs=function(e){return qs.has(e)};var Ds=function(e,t){return!("scss"!==t.parser||!e.selector)&&e.selector.replace(/\/\*.*?\*\//,"").replace(/\/\/.*\n/,"").trim().endsWith(":")},Us=/(\s*)(!default).*$/,Fs=/(\s*)(!global).*$/;function Vs(e,t){var r,s;if(e&&"object"==typeof e){delete e.parent;for(let r in e)Vs(e[r],t);if(!e.type)return e;if(e.raws??(e.raws={}),"css-decl"===e.type&&"string"==typeof e.prop&&e.prop.startsWith("--")&&"string"==typeof e.value&&e.value.startsWith("{")){let s;if(e.value.trimEnd().endsWith("}")){let n,o,i=t.originalText.slice(0,e.source.start.offset),a="a".repeat(e.prop.length)+t.originalText.slice(e.source.start.offset+e.prop.length,e.source.end.offset),l=Qe(!1,i,/[^\n]/g," ")+a;n="scss"===t.parser?Qs:"less"===t.parser?Hs:Js;try{o=n(l,{...t})}catch{}1===(null==(r=null==o?void 0:o.nodes)?void 0:r.length)&&"css-rule"===o.nodes[0].type&&(s=o.nodes[0].nodes)}return e.value=s?{type:"css-rule",nodes:s}:{type:"value-unknown",value:e.raws.value.raw},e}let n="";"string"==typeof e.selector&&(n=e.raws.selector?e.raws.selector.scss??e.raws.selector.raw:e.selector,e.raws.between&&e.raws.between.trim().length>0&&(n+=e.raws.between),e.raws.selector=n);let o="";"string"==typeof e.value&&(o=e.raws.value?e.raws.value.scss??e.raws.value.raw:e.value,o=o.trim(),e.raws.value=o);let i="";if("string"==typeof e.params&&(i=e.raws.params?e.raws.params.scss??e.raws.params.raw:e.params,e.raws.afterName&&e.raws.afterName.trim().length>0&&(i=e.raws.afterName+i),e.raws.between&&e.raws.between.trim().length>0&&(i+=e.raws.between),i=i.trim(),e.raws.params=i),n.trim().length>0)return n.startsWith("@")&&n.endsWith(":")?e:e.mixin?(e.selector=zs(n,t),e):(Ds(e,t)&&(e.isSCSSNesterProperty=!0),e.selector=As(n),e);if(o.length>0){let r=o.match(Us);r&&(o=o.slice(0,r.index),e.scssDefault=!0,"!default"!==r[0].trim()&&(e.raws.scssDefault=r[0]));let s=o.match(Fs);if(s&&(o=o.slice(0,s.index),e.scssGlobal=!0,"!global"!==s[0].trim()&&(e.raws.scssGlobal=s[0])),o.startsWith("progid:"))return{type:"value-unknown",value:o};e.value=zs(o,t)}if("less"===t.parser&&"css-decl"===e.type&&o.startsWith("extend(")&&(e.extend||(e.extend=":"===e.raws.between),e.extend&&!e.selector&&(delete e.value,e.selector=As(o.slice(7,-1)))),"css-atrule"===e.type){if("less"===t.parser){if(e.mixin){let t=e.raws.identifier+e.name+e.raws.afterName+e.raws.params;return e.selector=As(t),delete e.params,e}if(e.function)return e}if("css"===t.parser&&"custom-selector"===e.name){let t=e.params.match(/:--\S+\s+/)[0].trim();return e.customSelector=t,e.selector=As(e.params.slice(t.length).trim()),delete e.params,e}if("less"===t.parser){if(e.name.includes(":")&&!e.params){e.variable=!0;let r=e.name.split(":");e.name=r[0],e.value=zs(r.slice(1).join(":"),t)}if(!["page","nest","keyframes"].includes(e.name)&&":"===(null==(s=e.params)?void 0:s[0])){e.variable=!0;let r=e.params.slice(1);r&&(e.value=zs(r,t)),e.raws.afterName+=":"}if(e.variable)return delete e.params,e.value||delete e.value,e}}if("css-atrule"===e.type&&i.length>0){let{name:r}=e,s=e.name.toLowerCase();return"warn"===r||"error"===r?(e.params={type:"media-unknown",value:i},e):"extend"===r||"nest"===r?(e.selector=As(i),delete e.params,e):"at-root"===r?(/^\(\s*(?:without|with)\s*:.+\)$/s.test(i)?e.params=zs(i,t):(e.selector=As(i),delete e.params),e):Bs(s)?(e.import=!0,delete e.filename,e.params=zs(i,t),e):["namespace","supports","if","else","for","each","while","debug","mixin","include","function","return","define-mixin","add-mixin"].includes(r)?(i=i.replace(/(\$\S+?)(\s+)?\.{3}/,"$1...$2"),i=i.replace(/^(?!if)(\S+)(\s+)\(/,"$1($2"),e.value=zs(i,t),delete e.params,e):["media","custom-media"].includes(s)?i.includes("#{")?{type:"media-unknown",value:i}:(e.params=Ss(i),e):(e.params=i,e)}}return e}function Gs(e,t,r){let s,n=cr(t),{frontMatter:o}=n;t=n.content;try{s=e(t,{map:!1})}catch(e){let{name:t,reason:r,line:s,column:n}=e;throw"number"!=typeof s?e:Os(`${t}: ${r}`,{loc:{start:{line:s,column:n}},cause:e})}return r.originalText=t,s=Vs(Ts(s,"css-"),r),tr(s,t),o&&(o.source={startOffset:0,endOffset:o.raw.length},s.frontMatter=o),s}function Js(e,t={}){return Gs(bs.default.default,e,t)}function Hs(e,t={}){return Gs((e=>xs.default.parse(function(e){let t,r="initial",s="initial",n=!1,o=[];for(let i=0;i<e.length;i++){let a=e[i];switch(r){case"initial":if("'"===a){r="single-quotes";continue}if('"'===a){r="double-quotes";continue}if(("u"===a||"U"===a)&&"url("===e.slice(i,i+4).toLowerCase()){r="url",i+=3;continue}if("*"===a&&"/"===e[i-1]){r="comment-block";continue}if("/"===a&&"/"===e[i-1]){r="comment-inline",t=i-1;continue}continue;case"single-quotes":if("'"===a&&"\\"!==e[i-1]&&(r=s,s="initial"),"\n"===a||"\r"===a)return e;continue;case"double-quotes":if('"'===a&&"\\"!==e[i-1]&&(r=s,s="initial"),"\n"===a||"\r"===a)return e;continue;case"url":if(")"===a&&(r="initial"),"\n"===a||"\r"===a)return e;if("'"===a){r="single-quotes",s="url";continue}if('"'===a){r="double-quotes",s="url";continue}continue;case"comment-block":"/"===a&&"*"===e[i-1]&&(r="initial");continue;case"comment-inline":('"'===a||"'"===a||"*"===a)&&(n=!0),("\n"===a||"\r"===a)&&(n&&o.push([t,i]),r="initial",n=!1);continue}}for(let[t,r]of o)e=e.slice(0,t)+Qe(!1,e.slice(t,r),/["'*]/g," ")+e.slice(r);return e}(e))),e,t)}function Qs(e,t={}){return Gs(ks.default,e,t)}var Ys={astFormat:"postcss",hasPragma:function(e){return function(e){let{pragmas:t}=lr(e);return Object.prototype.hasOwnProperty.call(t,"prettier")||Object.prototype.hasOwnProperty.call(t,"format")}(cr(e).content)},locStart:nr,locEnd:or},Ks={...Ys,parse:Js},Xs={...Ys,parse:Hs},Zs={...Ys,parse:Qs},en={postcss:ys},tn=He}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,