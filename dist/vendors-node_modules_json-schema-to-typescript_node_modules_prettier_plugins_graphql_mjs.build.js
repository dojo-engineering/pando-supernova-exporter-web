"use strict";(self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_=self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_||[]).push([["vendors-node_modules_json-schema-to-typescript_node_modules_prettier_plugins_graphql_mjs"],{"./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/graphql.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/graphql.mjs ***!
  \******************************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{default:()=>Qe,languages:()=>z,options:()=>H,parsers:()=>W,printers:()=>Xe});var i=Object.defineProperty,r=(e,t)=>{for(var n in t)i(e,n,{get:t[n],enumerable:!0})},s={};r(s,{languages:()=>z,options:()=>H,parsers:()=>W,printers:()=>Xe});var a=(e,t,n,i)=>{if(!e||null!=t)return t.replaceAll?t.replaceAll(n,i):n.global?t.replace(n,i):t.split(n).join(i)},o="indent",l="group",c="if-break",u="line",p=()=>{},h=p,d=p;function f(e){return h(e),{type:o,contents:e}}function E(e,t={}){return h(e),d(t.expandedStates,!0),{type:l,id:t.id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}function m(e,t="",n={}){return h(e),""!==t&&h(t),{type:c,breakContents:e,flatContents:t,groupId:n.groupId}}var T={type:u},N={type:u,soft:!0},I=[{type:u,hard:!0},{type:"break-parent"}];function y(e,t){h(e),d(t);let n=[];for(let i=0;i<t.length;i++)0!==i&&n.push(e),n.push(t[i]);return n}function v(e){return(t,n,i)=>{let r=!(null==i||!i.backwards);if(!1===n)return!1;let{length:s}=t,a=n;for(;a>=0&&a<s;){let n=t.charAt(a);if(e instanceof RegExp){if(!e.test(n))return a}else if(!e.includes(n))return a;r?a--:a++}return(-1===a||a===s)&&a}}v(/\s/);var _=v(" \t"),A=v(",; \t"),O=v(/[^\n\r]/);var x=function(e,t,n){let i=!(null==n||!n.backwards);if(!1===t)return!1;let r=e.charAt(t);if(i){if("\r"===e.charAt(t-1)&&"\n"===r)return t-2;if("\n"===r||"\r"===r||"\u2028"===r||"\u2029"===r)return t-1}else{if("\r"===r&&"\n"===e.charAt(t+1))return t+2;if("\n"===r||"\r"===r||"\u2028"===r||"\u2029"===r)return t+1}return t};var D=function(e,t,n={}){let i=_(e,n.backwards?t-1:t,n);return i!==x(e,i,n)};var g=function(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t};var k=function(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?O(e,t):t)};var S=function(e,t){let n=null,i=t;for(;i!==n;)n=i,i=A(e,i),i=g(e,i),i=_(e,i);return i=k(e,i),i=x(e,i),!1!==i&&D(e,i)};var C=function(e){return Array.isArray(e)&&e.length>0},b=class extends Error{name="UnexpectedNodeError";constructor(e,t,n="type"){super(`Unexpected ${t} node ${n}: ${JSON.stringify(e[n])}.`),this.node=e}},L=null;function R(e){if(null!==L&&(L.property,1)){let e=L;return L=R.prototype=null,e}return L=R.prototype=e??Object.create(null),new R}for(let e=0;e<=10;e++)R();var F,w,P=function(e,t="type"){return function(e){R(e)}(e),function(n){let i=n[t],r=e[i];if(!Array.isArray(r))throw Object.assign(new Error(`Missing visitor keys for '${i}'.`),{node:n});return r}},M=class{constructor(e,t,n){this.start=e.start,this.end=t.end,this.startToken=e,this.endToken=t,this.source=n}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}},V=class{constructor(e,t,n,i,r,s){this.kind=e,this.start=t,this.end=n,this.line=i,this.column=r,this.value=s,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}},U={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]};new Set(Object.keys(U));(w=F||(F={})).QUERY="query",w.MUTATION="mutation",w.SUBSCRIPTION="subscription";var B=P(U,"kind");function j(e){return e.loc.start}function K(e){return e.loc.end}var $=function(e,t,n){let{node:i}=e;if(!i.description)return"";let r=[n("description")];return"InputValueDefinition"!==i.kind||i.description.block?r.push(I):r.push(T),r};function G(e,t,n){if(0===n.directives.length)return"";let i=y(T,e.map(t,"directives"));return"FragmentDefinition"===n.kind||"OperationDefinition"===n.kind?E([T,i]):[" ",E(f([N,i]))]}function Y(e,t,n,i){return e.map((({isLast:e,node:i})=>{let r=n();return!e&&S(t.originalText,K(i))?[r,I]:r}),i)}function q(e,t){let{node:n}=e;return C(n.variableDefinitions)?E(["(",f([N,y([m("",", "),N],e.map(t,"variableDefinitions"))]),N,")"]):""}function J(e,t){"StringValue"===e.kind&&e.block&&!e.value.includes("\n")&&(t.value=e.value.trim())}J.ignoredProperties=new Set(["loc","comments"]);var X={print:function(e,t,n){let{node:i}=e;switch(i.kind){case"Document":return[...y(I,Y(e,t,n,"definitions")),I];case"OperationDefinition":{let r="{"!==t.originalText[j(i)],s=!!i.name;return[r?i.operation:"",r&&s?[" ",n("name")]:"",r&&!s&&C(i.variableDefinitions)?" ":"",q(e,n),G(e,n,i),r||s?" ":"",n("selectionSet")]}case"FragmentDefinition":return["fragment ",n("name"),q(e,n)," on ",n("typeCondition"),G(e,n,i)," ",n("selectionSet")];case"SelectionSet":return["{",f([I,y(I,Y(e,t,n,"selections"))]),I,"}"];case"Field":return E([i.alias?[n("alias"),": "]:"",n("name"),i.arguments.length>0?E(["(",f([N,y([m("",", "),N],Y(e,t,n,"arguments"))]),N,")"]):"",G(e,n,i),i.selectionSet?" ":"",n("selectionSet")]);case"Name":case"IntValue":case"FloatValue":case"EnumValue":return i.value;case"StringValue":if(i.block){let e=a(!1,i.value,'"""',String.raw`\"""`).split("\n");return 1===e.length&&(e[0]=e[0].trim()),e.every((e=>""===e))&&(e.length=0),y(I,['"""',...e,'"""'])}return['"',a(!1,a(!1,i.value,/["\\]/g,String.raw`\$&`),"\n",String.raw`\n`),'"'];case"BooleanValue":return i.value?"true":"false";case"NullValue":return"null";case"Variable":return["$",n("name")];case"ListValue":return E(["[",f([N,y([m("",", "),N],e.map(n,"values"))]),N,"]"]);case"ObjectValue":{let r=t.bracketSpacing&&i.fields.length>0?" ":"";return E(["{",r,f([N,y([m("",", "),N],e.map(n,"fields"))]),N,m("",r),"}"])}case"ObjectField":case"Argument":return[n("name"),": ",n("value")];case"Directive":return["@",n("name"),i.arguments.length>0?E(["(",f([N,y([m("",", "),N],Y(e,t,n,"arguments"))]),N,")"]):""];case"NamedType":return n("name");case"VariableDefinition":return[n("variable"),": ",n("type"),i.defaultValue?[" = ",n("defaultValue")]:"",G(e,n,i)];case"ObjectTypeExtension":case"ObjectTypeDefinition":case"InputObjectTypeExtension":case"InputObjectTypeDefinition":case"InterfaceTypeExtension":case"InterfaceTypeDefinition":{let{kind:r}=i,s=[];return r.endsWith("TypeDefinition")?s.push($(e,t,n)):s.push("extend "),r.startsWith("ObjectType")?s.push("type"):r.startsWith("InputObjectType")?s.push("input"):s.push("interface"),s.push(" ",n("name")),!r.startsWith("InputObjectType")&&i.interfaces.length>0&&s.push(" implements ",...function(e,t,n){let{node:i}=e,r=[],{interfaces:s}=i,a=e.map(n,"interfaces");for(let e=0;e<s.length;e++){let n=s[e];r.push(a[e]);let i=s[e+1];if(i){let e=t.originalText.slice(n.loc.end,i.loc.start).includes("#");r.push(" &",e?T:" ")}}return r}(e,t,n)),s.push(G(e,n,i)),i.fields.length>0&&s.push([" {",f([I,y(I,Y(e,t,n,"fields"))]),I,"}"]),s}case"FieldDefinition":return[$(e,t,n),n("name"),i.arguments.length>0?E(["(",f([N,y([m("",", "),N],Y(e,t,n,"arguments"))]),N,")"]):"",": ",n("type"),G(e,n,i)];case"DirectiveDefinition":return[$(e,t,n),"directive ","@",n("name"),i.arguments.length>0?E(["(",f([N,y([m("",", "),N],Y(e,t,n,"arguments"))]),N,")"]):"",i.repeatable?" repeatable":""," on ",...y(" | ",e.map(n,"locations"))];case"EnumTypeExtension":case"EnumTypeDefinition":return[$(e,t,n),"EnumTypeExtension"===i.kind?"extend ":"","enum ",n("name"),G(e,n,i),i.values.length>0?[" {",f([I,y(I,Y(e,t,n,"values"))]),I,"}"]:""];case"EnumValueDefinition":return[$(e,t,n),n("name"),G(e,n,i)];case"InputValueDefinition":return[$(e,t,n),n("name"),": ",n("type"),i.defaultValue?[" = ",n("defaultValue")]:"",G(e,n,i)];case"SchemaExtension":return["extend schema",G(e,n,i),...i.operationTypes.length>0?[" {",f([I,y(I,Y(e,t,n,"operationTypes"))]),I,"}"]:[]];case"SchemaDefinition":return[$(e,t,n),"schema",G(e,n,i)," {",i.operationTypes.length>0?f([I,y(I,Y(e,t,n,"operationTypes"))]):"",I,"}"];case"OperationTypeDefinition":return[i.operation,": ",n("type")];case"FragmentSpread":return["...",n("name"),G(e,n,i)];case"InlineFragment":return["...",i.typeCondition?[" on ",n("typeCondition")]:"",G(e,n,i)," ",n("selectionSet")];case"UnionTypeExtension":case"UnionTypeDefinition":return E([$(e,t,n),E(["UnionTypeExtension"===i.kind?"extend ":"","union ",n("name"),G(e,n,i),i.types.length>0?[" =",m(""," "),f([m([T,"| "]),y([T,"| "],e.map(n,"types"))])]:""])]);case"ScalarTypeExtension":case"ScalarTypeDefinition":return[$(e,t,n),"ScalarTypeExtension"===i.kind?"extend ":"","scalar ",n("name"),G(e,n,i)];case"NonNullType":return[n("type"),"!"];case"ListType":return["[",n("type"),"]"];default:throw new b(i,"Graphql","kind")}},massageAstNode:J,hasPrettierIgnore:function(e){var t;let{node:n}=e;return null==(t=null==n?void 0:n.comments)?void 0:t.some((e=>"prettier-ignore"===e.value.trim()))},insertPragma:function(e){return"# @format\n\n"+e},printComment:function(e){let t=e.node;if("Comment"===t.kind)return"#"+t.value.trimEnd();throw new Error("Not a comment: "+JSON.stringify(t))},canAttachComment:function(e){return"Comment"!==e.kind},getVisitorKeys:B},Q=X,z=[{linguistLanguageId:139,name:"GraphQL",type:"data",color:"#e10098",extensions:[".graphql",".gql",".graphqls"],tmScope:"source.graphql",aceMode:"text",parsers:["graphql"],vscodeLanguageIds:["graphql"]}],H={bracketSpacing:{category:"Common",type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."}},W={};function Z(e,t){if(!e)throw new Error(t??"Unexpected invariant triggered.")}r(W,{graphql:()=>Je});var ee=/\r\n|[\n\r]/g;function te(e,t){let n=0,i=1;for(let r of e.body.matchAll(ee)){if("number"==typeof r.index||Z(!1),r.index>=t)break;n=r.index+r[0].length,i+=1}return{line:i,column:t+1-n}}function ne(e){return ie(e.source,te(e.source,e.start))}function ie(e,t){let n=e.locationOffset.column-1,i="".padStart(n)+e.body,r=t.line-1,s=e.locationOffset.line-1,a=t.line+s,o=1===t.line?n:0,l=t.column+o,c=`${e.name}:${a}:${l}\n`,u=i.split(/\r\n|[\n\r]/g),p=u[r];if(p.length>120){let e=Math.floor(l/80),t=l%80,n=[];for(let e=0;e<p.length;e+=80)n.push(p.slice(e,e+80));return c+re([[`${a} |`,n[0]],...n.slice(1,e+1).map((e=>["|",e])),["|","^".padStart(t)],["|",n[e+1]]])}return c+re([[a-1+" |",u[r-1]],[`${a} |`,p],["|","^".padStart(l)],[`${a+1} |`,u[r+1]]])}function re(e){let t=e.filter((([e,t])=>void 0!==t)),n=Math.max(...t.map((([e])=>e.length)));return t.map((([e,t])=>e.padStart(n)+(t?" "+t:""))).join("\n")}var se,ae,oe,le=class e extends Error{constructor(t,...n){var i,r,s;let{nodes:a,source:o,positions:l,path:c,originalError:u,extensions:p}=function(e){let t=e[0];return null==t||"kind"in t||"length"in t?{nodes:t,source:e[1],positions:e[2],path:e[3],originalError:e[4],extensions:e[5]}:t}(n);super(t),this.name="GraphQLError",this.path=c??void 0,this.originalError=u??void 0,this.nodes=ce(Array.isArray(a)?a:a?[a]:void 0);let h=ce(null===(i=this.nodes)||void 0===i?void 0:i.map((e=>e.loc)).filter((e=>null!=e)));this.source=o??(null==h||null===(r=h[0])||void 0===r?void 0:r.source),this.positions=l??(null==h?void 0:h.map((e=>e.start))),this.locations=l&&o?l.map((e=>te(o,e))):null==h?void 0:h.map((e=>te(e.source,e.start)));let d=function(e){return"object"==typeof e&&null!==e}(null==u?void 0:u.extensions)?null==u?void 0:u.extensions:void 0;this.extensions=null!==(s=p??d)&&void 0!==s?s:Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),null!=u&&u.stack?Object.defineProperty(this,"stack",{value:u.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,e):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let e=this.message;if(this.nodes)for(let t of this.nodes)t.loc&&(e+="\n\n"+ne(t.loc));else if(this.source&&this.locations)for(let t of this.locations)e+="\n\n"+ie(this.source,t);return e}toJSON(){let e={message:this.message};return null!=this.locations&&(e.locations=this.locations),null!=this.path&&(e.path=this.path),null!=this.extensions&&Object.keys(this.extensions).length>0&&(e.extensions=this.extensions),e}};function ce(e){return void 0===e||0===e.length?void 0:e}function ue(e,t,n){return new le(`Syntax Error: ${n}`,{source:e,positions:[t]})}function pe(e){return 9===e||32===e}function he(e){return e>=48&&e<=57}function de(e){return e>=97&&e<=122||e>=65&&e<=90}function fe(e){return de(e)||95===e}function Ee(e){return de(e)||he(e)||95===e}function me(e){var t;let n=Number.MAX_SAFE_INTEGER,i=null,r=-1;for(let t=0;t<e.length;++t){var s;let a=e[t],o=Te(a);o!==a.length&&(i=null!==(s=i)&&void 0!==s?s:t,r=t,0!==t&&o<n&&(n=o))}return e.map(((e,t)=>0===t?e:e.slice(n))).slice(null!==(t=i)&&void 0!==t?t:0,r+1)}function Te(e){let t=0;for(;t<e.length&&pe(e.charCodeAt(t));)++t;return t}!function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"}(se||(se={})),function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"}(ae||(ae={})),function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"}(oe||(oe={}));var Ne=class{constructor(e){let t=new V(oe.SOF,0,0,0,0);this.source=e,this.lastToken=t,this.token=t,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let e=this.token;if(e.kind!==oe.EOF)do{if(e.next)e=e.next;else{let t=xe(this,e.end);e.next=t,t.prev=e,e=t}}while(e.kind===oe.COMMENT);return e}};function Ie(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function ye(e,t){return ve(e.charCodeAt(t))&&_e(e.charCodeAt(t+1))}function ve(e){return e>=55296&&e<=56319}function _e(e){return e>=56320&&e<=57343}function Ae(e,t){let n=e.source.body.codePointAt(t);if(void 0===n)return oe.EOF;if(n>=32&&n<=126){let e=String.fromCodePoint(n);return'"'===e?"'\"'":`"${e}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function Oe(e,t,n,i,r){let s=e.line,a=1+n-e.lineStart;return new V(t,n,i,s,a,r)}function xe(e,t){let n=e.source.body,i=n.length,r=t;for(;r<i;){let t=n.charCodeAt(r);switch(t){case 65279:case 9:case 32:case 44:++r;continue;case 10:++r,++e.line,e.lineStart=r;continue;case 13:10===n.charCodeAt(r+1)?r+=2:++r,++e.line,e.lineStart=r;continue;case 35:return De(e,r);case 33:return Oe(e,oe.BANG,r,r+1);case 36:return Oe(e,oe.DOLLAR,r,r+1);case 38:return Oe(e,oe.AMP,r,r+1);case 40:return Oe(e,oe.PAREN_L,r,r+1);case 41:return Oe(e,oe.PAREN_R,r,r+1);case 46:if(46===n.charCodeAt(r+1)&&46===n.charCodeAt(r+2))return Oe(e,oe.SPREAD,r,r+3);break;case 58:return Oe(e,oe.COLON,r,r+1);case 61:return Oe(e,oe.EQUALS,r,r+1);case 64:return Oe(e,oe.AT,r,r+1);case 91:return Oe(e,oe.BRACKET_L,r,r+1);case 93:return Oe(e,oe.BRACKET_R,r,r+1);case 123:return Oe(e,oe.BRACE_L,r,r+1);case 124:return Oe(e,oe.PIPE,r,r+1);case 125:return Oe(e,oe.BRACE_R,r,r+1);case 34:return 34===n.charCodeAt(r+1)&&34===n.charCodeAt(r+2)?we(e,r):Se(e,r)}if(he(t)||45===t)return ge(e,r,t);if(fe(t))return Pe(e,r);throw ue(e.source,r,39===t?"Unexpected single quote character ('), did you mean to use a double quote (\")?":Ie(t)||ye(n,r)?`Unexpected character: ${Ae(e,r)}.`:`Invalid character: ${Ae(e,r)}.`)}return Oe(e,oe.EOF,i,i)}function De(e,t){let n=e.source.body,i=n.length,r=t+1;for(;r<i;){let e=n.charCodeAt(r);if(10===e||13===e)break;if(Ie(e))++r;else{if(!ye(n,r))break;r+=2}}return Oe(e,oe.COMMENT,t,r,n.slice(t+1,r))}function ge(e,t,n){let i=e.source.body,r=t,s=n,a=!1;if(45===s&&(s=i.charCodeAt(++r)),48===s){if(s=i.charCodeAt(++r),he(s))throw ue(e.source,r,`Invalid number, unexpected digit after 0: ${Ae(e,r)}.`)}else r=ke(e,r,s),s=i.charCodeAt(r);if(46===s&&(a=!0,s=i.charCodeAt(++r),r=ke(e,r,s),s=i.charCodeAt(r)),(69===s||101===s)&&(a=!0,s=i.charCodeAt(++r),(43===s||45===s)&&(s=i.charCodeAt(++r)),r=ke(e,r,s),s=i.charCodeAt(r)),46===s||fe(s))throw ue(e.source,r,`Invalid number, expected digit but got: ${Ae(e,r)}.`);return Oe(e,a?oe.FLOAT:oe.INT,t,r,i.slice(t,r))}function ke(e,t,n){if(!he(n))throw ue(e.source,t,`Invalid number, expected digit but got: ${Ae(e,t)}.`);let i=e.source.body,r=t+1;for(;he(i.charCodeAt(r));)++r;return r}function Se(e,t){let n=e.source.body,i=n.length,r=t+1,s=r,a="";for(;r<i;){let i=n.charCodeAt(r);if(34===i)return a+=n.slice(s,r),Oe(e,oe.STRING,t,r+1,a);if(92!==i){if(10===i||13===i)break;if(Ie(i))++r;else{if(!ye(n,r))throw ue(e.source,r,`Invalid character within String: ${Ae(e,r)}.`);r+=2}}else{a+=n.slice(s,r);let t=117===n.charCodeAt(r+1)?123===n.charCodeAt(r+2)?Ce(e,r):be(e,r):Fe(e,r);a+=t.value,r+=t.size,s=r}}throw ue(e.source,r,"Unterminated string.")}function Ce(e,t){let n=e.source.body,i=0,r=3;for(;r<12;){let e=n.charCodeAt(t+r++);if(125===e){if(r<5||!Ie(i))break;return{value:String.fromCodePoint(i),size:r}}if(i=i<<4|Re(e),i<0)break}throw ue(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+r)}".`)}function be(e,t){let n=e.source.body,i=Le(n,t+2);if(Ie(i))return{value:String.fromCodePoint(i),size:6};if(ve(i)&&92===n.charCodeAt(t+6)&&117===n.charCodeAt(t+7)){let e=Le(n,t+8);if(_e(e))return{value:String.fromCodePoint(i,e),size:12}}throw ue(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Le(e,t){return Re(e.charCodeAt(t))<<12|Re(e.charCodeAt(t+1))<<8|Re(e.charCodeAt(t+2))<<4|Re(e.charCodeAt(t+3))}function Re(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function Fe(e,t){let n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:"\n",size:2};case 114:return{value:"\r",size:2};case 116:return{value:"\t",size:2}}throw ue(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function we(e,t){let n=e.source.body,i=n.length,r=e.lineStart,s=t+3,a=s,o="",l=[];for(;s<i;){let i=n.charCodeAt(s);if(34===i&&34===n.charCodeAt(s+1)&&34===n.charCodeAt(s+2)){o+=n.slice(a,s),l.push(o);let i=Oe(e,oe.BLOCK_STRING,t,s+3,me(l).join("\n"));return e.line+=l.length-1,e.lineStart=r,i}if(92!==i||34!==n.charCodeAt(s+1)||34!==n.charCodeAt(s+2)||34!==n.charCodeAt(s+3))if(10!==i&&13!==i)if(Ie(i))++s;else{if(!ye(n,s))throw ue(e.source,s,`Invalid character within String: ${Ae(e,s)}.`);s+=2}else o+=n.slice(a,s),l.push(o),13===i&&10===n.charCodeAt(s+1)?s+=2:++s,o="",a=s,r=s;else o+=n.slice(a,s),a=s+1,s+=4}throw ue(e.source,s,"Unterminated string.")}function Pe(e,t){let n=e.source.body,i=n.length,r=t+1;for(;r<i;){if(!Ee(n.charCodeAt(r)))break;++r}return Oe(e,oe.NAME,t,r,n.slice(t,r))}function Me(e,t){if(!e)throw new Error(t)}function Ve(e){return Ue(e,[])}function Ue(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return function(e,t){if(null===e)return"null";if(t.includes(e))return"[Circular]";let n=[...t,e];if(function(e){return"function"==typeof e.toJSON}(e)){let t=e.toJSON();if(t!==e)return"string"==typeof t?t:Ue(t,n)}else if(Array.isArray(e))return function(e,t){if(0===e.length)return"[]";if(t.length>2)return"[Array]";let n=Math.min(10,e.length),i=e.length-n,r=[];for(let i=0;i<n;++i)r.push(Ue(e[i],t));return 1===i?r.push("... 1 more item"):i>1&&r.push(`... ${i} more items`),"["+r.join(", ")+"]"}(e,n);return function(e,t){let n=Object.entries(e);return 0===n.length?"{}":t.length>2?"["+function(e){let t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if("Object"===t&&"function"==typeof e.constructor){let t=e.constructor.name;if("string"==typeof t&&""!==t)return t}return t}(e)+"]":"{ "+n.map((([e,n])=>e+": "+Ue(n,t))).join(", ")+" }"}(e,n)}(e,t);default:return String(e)}}var Be=globalThis.process&&"production"===globalThis.process.env.NODE_ENV?function(e,t){return e instanceof t}:function(e,t){if(e instanceof t)return!0;if("object"==typeof e&&null!==e){var n;let i=t.prototype[Symbol.toStringTag];if(i===(Symbol.toStringTag in e?e[Symbol.toStringTag]:null===(n=e.constructor)||void 0===n?void 0:n.name)){let t=Ve(e);throw new Error(`Cannot use ${i} "${t}" from another module or realm.\n\nEnsure that there is only one instance of "graphql" in the node_modules\ndirectory. If different versions of "graphql" are the dependencies of other\nrelied on modules, use "resolutions" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate "graphql" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`)}}return!1},je=class{constructor(e,t="GraphQL request",n={line:1,column:1}){"string"==typeof e||Me(!1,`Body must be a string. Received: ${Ve(e)}.`),this.body=e,this.name=t,this.locationOffset=n,this.locationOffset.line>0||Me(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||Me(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}};var Ke=class{constructor(e,t={}){let n=function(e){return Be(e,je)}(e)?e:new je(e);this._lexer=new Ne(n),this._options=t,this._tokenCounter=0}parseName(){let e=this.expectToken(oe.NAME);return this.node(e,{kind:ae.NAME,value:e.value})}parseDocument(){return this.node(this._lexer.token,{kind:ae.DOCUMENT,definitions:this.many(oe.SOF,this.parseDefinition,oe.EOF)})}parseDefinition(){if(this.peek(oe.BRACE_L))return this.parseOperationDefinition();let e=this.peekDescription(),t=e?this._lexer.lookahead():this._lexer.token;if(t.kind===oe.NAME){switch(t.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(e)throw ue(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(t.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(t)}parseOperationDefinition(){let e=this._lexer.token;if(this.peek(oe.BRACE_L))return this.node(e,{kind:ae.OPERATION_DEFINITION,operation:F.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});let t,n=this.parseOperationType();return this.peek(oe.NAME)&&(t=this.parseName()),this.node(e,{kind:ae.OPERATION_DEFINITION,operation:n,name:t,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){let e=this.expectToken(oe.NAME);switch(e.value){case"query":return F.QUERY;case"mutation":return F.MUTATION;case"subscription":return F.SUBSCRIPTION}throw this.unexpected(e)}parseVariableDefinitions(){return this.optionalMany(oe.PAREN_L,this.parseVariableDefinition,oe.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:ae.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(oe.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(oe.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){let e=this._lexer.token;return this.expectToken(oe.DOLLAR),this.node(e,{kind:ae.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:ae.SELECTION_SET,selections:this.many(oe.BRACE_L,this.parseSelection,oe.BRACE_R)})}parseSelection(){return this.peek(oe.SPREAD)?this.parseFragment():this.parseField()}parseField(){let e,t,n=this._lexer.token,i=this.parseName();return this.expectOptionalToken(oe.COLON)?(e=i,t=this.parseName()):t=i,this.node(n,{kind:ae.FIELD,alias:e,name:t,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(oe.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(e){let t=e?this.parseConstArgument:this.parseArgument;return this.optionalMany(oe.PAREN_L,t,oe.PAREN_R)}parseArgument(e=!1){let t=this._lexer.token,n=this.parseName();return this.expectToken(oe.COLON),this.node(t,{kind:ae.ARGUMENT,name:n,value:this.parseValueLiteral(e)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){let e=this._lexer.token;this.expectToken(oe.SPREAD);let t=this.expectOptionalKeyword("on");return!t&&this.peek(oe.NAME)?this.node(e,{kind:ae.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(e,{kind:ae.INLINE_FRAGMENT,typeCondition:t?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){let e=this._lexer.token;return this.expectKeyword("fragment"),!0===this._options.allowLegacyFragmentVariables?this.node(e,{kind:ae.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(e,{kind:ae.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if("on"===this._lexer.token.value)throw this.unexpected();return this.parseName()}parseValueLiteral(e){let t=this._lexer.token;switch(t.kind){case oe.BRACKET_L:return this.parseList(e);case oe.BRACE_L:return this.parseObject(e);case oe.INT:return this.advanceLexer(),this.node(t,{kind:ae.INT,value:t.value});case oe.FLOAT:return this.advanceLexer(),this.node(t,{kind:ae.FLOAT,value:t.value});case oe.STRING:case oe.BLOCK_STRING:return this.parseStringLiteral();case oe.NAME:switch(this.advanceLexer(),t.value){case"true":return this.node(t,{kind:ae.BOOLEAN,value:!0});case"false":return this.node(t,{kind:ae.BOOLEAN,value:!1});case"null":return this.node(t,{kind:ae.NULL});default:return this.node(t,{kind:ae.ENUM,value:t.value})}case oe.DOLLAR:if(e){if(this.expectToken(oe.DOLLAR),this._lexer.token.kind===oe.NAME){let e=this._lexer.token.value;throw ue(this._lexer.source,t.start,`Unexpected variable "$${e}" in constant value.`)}throw this.unexpected(t)}return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){let e=this._lexer.token;return this.advanceLexer(),this.node(e,{kind:ae.STRING,value:e.value,block:e.kind===oe.BLOCK_STRING})}parseList(e){return this.node(this._lexer.token,{kind:ae.LIST,values:this.any(oe.BRACKET_L,(()=>this.parseValueLiteral(e)),oe.BRACKET_R)})}parseObject(e){return this.node(this._lexer.token,{kind:ae.OBJECT,fields:this.any(oe.BRACE_L,(()=>this.parseObjectField(e)),oe.BRACE_R)})}parseObjectField(e){let t=this._lexer.token,n=this.parseName();return this.expectToken(oe.COLON),this.node(t,{kind:ae.OBJECT_FIELD,name:n,value:this.parseValueLiteral(e)})}parseDirectives(e){let t=[];for(;this.peek(oe.AT);)t.push(this.parseDirective(e));return t}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(e){let t=this._lexer.token;return this.expectToken(oe.AT),this.node(t,{kind:ae.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(e)})}parseTypeReference(){let e,t=this._lexer.token;if(this.expectOptionalToken(oe.BRACKET_L)){let n=this.parseTypeReference();this.expectToken(oe.BRACKET_R),e=this.node(t,{kind:ae.LIST_TYPE,type:n})}else e=this.parseNamedType();return this.expectOptionalToken(oe.BANG)?this.node(t,{kind:ae.NON_NULL_TYPE,type:e}):e}parseNamedType(){return this.node(this._lexer.token,{kind:ae.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(oe.STRING)||this.peek(oe.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("schema");let n=this.parseConstDirectives(),i=this.many(oe.BRACE_L,this.parseOperationTypeDefinition,oe.BRACE_R);return this.node(e,{kind:ae.SCHEMA_DEFINITION,description:t,directives:n,operationTypes:i})}parseOperationTypeDefinition(){let e=this._lexer.token,t=this.parseOperationType();this.expectToken(oe.COLON);let n=this.parseNamedType();return this.node(e,{kind:ae.OPERATION_TYPE_DEFINITION,operation:t,type:n})}parseScalarTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("scalar");let n=this.parseName(),i=this.parseConstDirectives();return this.node(e,{kind:ae.SCALAR_TYPE_DEFINITION,description:t,name:n,directives:i})}parseObjectTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("type");let n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(e,{kind:ae.OBJECT_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:s})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(oe.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(oe.BRACE_L,this.parseFieldDefinition,oe.BRACE_R)}parseFieldDefinition(){let e=this._lexer.token,t=this.parseDescription(),n=this.parseName(),i=this.parseArgumentDefs();this.expectToken(oe.COLON);let r=this.parseTypeReference(),s=this.parseConstDirectives();return this.node(e,{kind:ae.FIELD_DEFINITION,description:t,name:n,arguments:i,type:r,directives:s})}parseArgumentDefs(){return this.optionalMany(oe.PAREN_L,this.parseInputValueDef,oe.PAREN_R)}parseInputValueDef(){let e=this._lexer.token,t=this.parseDescription(),n=this.parseName();this.expectToken(oe.COLON);let i,r=this.parseTypeReference();this.expectOptionalToken(oe.EQUALS)&&(i=this.parseConstValueLiteral());let s=this.parseConstDirectives();return this.node(e,{kind:ae.INPUT_VALUE_DEFINITION,description:t,name:n,type:r,defaultValue:i,directives:s})}parseInterfaceTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("interface");let n=this.parseName(),i=this.parseImplementsInterfaces(),r=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(e,{kind:ae.INTERFACE_TYPE_DEFINITION,description:t,name:n,interfaces:i,directives:r,fields:s})}parseUnionTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("union");let n=this.parseName(),i=this.parseConstDirectives(),r=this.parseUnionMemberTypes();return this.node(e,{kind:ae.UNION_TYPE_DEFINITION,description:t,name:n,directives:i,types:r})}parseUnionMemberTypes(){return this.expectOptionalToken(oe.EQUALS)?this.delimitedMany(oe.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("enum");let n=this.parseName(),i=this.parseConstDirectives(),r=this.parseEnumValuesDefinition();return this.node(e,{kind:ae.ENUM_TYPE_DEFINITION,description:t,name:n,directives:i,values:r})}parseEnumValuesDefinition(){return this.optionalMany(oe.BRACE_L,this.parseEnumValueDefinition,oe.BRACE_R)}parseEnumValueDefinition(){let e=this._lexer.token,t=this.parseDescription(),n=this.parseEnumValueName(),i=this.parseConstDirectives();return this.node(e,{kind:ae.ENUM_VALUE_DEFINITION,description:t,name:n,directives:i})}parseEnumValueName(){if("true"===this._lexer.token.value||"false"===this._lexer.token.value||"null"===this._lexer.token.value)throw ue(this._lexer.source,this._lexer.token.start,`${$e(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("input");let n=this.parseName(),i=this.parseConstDirectives(),r=this.parseInputFieldsDefinition();return this.node(e,{kind:ae.INPUT_OBJECT_TYPE_DEFINITION,description:t,name:n,directives:i,fields:r})}parseInputFieldsDefinition(){return this.optionalMany(oe.BRACE_L,this.parseInputValueDef,oe.BRACE_R)}parseTypeSystemExtension(){let e=this._lexer.lookahead();if(e.kind===oe.NAME)switch(e.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(e)}parseSchemaExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");let t=this.parseConstDirectives(),n=this.optionalMany(oe.BRACE_L,this.parseOperationTypeDefinition,oe.BRACE_R);if(0===t.length&&0===n.length)throw this.unexpected();return this.node(e,{kind:ae.SCHEMA_EXTENSION,directives:t,operationTypes:n})}parseScalarTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");let t=this.parseName(),n=this.parseConstDirectives();if(0===n.length)throw this.unexpected();return this.node(e,{kind:ae.SCALAR_TYPE_EXTENSION,name:t,directives:n})}parseObjectTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");let t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return this.node(e,{kind:ae.OBJECT_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r})}parseInterfaceTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");let t=this.parseName(),n=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),r=this.parseFieldsDefinition();if(0===n.length&&0===i.length&&0===r.length)throw this.unexpected();return this.node(e,{kind:ae.INTERFACE_TYPE_EXTENSION,name:t,interfaces:n,directives:i,fields:r})}parseUnionTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");let t=this.parseName(),n=this.parseConstDirectives(),i=this.parseUnionMemberTypes();if(0===n.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:ae.UNION_TYPE_EXTENSION,name:t,directives:n,types:i})}parseEnumTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");let t=this.parseName(),n=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:ae.ENUM_TYPE_EXTENSION,name:t,directives:n,values:i})}parseInputObjectTypeExtension(){let e=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");let t=this.parseName(),n=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();if(0===n.length&&0===i.length)throw this.unexpected();return this.node(e,{kind:ae.INPUT_OBJECT_TYPE_EXTENSION,name:t,directives:n,fields:i})}parseDirectiveDefinition(){let e=this._lexer.token,t=this.parseDescription();this.expectKeyword("directive"),this.expectToken(oe.AT);let n=this.parseName(),i=this.parseArgumentDefs(),r=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");let s=this.parseDirectiveLocations();return this.node(e,{kind:ae.DIRECTIVE_DEFINITION,description:t,name:n,arguments:i,repeatable:r,locations:s})}parseDirectiveLocations(){return this.delimitedMany(oe.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){let e=this._lexer.token,t=this.parseName();if(Object.prototype.hasOwnProperty.call(se,t.value))return t;throw this.unexpected(e)}node(e,t){return!0!==this._options.noLocation&&(t.loc=new M(e,this._lexer.lastToken,this._lexer.source)),t}peek(e){return this._lexer.token.kind===e}expectToken(e){let t=this._lexer.token;if(t.kind===e)return this.advanceLexer(),t;throw ue(this._lexer.source,t.start,`Expected ${Ge(e)}, found ${$e(t)}.`)}expectOptionalToken(e){return this._lexer.token.kind===e&&(this.advanceLexer(),!0)}expectKeyword(e){let t=this._lexer.token;if(t.kind!==oe.NAME||t.value!==e)throw ue(this._lexer.source,t.start,`Expected "${e}", found ${$e(t)}.`);this.advanceLexer()}expectOptionalKeyword(e){let t=this._lexer.token;return t.kind===oe.NAME&&t.value===e&&(this.advanceLexer(),!0)}unexpected(e){let t=e??this._lexer.token;return ue(this._lexer.source,t.start,`Unexpected ${$e(t)}.`)}any(e,t,n){this.expectToken(e);let i=[];for(;!this.expectOptionalToken(n);)i.push(t.call(this));return i}optionalMany(e,t,n){if(this.expectOptionalToken(e)){let e=[];do{e.push(t.call(this))}while(!this.expectOptionalToken(n));return e}return[]}many(e,t,n){this.expectToken(e);let i=[];do{i.push(t.call(this))}while(!this.expectOptionalToken(n));return i}delimitedMany(e,t){this.expectOptionalToken(e);let n=[];do{n.push(t.call(this))}while(this.expectOptionalToken(e));return n}advanceLexer(){let{maxTokens:e}=this._options,t=this._lexer.advance();if(void 0!==e&&t.kind!==oe.EOF&&(++this._tokenCounter,this._tokenCounter>e))throw ue(this._lexer.source,t.start,`Document contains more that ${e} tokens. Parsing aborted.`)}};function $e(e){let t=e.value;return Ge(e.kind)+(null!=t?` "${t}"`:"")}function Ge(e){return function(e){return e===oe.BANG||e===oe.DOLLAR||e===oe.AMP||e===oe.PAREN_L||e===oe.PAREN_R||e===oe.SPREAD||e===oe.COLON||e===oe.EQUALS||e===oe.AT||e===oe.BRACKET_L||e===oe.BRACKET_R||e===oe.BRACE_L||e===oe.PIPE||e===oe.BRACE_R}(e)?`"${e}"`:e}var Ye=function(e,t){let n=new SyntaxError(e+" ("+t.loc.start.line+":"+t.loc.start.column+")");return Object.assign(n,t)};var qe={allowLegacyFragmentVariables:!0};var Je={parse:function(e){let t;try{t=function(e,t){return new Ke(e,t).parseDocument()}(e,qe)}catch(e){throw function(e){if("GraphQLError"===(null==e?void 0:e.name)){let{message:t,locations:[n]}=e;return Ye(t,{loc:{start:n},cause:e})}return e}(e)}return t.comments=function(e){let t=[],{startToken:n,endToken:i}=e.loc;for(let e=n;e!==i;e=e.next)"Comment"===e.kind&&t.push({...e,loc:{start:e.start,end:e.end}});return t}(t),t},astFormat:"graphql",hasPragma:function(e){return/^\s*#[^\S\n]*@(?:format|prettier)\s*(?:\n|$)/.test(e)},locStart:j,locEnd:K},Xe={graphql:Q},Qe=s}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,