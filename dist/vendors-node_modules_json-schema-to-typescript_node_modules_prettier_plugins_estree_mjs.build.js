"use strict";(self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_=self.webpackChunk_COMPANY_NAME_EXPORTER_NAME_||[]).push([["vendors-node_modules_json-schema-to-typescript_node_modules_prettier_plugins_estree_mjs"],{"./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/estree.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/json-schema-to-typescript/node_modules/prettier/plugins/estree.mjs ***!
  \*****************************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{default:()=>Li,languages:()=>ji,options:()=>Ni,printers:()=>Ii});var r,u,a=Object.create,o=Object.defineProperty,i=Object.getOwnPropertyDescriptor,s=Object.getOwnPropertyNames,p=Object.getPrototypeOf,l=Object.prototype.hasOwnProperty,c=e=>{throw TypeError(e)},D=(e,t)=>{for(var n in t)o(e,n,{get:t[n],enumerable:!0})},y=(e,t,n)=>t.has(e)||c("Cannot "+n),d=(e,t,n)=>(y(e,t,"read from private field"),n?n.call(e):t.get(e)),m=(r=e=>{Object.defineProperty(e,"__esModule",{value:!0}),e.extract=function(e){let t=e.match(r);return t?t[0].trimLeft():""},e.parse=function(e){return l(e).pragmas},e.parseWithComments=l,e.print=function({comments:e="",pragmas:t={}}){let n="\n",r=" *",u=Object.keys(t),a=u.flatMap((e=>c(e,t[e]))).map((e=>`${r} ${e}${n}`)).join("");if(!e){if(0===u.length)return"";if(1===u.length&&!Array.isArray(t[u[0]])){let e=t[u[0]];return`/** ${c(u[0],e)[0]} */`}}let o=e.split(n).map((e=>`${r} ${e}`)).join(n)+n;return"/**\n"+(e?o:"")+(e&&u.length?r+n:"")+a+" */"},e.strip=function(e){let t=e.match(r);return t&&t[0]?e.substring(t[0].length):e};var t=/\*\/$/,n=/^\/\*\*?/,r=/^\s*(\/\*\*?(.|\r?\n)*?\*\/)/,u=/(^|\s+)\/\/([^\r\n]*)/g,a=/^(\r?\n)+/,o=/(?:^|\r?\n) *(@[^\r\n]*?) *\r?\n *(?![^@\r\n]*\/\/[^]*)([^@\r\n\s][^@\r\n]+?) *\r?\n/g,i=/(?:^|\r?\n) *@(\S+) *([^\r\n]*)/g,s=/(\r?\n|^) *\* ?/g,p=[];function l(e){e=e.replace(n,"").replace(t,"").replace(s,"$1");let r="";for(;r!==e;)r=e,e=e.replace(o,"\n$1 $2\n");e=e.replace(a,"").trimRight();let l,c=Object.create(null),D=e.replace(i,"").replace(a,"").trimRight();for(;l=i.exec(e);){let e=l[2].replace(u,"");"string"==typeof c[l[1]]||Array.isArray(c[l[1]])?c[l[1]]=p.concat(c[l[1]],e):c[l[1]]=e}return{comments:D,pragmas:c}}function c(e,t){return p.concat(t).map((t=>`@${e} ${t}`.trim()))}},()=>(u||r((u={exports:{}}).exports,u),u.exports)),f={};D(f,{languages:()=>ji,options:()=>Ni,printers:()=>Ii});var E={};D(E,{canAttachComment:()=>hr,embed:()=>ru,experimentalFeatures:()=>Ci,getCommentChildNodes:()=>xr,getVisitorKeys:()=>V,handleComments:()=>Cn,insertPragma:()=>ou,isBlockComment:()=>H,isGap:()=>Tr,massageAstNode:()=>Et,print:()=>xi,printComment:()=>xn,willPrintOwnComments:()=>Cr});var F=(e,t,n,r)=>{if(!e||null!=t)return t.replaceAll?t.replaceAll(n,r):n.global?t.replace(n,r):t.split(n).join(r)},A=(e,t,n)=>{if(!e||null!=t)return Array.isArray(t)||"string"==typeof t?t[n<0?t.length+n:n]:t.at(n)};var g=function(e){return null!==e&&"object"==typeof e};function*h(e,t){let{getVisitorKeys:n,filter:r=(()=>!0)}=t,u=e=>g(e)&&r(e);for(let t of n(e)){let n=e[t];if(Array.isArray(n))for(let e of n)u(e)&&(yield e);else u(n)&&(yield n)}}function x(e,{getVisitorKeys:t,predicate:n}){for(let r of function*(e,t){let n=[e];for(let e=0;e<n.length;e++){let r=n[e];for(let e of h(r,t))yield e,n.push(e)}}(e,{getVisitorKeys:t}))if(n(r))return!0;return!1}var C=e=>!(function(e){return 12288===e||e>=65281&&e<=65376||e>=65504&&e<=65510}(e)||function(e){return e>=4352&&e<=4447||8986===e||8987===e||9001===e||9002===e||e>=9193&&e<=9196||9200===e||9203===e||9725===e||9726===e||9748===e||9749===e||e>=9800&&e<=9811||9855===e||9875===e||9889===e||9898===e||9899===e||9917===e||9918===e||9924===e||9925===e||9934===e||9940===e||9962===e||9970===e||9971===e||9973===e||9978===e||9981===e||9989===e||9994===e||9995===e||10024===e||10060===e||10062===e||e>=10067&&e<=10069||10071===e||e>=10133&&e<=10135||10160===e||10175===e||11035===e||11036===e||11088===e||11093===e||e>=11904&&e<=11929||e>=11931&&e<=12019||e>=12032&&e<=12245||e>=12272&&e<=12287||e>=12289&&e<=12350||e>=12353&&e<=12438||e>=12441&&e<=12543||e>=12549&&e<=12591||e>=12593&&e<=12686||e>=12688&&e<=12771||e>=12783&&e<=12830||e>=12832&&e<=12871||e>=12880&&e<=19903||e>=19968&&e<=42124||e>=42128&&e<=42182||e>=43360&&e<=43388||e>=44032&&e<=55203||e>=63744&&e<=64255||e>=65040&&e<=65049||e>=65072&&e<=65106||e>=65108&&e<=65126||e>=65128&&e<=65131||e>=94176&&e<=94180||94192===e||94193===e||e>=94208&&e<=100343||e>=100352&&e<=101589||e>=101632&&e<=101640||e>=110576&&e<=110579||e>=110581&&e<=110587||110589===e||110590===e||e>=110592&&e<=110882||110898===e||e>=110928&&e<=110930||110933===e||e>=110948&&e<=110951||e>=110960&&e<=111355||126980===e||127183===e||127374===e||e>=127377&&e<=127386||e>=127488&&e<=127490||e>=127504&&e<=127547||e>=127552&&e<=127560||127568===e||127569===e||e>=127584&&e<=127589||e>=127744&&e<=127776||e>=127789&&e<=127797||e>=127799&&e<=127868||e>=127870&&e<=127891||e>=127904&&e<=127946||e>=127951&&e<=127955||e>=127968&&e<=127984||127988===e||e>=127992&&e<=128062||128064===e||e>=128066&&e<=128252||e>=128255&&e<=128317||e>=128331&&e<=128334||e>=128336&&e<=128359||128378===e||128405===e||128406===e||128420===e||e>=128507&&e<=128591||e>=128640&&e<=128709||128716===e||e>=128720&&e<=128722||e>=128725&&e<=128727||e>=128732&&e<=128735||128747===e||128748===e||e>=128756&&e<=128764||e>=128992&&e<=129003||129008===e||e>=129292&&e<=129338||e>=129340&&e<=129349||e>=129351&&e<=129535||e>=129648&&e<=129660||e>=129664&&e<=129672||e>=129680&&e<=129725||e>=129727&&e<=129733||e>=129742&&e<=129755||e>=129760&&e<=129768||e>=129776&&e<=129784||e>=131072&&e<=196605||e>=196608&&e<=262141}(e)),T=/[^\x20-\x7F]/;var S=function(e){if(!e)return 0;if(!T.test(e))return e.length;e=e.replace(/[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC2\uDECE-\uDEDB\uDEE0-\uDEE8]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g,"  ");let t=0;for(let n of e){let e=n.codePointAt(0);e<=31||e>=127&&e<=159||e>=768&&e<=879||(t+=C(e)?1:2)}return t};function b(e){return(t,n,r)=>{let u=!(null==r||!r.backwards);if(!1===n)return!1;let{length:a}=t,o=n;for(;o>=0&&o<a;){let n=t.charAt(o);if(e instanceof RegExp){if(!e.test(n))return o}else if(!e.includes(n))return o;u?o--:o++}return(-1===o||o===a)&&o}}b(/\s/);var B=b(" \t"),v=b(",; \t"),k=b(/[^\n\r]/);var P=function(e,t,n){let r=!(null==n||!n.backwards);if(!1===t)return!1;let u=e.charAt(t);if(r){if("\r"===e.charAt(t-1)&&"\n"===u)return t-2;if("\n"===u||"\r"===u||"\u2028"===u||"\u2029"===u)return t-1}else{if("\r"===u&&"\n"===e.charAt(t+1))return t+2;if("\n"===u||"\r"===u||"\u2028"===u||"\u2029"===u)return t+1}return t};var w=function(e,t,n={}){let r=B(e,n.backwards?t-1:t,n);return r!==P(e,r,n)};var N=function(e,t){if(!1===t)return!1;if("/"===e.charAt(t)&&"*"===e.charAt(t+1))for(let n=t+2;n<e.length;++n)if("*"===e.charAt(n)&&"/"===e.charAt(n+1))return n+2;return t};var I=function(e,t){return!1!==t&&("/"===e.charAt(t)&&"/"===e.charAt(t+1)?k(e,t):t)};var j=function(e,t){let n=null,r=t;for(;r!==n;)n=r,r=v(e,r),r=N(e,r),r=B(e,r);return r=I(e,r),r=P(e,r),!1!==r&&w(e,r)};var L=function(e){return Array.isArray(e)&&e.length>0},M="'";var O=function(e,t){let n=!0===t||t===M?M:'"',r=n===M?'"':M,u=0,a=0;for(let t of e)t===n?u++:t===r&&a++;return u>a?r:n};var J=function(e,t,n){let r='"'===t?"'":'"',u=F(!1,e,/\\(.)|(["'])/gs,((e,u,a)=>u===r?u:a===t?"\\"+a:a||(n&&/^[^\n\r"'0-7\\bfnrt-vx\u2028\u2029]$/.test(u)?u:"\\"+u)));return t+u+t};var q=function(e,t){let n=e.slice(1,-1),r="json"===t.parser||"jsonc"===t.parser||"json5"===t.parser&&"preserve"===t.quoteProps&&!t.singleQuote?'"':t.__isInHtmlAttribute?"'":O(n,t.singleQuote);return J(n,r,!("css"===t.parser||"less"===t.parser||"scss"===t.parser||t.__embeddedInHtml))};function _(e){var t,n,r;let u=(null==(t=e.range)?void 0:t[0])??e.start,a=null==(r=(null==(n=e.declaration)?void 0:n.decorators)??e.decorators)?void 0:r[0];return a?Math.min(_(a),u):u}function X(e){var t;return(null==(t=e.range)?void 0:t[1])??e.end}function R(e,t){let n=_(e);return Number.isInteger(n)&&n===_(t)}function $(e,t){return R(e,t)&&function(e,t){let n=X(e);return Number.isInteger(n)&&n===X(t)}(e,t)}var W=null;function U(e){if(null!==W&&(W.property,1)){let e=W;return W=U.prototype=null,e}return W=U.prototype=e??Object.create(null),new U}for(let e=0;e<=10;e++)U();var G=function(e,t="type"){return function(e){U(e)}(e),function(n){let r=n[t],u=e[r];if(!Array.isArray(u))throw Object.assign(new Error(`Missing visitor keys for '${r}'.`),{node:n});return u}},V=G({ArrayExpression:["elements"],AssignmentExpression:["left","right"],BinaryExpression:["left","right"],InterpreterDirective:[],Directive:["value"],DirectiveLiteral:[],BlockStatement:["directives","body"],BreakStatement:["label"],CallExpression:["callee","arguments","typeParameters","typeArguments"],CatchClause:["param","body"],ConditionalExpression:["test","consequent","alternate"],ContinueStatement:["label"],DebuggerStatement:[],DoWhileStatement:["test","body"],EmptyStatement:[],ExpressionStatement:["expression"],File:["program"],ForInStatement:["left","right","body"],ForStatement:["init","test","update","body"],FunctionDeclaration:["id","params","body","returnType","typeParameters","predicate"],FunctionExpression:["id","params","body","returnType","typeParameters"],Identifier:["typeAnnotation","decorators"],IfStatement:["test","consequent","alternate"],LabeledStatement:["label","body"],StringLiteral:[],NumericLiteral:[],NullLiteral:[],BooleanLiteral:[],RegExpLiteral:[],LogicalExpression:["left","right"],MemberExpression:["object","property"],NewExpression:["callee","arguments","typeParameters","typeArguments"],Program:["directives","body"],ObjectExpression:["properties"],ObjectMethod:["key","params","body","decorators","returnType","typeParameters"],ObjectProperty:["key","value","decorators"],RestElement:["argument","typeAnnotation","decorators"],ReturnStatement:["argument"],SequenceExpression:["expressions"],ParenthesizedExpression:["expression"],SwitchCase:["test","consequent"],SwitchStatement:["discriminant","cases"],ThisExpression:[],ThrowStatement:["argument"],TryStatement:["block","handler","finalizer"],UnaryExpression:["argument"],UpdateExpression:["argument"],VariableDeclaration:["declarations"],VariableDeclarator:["id","init"],WhileStatement:["test","body"],WithStatement:["object","body"],AssignmentPattern:["left","right","decorators","typeAnnotation"],ArrayPattern:["elements","typeAnnotation","decorators"],ArrowFunctionExpression:["params","body","returnType","typeParameters","predicate"],ClassBody:["body"],ClassExpression:["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators","superTypeArguments"],ClassDeclaration:["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators","superTypeArguments"],ExportAllDeclaration:["source","attributes","exported"],ExportDefaultDeclaration:["declaration"],ExportNamedDeclaration:["declaration","specifiers","source","attributes"],ExportSpecifier:["local","exported"],ForOfStatement:["left","right","body"],ImportDeclaration:["specifiers","source","attributes"],ImportDefaultSpecifier:["local"],ImportNamespaceSpecifier:["local"],ImportSpecifier:["local","imported"],ImportExpression:["source","options","attributes"],MetaProperty:["meta","property"],ClassMethod:["key","params","body","decorators","returnType","typeParameters"],ObjectPattern:["properties","typeAnnotation","decorators"],SpreadElement:["argument"],Super:[],TaggedTemplateExpression:["tag","quasi","typeParameters","typeArguments"],TemplateElement:[],TemplateLiteral:["quasis","expressions"],YieldExpression:["argument"],AwaitExpression:["argument"],Import:[],BigIntLiteral:[],ExportNamespaceSpecifier:["exported"],OptionalMemberExpression:["object","property"],OptionalCallExpression:["callee","arguments","typeParameters","typeArguments"],ClassProperty:["key","value","typeAnnotation","decorators","variance"],ClassAccessorProperty:["key","value","typeAnnotation","decorators"],ClassPrivateProperty:["key","value","decorators","typeAnnotation","variance"],ClassPrivateMethod:["key","params","body","decorators","returnType","typeParameters"],PrivateName:["id"],StaticBlock:["body"],AnyTypeAnnotation:[],ArrayTypeAnnotation:["elementType"],BooleanTypeAnnotation:[],BooleanLiteralTypeAnnotation:[],NullLiteralTypeAnnotation:[],ClassImplements:["id","typeParameters"],DeclareClass:["id","typeParameters","extends","mixins","implements","body"],DeclareFunction:["id","predicate"],DeclareInterface:["id","typeParameters","extends","body"],DeclareModule:["id","body"],DeclareModuleExports:["typeAnnotation"],DeclareTypeAlias:["id","typeParameters","right"],DeclareOpaqueType:["id","typeParameters","supertype"],DeclareVariable:["id"],DeclareExportDeclaration:["declaration","specifiers","source"],DeclareExportAllDeclaration:["source"],DeclaredPredicate:["value"],ExistsTypeAnnotation:[],FunctionTypeAnnotation:["typeParameters","params","rest","returnType","this"],FunctionTypeParam:["name","typeAnnotation"],GenericTypeAnnotation:["id","typeParameters"],InferredPredicate:[],InterfaceExtends:["id","typeParameters"],InterfaceDeclaration:["id","typeParameters","extends","body"],InterfaceTypeAnnotation:["extends","body"],IntersectionTypeAnnotation:["types"],MixedTypeAnnotation:[],EmptyTypeAnnotation:[],NullableTypeAnnotation:["typeAnnotation"],NumberLiteralTypeAnnotation:[],NumberTypeAnnotation:[],ObjectTypeAnnotation:["properties","indexers","callProperties","internalSlots"],ObjectTypeInternalSlot:["id","value","optional","static","method"],ObjectTypeCallProperty:["value"],ObjectTypeIndexer:["id","key","value","variance"],ObjectTypeProperty:["key","value","variance"],ObjectTypeSpreadProperty:["argument"],OpaqueType:["id","typeParameters","supertype","impltype"],QualifiedTypeIdentifier:["id","qualification"],StringLiteralTypeAnnotation:[],StringTypeAnnotation:[],SymbolTypeAnnotation:[],ThisTypeAnnotation:[],TupleTypeAnnotation:["types","elementTypes"],TypeofTypeAnnotation:["argument","typeArguments"],TypeAlias:["id","typeParameters","right"],TypeAnnotation:["typeAnnotation"],TypeCastExpression:["expression","typeAnnotation"],TypeParameter:["bound","default","variance"],TypeParameterDeclaration:["params"],TypeParameterInstantiation:["params"],UnionTypeAnnotation:["types"],Variance:[],VoidTypeAnnotation:[],EnumDeclaration:["id","body"],EnumBooleanBody:["members"],EnumNumberBody:["members"],EnumStringBody:["members"],EnumSymbolBody:["members"],EnumBooleanMember:["id","init"],EnumNumberMember:["id","init"],EnumStringMember:["id","init"],EnumDefaultedMember:["id"],IndexedAccessType:["objectType","indexType"],OptionalIndexedAccessType:["objectType","indexType"],JSXAttribute:["name","value"],JSXClosingElement:["name"],JSXElement:["openingElement","children","closingElement"],JSXEmptyExpression:[],JSXExpressionContainer:["expression"],JSXSpreadChild:["expression"],JSXIdentifier:[],JSXMemberExpression:["object","property"],JSXNamespacedName:["namespace","name"],JSXOpeningElement:["name","attributes","typeArguments","typeParameters"],JSXSpreadAttribute:["argument"],JSXText:[],JSXFragment:["openingFragment","children","closingFragment"],JSXOpeningFragment:[],JSXClosingFragment:[],Noop:[],Placeholder:[],V8IntrinsicIdentifier:[],ArgumentPlaceholder:[],BindExpression:["object","callee"],ImportAttribute:["key","value"],Decorator:["expression"],DoExpression:["body"],ExportDefaultSpecifier:["exported"],RecordExpression:["properties"],TupleExpression:["elements"],DecimalLiteral:[],ModuleExpression:["body"],TopicReference:[],PipelineTopicExpression:["expression"],PipelineBareFunction:["callee"],PipelinePrimaryTopicReference:[],TSParameterProperty:["parameter","decorators"],TSDeclareFunction:["id","typeParameters","params","returnType","body"],TSDeclareMethod:["decorators","key","typeParameters","params","returnType"],TSQualifiedName:["left","right"],TSCallSignatureDeclaration:["typeParameters","parameters","typeAnnotation","params","returnType"],TSConstructSignatureDeclaration:["typeParameters","parameters","typeAnnotation","params","returnType"],TSPropertySignature:["key","typeAnnotation"],TSMethodSignature:["key","typeParameters","parameters","typeAnnotation","params","returnType"],TSIndexSignature:["parameters","typeAnnotation"],TSAnyKeyword:[],TSBooleanKeyword:[],TSBigIntKeyword:[],TSIntrinsicKeyword:[],TSNeverKeyword:[],TSNullKeyword:[],TSNumberKeyword:[],TSObjectKeyword:[],TSStringKeyword:[],TSSymbolKeyword:[],TSUndefinedKeyword:[],TSUnknownKeyword:[],TSVoidKeyword:[],TSThisType:[],TSFunctionType:["typeParameters","parameters","typeAnnotation","params","returnType"],TSConstructorType:["typeParameters","parameters","typeAnnotation","params","returnType"],TSTypeReference:["typeName","typeParameters","typeArguments"],TSTypePredicate:["parameterName","typeAnnotation"],TSTypeQuery:["exprName","typeParameters","typeArguments"],TSTypeLiteral:["members"],TSArrayType:["elementType"],TSTupleType:["elementTypes"],TSOptionalType:["typeAnnotation"],TSRestType:["typeAnnotation"],TSNamedTupleMember:["label","elementType"],TSUnionType:["types"],TSIntersectionType:["types"],TSConditionalType:["checkType","extendsType","trueType","falseType"],TSInferType:["typeParameter"],TSParenthesizedType:["typeAnnotation"],TSTypeOperator:["typeAnnotation"],TSIndexedAccessType:["objectType","indexType"],TSMappedType:["typeParameter","typeAnnotation","nameType"],TSLiteralType:["literal"],TSExpressionWithTypeArguments:["expression","typeParameters"],TSInterfaceDeclaration:["id","typeParameters","extends","body"],TSInterfaceBody:["body"],TSTypeAliasDeclaration:["id","typeParameters","typeAnnotation"],TSInstantiationExpression:["expression","typeParameters","typeArguments"],TSAsExpression:["expression","typeAnnotation"],TSSatisfiesExpression:["expression","typeAnnotation"],TSTypeAssertion:["typeAnnotation","expression"],TSEnumDeclaration:["id","members"],TSEnumMember:["id","initializer"],TSModuleDeclaration:["id","body"],TSModuleBlock:["body"],TSImportType:["argument","qualifier","typeParameters","typeArguments"],TSImportEqualsDeclaration:["id","moduleReference"],TSExternalModuleReference:["expression"],TSNonNullExpression:["expression"],TSExportAssignment:["expression"],TSNamespaceExportDeclaration:["id"],TSTypeAnnotation:["typeAnnotation"],TSTypeParameterInstantiation:["params"],TSTypeParameterDeclaration:["params"],TSTypeParameter:["constraint","default","name"],ChainExpression:["expression"],ExperimentalRestProperty:["argument"],ExperimentalSpreadProperty:["argument"],Literal:[],MethodDefinition:["decorators","key","value"],PrivateIdentifier:[],Property:["key","value"],PropertyDefinition:["decorators","key","typeAnnotation","value","variance"],AccessorProperty:["decorators","key","typeAnnotation","value"],TSAbstractAccessorProperty:["decorators","key","typeAnnotation"],TSAbstractKeyword:[],TSAbstractMethodDefinition:["key","value"],TSAbstractPropertyDefinition:["decorators","key","typeAnnotation"],TSAsyncKeyword:[],TSClassImplements:["expression","typeArguments","typeParameters"],TSDeclareKeyword:[],TSEmptyBodyFunctionExpression:["id","typeParameters","params","returnType"],TSExportKeyword:[],TSInterfaceHeritage:["expression","typeArguments","typeParameters"],TSPrivateKeyword:[],TSProtectedKeyword:[],TSPublicKeyword:[],TSReadonlyKeyword:[],TSStaticKeyword:[],TSTemplateLiteralType:["quasis","types"],AsConstExpression:["expression"],AsExpression:["expression","typeAnnotation"],BigIntLiteralTypeAnnotation:[],BigIntTypeAnnotation:[],ComponentDeclaration:["id","params","body","typeParameters","rendersType"],ComponentParameter:["name","local"],ComponentTypeAnnotation:["params","rest","typeParameters","rendersType"],ComponentTypeParameter:["name","typeAnnotation"],ConditionalTypeAnnotation:["checkType","extendsType","trueType","falseType"],DeclareComponent:["id","params","rest","typeParameters","rendersType"],DeclareEnum:["id","body"],DeclareHook:["id"],DeclareNamespace:["id","body"],EnumBigIntBody:["members"],EnumBigIntMember:["id","init"],HookDeclaration:["id","params","body","typeParameters","returnType"],HookTypeAnnotation:["params","returnType","rest","typeParameters"],InferTypeAnnotation:["typeParameter"],KeyofTypeAnnotation:["argument"],ObjectTypeMappedTypeProperty:["keyTparam","propType","sourceType","variance"],QualifiedTypeofIdentifier:["qualification","id"],TupleTypeLabeledElement:["label","elementType","variance"],TupleTypeSpreadElement:["label","typeAnnotation"],TypeOperator:["typeAnnotation"],TypePredicate:["parameterName","typeAnnotation","asserts"],NGRoot:["node"],NGPipeExpression:["left","right","arguments"],NGChainedExpression:["expressions"],NGEmptyExpression:[],NGMicrosyntax:["body"],NGMicrosyntaxKey:[],NGMicrosyntaxExpression:["expression","alias"],NGMicrosyntaxKeyedExpression:["key","expression"],NGMicrosyntaxLet:["key","value"],NGMicrosyntaxAs:["key","alias"],JsExpressionRoot:["node"],JsonRoot:["node"],TSJSDocAllType:[],TSJSDocUnknownType:[],TSJSDocNullableType:["typeAnnotation"],TSJSDocNonNullableType:["typeAnnotation"],NeverTypeAnnotation:[],UndefinedTypeAnnotation:[],UnknownTypeAnnotation:[],SatisfiesExpression:["expression","typeAnnotation"]});var K=function(e){let t=new Set(e);return e=>t.has(null==e?void 0:e.type)},H=K(["Block","CommentBlock","MultiLine"]),z=K(["AnyTypeAnnotation","ThisTypeAnnotation","NumberTypeAnnotation","VoidTypeAnnotation","BooleanTypeAnnotation","BigIntTypeAnnotation","SymbolTypeAnnotation","StringTypeAnnotation","NeverTypeAnnotation","UndefinedTypeAnnotation","UnknownTypeAnnotation","EmptyTypeAnnotation","MixedTypeAnnotation"]);var Q=function(e,t){return t.some((t=>function(e,t){let n=t.split(".");for(let t=n.length-1;t>=0;t--){let r=n[t];if(0===t)return"Identifier"===e.type&&e.name===r;if("MemberExpression"!==e.type||e.optional||e.computed||"Identifier"!==e.property.type||e.property.name!==r)return!1;e=e.object}}(e,t)))};var Y=function({type:e}){return e.startsWith("TS")&&e.endsWith("Keyword")};function Z(e,t){return t(e)||x(e,{getVisitorKeys:V,predicate:t})}function ee(e){return"AssignmentExpression"===e.type||"BinaryExpression"===e.type||"LogicalExpression"===e.type||"NGPipeExpression"===e.type||"ConditionalExpression"===e.type||be(e)||Be(e)||"SequenceExpression"===e.type||"TaggedTemplateExpression"===e.type||"BindExpression"===e.type||"UpdateExpression"===e.type&&!e.prefix||ct(e)||"TSNonNullExpression"===e.type||"ChainExpression"===e.type}function te(e){return e.expressions?e.expressions[0]:e.left??e.test??e.callee??e.object??e.tag??e.argument??e.expression}function ne(e){if(e.expressions)return["expressions",0];if(e.left)return["left"];if(e.test)return["test"];if(e.object)return["object"];if(e.callee)return["callee"];if(e.tag)return["tag"];if(e.argument)return["argument"];if(e.expression)return["expression"];throw new Error("Unexpected node has no left side.")}var re=K(["Line","CommentLine","SingleLine","HashbangComment","HTMLOpen","HTMLClose","Hashbang","InterpreterDirective"]),ue=K(["ExportDefaultDeclaration","DeclareExportDeclaration","ExportNamedDeclaration","ExportAllDeclaration","DeclareExportAllDeclaration"]),ae=K(["ArrayExpression","TupleExpression"]),oe=K(["ObjectExpression","RecordExpression"]);function ie(e){return"NumericLiteral"===e.type||"Literal"===e.type&&"number"==typeof e.value}function se(e){return"UnaryExpression"===e.type&&("+"===e.operator||"-"===e.operator)&&ie(e.argument)}function pe(e){return!(!e||"StringLiteral"!==e.type&&("Literal"!==e.type||"string"!=typeof e.value))}function le(e){return"RegExpLiteral"===e.type||"Literal"===e.type&&!!e.regex}var ce=K(["Literal","BooleanLiteral","BigIntLiteral","DecimalLiteral","DirectiveLiteral","NullLiteral","NumericLiteral","RegExpLiteral","StringLiteral"]),De=K(["Identifier","ThisExpression","Super","PrivateName","PrivateIdentifier","Import"]),ye=K(["ObjectTypeAnnotation","TSTypeLiteral","TSMappedType"]),de=K(["FunctionExpression","ArrowFunctionExpression"]);function me(e){return be(e)&&"Identifier"===e.callee.type&&["async","inject","fakeAsync","waitForAsync"].includes(e.callee.name)}var fe=K(["JSXElement","JSXFragment"]);function Ee(e){return e.method&&"init"===e.kind||"get"===e.kind||"set"===e.kind}function Fe(e){return!("ObjectTypeProperty"!==e.type&&"ObjectTypeInternalSlot"!==e.type||e.static||e.method||"get"===e.kind||"set"===e.kind||"FunctionTypeAnnotation"!==e.value.type)}var Ae=K(["BinaryExpression","LogicalExpression","NGPipeExpression"]);function ge(e){return Be(e)||"BindExpression"===e.type&&!!e.object}var he=K(["TSThisType","NullLiteralTypeAnnotation","BooleanLiteralTypeAnnotation","StringLiteralTypeAnnotation","BigIntLiteralTypeAnnotation","NumberLiteralTypeAnnotation","TSLiteralType","TSTemplateLiteralType"]);function xe(e){return Y(e)||z(e)||he(e)||("GenericTypeAnnotation"===e.type||"TSTypeReference"===e.type)&&!e.typeParameters}var Ce=["it","it.only","it.skip","describe","describe.only","describe.skip","test","test.only","test.skip","test.step","test.describe","test.describe.only","test.describe.parallel","test.describe.parallel.only","test.describe.serial","test.describe.serial.only","skip","xit","xdescribe","xtest","fit","fdescribe","ftest"];function Te(e,t){if("CallExpression"!==e.type||e.optional)return!1;let n=Ze(e);if(1===n.length){if(me(e)&&t&&Te(t))return de(n[0]);if(function(e){return"Identifier"===e.type&&("beforeEach"===e.name||"beforeAll"===e.name||"afterEach"===e.name||"afterAll"===e.name)}(e.callee))return me(n[0])}else if((2===n.length||3===n.length)&&("TemplateLiteral"===n[0].type||pe(n[0]))&&function(e){return Q(e,Ce)}(e.callee))return!(n[2]&&!ie(n[2]))&&((2===n.length?de(n[1]):function(e){return"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type}(n[1])&&Qe(n[1]).length<=1)||me(n[1]));return!1}var Se=e=>t=>("ChainExpression"===(null==t?void 0:t.type)&&(t=t.expression),e(t)),be=Se(K(["CallExpression","OptionalCallExpression"])),Be=Se(K(["MemberExpression","OptionalMemberExpression"]));function ve(e,t=5){return ke(e,t)<=t}function ke(e,t){let n=0;for(let r in e){let u=e[r];if(u&&"object"==typeof u&&"string"==typeof u.type&&(n++,n+=ke(u,t-n)),n>t)return n}return n}var Pe=.25;function we(e,t){let{printWidth:n}=t;if(ot(e))return!1;let r=n*Pe;if("ThisExpression"===e.type||"Identifier"===e.type&&e.name.length<=r||se(e)&&!ot(e.argument))return!0;let u="Literal"===e.type&&"regex"in e&&e.regex.pattern||"RegExpLiteral"===e.type&&e.pattern;return u?u.length<=r:pe(e)?q(qe(e),t).length<=r:"TemplateLiteral"===e.type?0===e.expressions.length&&e.quasis[0].value.raw.length<=r&&!e.quasis[0].value.raw.includes("\n"):"UnaryExpression"===e.type?we(e.argument,{printWidth:n}):"CallExpression"===e.type&&0===e.arguments.length&&"Identifier"===e.callee.type?e.callee.name.length<=r-2:ce(e)}function Ne(e,t){return fe(t)?rt(t):ot(t,ut.Leading,(t=>w(e,X(t))))}function Ie(e){return e.quasis.some((e=>e.value.raw.includes("\n")))}function je(e,t){return("TemplateLiteral"===e.type&&Ie(e)||"TaggedTemplateExpression"===e.type&&Ie(e.quasi))&&!w(t,_(e),{backwards:!0})}function Le(e){if(!ot(e))return!1;let t=A(!1,it(e,ut.Dangling),-1);return t&&!H(t)}function Me(e){let{node:t,parent:n,key:r}=e;return"callee"===r&&be(t)&&be(n)&&n.arguments.length>0&&t.arguments.length>n.arguments.length}var Oe=new Set(["!","-","+","~"]);function Je(e,t=2){if(t<=0)return!1;if("ChainExpression"===e.type||"TSNonNullExpression"===e.type)return Je(e.expression,t);let n=e=>Je(e,t-1);if(le(e))return S(e.pattern??e.regex.pattern)<=5;if(ce(e)||De(e)||"ArgumentPlaceholder"===e.type)return!0;if("TemplateLiteral"===e.type)return e.quasis.every((e=>!e.value.raw.includes("\n")))&&e.expressions.every(n);if(oe(e))return e.properties.every((e=>!e.computed&&(e.shorthand||e.value&&n(e.value))));if(ae(e))return e.elements.every((e=>null===e||n(e)));if(pt(e)){if("ImportExpression"===e.type||Je(e.callee,t)){let r=Ze(e);return r.length<=t&&r.every(n)}return!1}return Be(e)?Je(e.object,t)&&Je(e.property,t):!!("UnaryExpression"===e.type&&Oe.has(e.operator)||"UpdateExpression"===e.type)&&Je(e.argument,t)}function qe(e){var t;return(null==(t=e.extra)?void 0:t.raw)??e.raw}function _e(e){return e}function Xe(e,t="es5"){return"es5"===e.trailingComma&&"es5"===t||"all"===e.trailingComma&&("all"===t||"es5"===t)}function Re(e,t){switch(e.type){case"BinaryExpression":case"LogicalExpression":case"AssignmentExpression":case"NGPipeExpression":return Re(e.left,t);case"MemberExpression":case"OptionalMemberExpression":return Re(e.object,t);case"TaggedTemplateExpression":return"FunctionExpression"!==e.tag.type&&Re(e.tag,t);case"CallExpression":case"OptionalCallExpression":return"FunctionExpression"!==e.callee.type&&Re(e.callee,t);case"ConditionalExpression":return Re(e.test,t);case"UpdateExpression":return!e.prefix&&Re(e.argument,t);case"BindExpression":return e.object&&Re(e.object,t);case"SequenceExpression":return Re(e.expressions[0],t);case"ChainExpression":case"TSSatisfiesExpression":case"TSAsExpression":case"TSNonNullExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":return Re(e.expression,t);default:return t(e)}}var $e={"==":!0,"!=":!0,"===":!0,"!==":!0},We={"*":!0,"/":!0,"%":!0},Ue={">>":!0,">>>":!0,"<<":!0};function Ge(e,t){return!(Ke(t)!==Ke(e)||"**"===e||$e[e]&&$e[t]||"%"===t&&We[e]||"%"===e&&We[t]||t!==e&&We[t]&&We[e]||Ue[e]&&Ue[t])}var Ve=new Map([["|>"],["??"],["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"],["**"]].flatMap(((e,t)=>e.map((e=>[e,t])))));function Ke(e){return Ve.get(e)}function He(e){var t;if(e.rest)return!0;let n=Qe(e);return"RestElement"===(null==(t=A(!1,n,-1))?void 0:t.type)}var ze=new WeakMap;function Qe(e){if(ze.has(e))return ze.get(e);let t=[];return e.this&&t.push(e.this),Array.isArray(e.parameters)?t.push(...e.parameters):Array.isArray(e.params)&&t.push(...e.params),e.rest&&t.push(e.rest),ze.set(e,t),t}var Ye=new WeakMap;function Ze(e){if(Ye.has(e))return Ye.get(e);if("ChainExpression"===e.type)return Ze(e.expression);let t=e.arguments;return"ImportExpression"===e.type&&(t=[e.source],e.attributes&&t.push(e.attributes),e.options&&t.push(e.options)),Ye.set(e,t),t}function et(e,t){let{node:n}=e;if("ChainExpression"===n.type)return e.call((()=>et(e,t)),"expression");"ImportExpression"===n.type?(e.call((e=>t(e,0)),"source"),n.attributes&&e.call((e=>t(e,1)),"attributes"),n.options&&e.call((e=>t(e,1)),"options")):e.each(t,"arguments")}function tt(e,t){let n=[];if("ChainExpression"===e.type&&(e=e.expression,n.push("expression")),"ImportExpression"===e.type){if(0===t||t===(e.attributes||e.options?-2:-1))return[...n,"source"];if(e.attributes&&(1===t||-1===t))return[...n,"attributes"];if(e.options&&(1===t||-1===t))return[...n,"options"];throw new RangeError("Invalid argument index")}if(t<0&&(t=e.arguments.length+t),t<0||t>=e.arguments.length)throw new RangeError("Invalid argument index");return[...n,"arguments",t]}function nt(e){return"prettier-ignore"===e.value.trim()&&!e.unignore}function rt(e){return(null==e?void 0:e.prettierIgnore)||ot(e,ut.PrettierIgnore)}var ut={Leading:2,Trailing:4,Dangling:8,Block:16,Line:32,PrettierIgnore:64,First:128,Last:256},at=(e,t)=>{if("function"==typeof e&&(t=e,e=0),e||t)return(n,r,u)=>!(e&ut.Leading&&!n.leading||e&ut.Trailing&&!n.trailing||e&ut.Dangling&&(n.leading||n.trailing)||e&ut.Block&&!H(n)||e&ut.Line&&!re(n)||e&ut.First&&0!==r||e&ut.Last&&r!==u.length-1||e&ut.PrettierIgnore&&!nt(n)||t&&!t(n))};function ot(e,t,n){if(!L(null==e?void 0:e.comments))return!1;let r=at(t,n);return!r||e.comments.some(r)}function it(e,t,n){if(!Array.isArray(null==e?void 0:e.comments))return[];let r=at(t,n);return r?e.comments.filter(r):e.comments}var st=(e,{originalText:t})=>j(t,X(e));function pt(e){return be(e)||"NewExpression"===e.type||"ImportExpression"===e.type}function lt(e){return e&&("ObjectProperty"===e.type||"Property"===e.type&&!Ee(e))}var ct=K(["TSAsExpression","TSSatisfiesExpression","AsExpression","AsConstExpression","SatisfiesExpression"]),Dt=K(["UnionTypeAnnotation","TSUnionType"]),yt=K(["IntersectionTypeAnnotation","TSIntersectionType"]),dt=new Set(["range","raw","comments","leadingComments","trailingComments","innerComments","extra","start","end","loc","flags","errors","tokens"]),mt=e=>{for(let t of e.quasis)delete t.value};function ft(e,t,n){var r,u;if("Program"===e.type&&delete t.sourceType,("BigIntLiteral"===e.type||"BigIntLiteralTypeAnnotation"===e.type)&&e.value&&(t.value=e.value.toLowerCase()),("BigIntLiteral"===e.type||"Literal"===e.type)&&e.bigint&&(t.bigint=e.bigint.toLowerCase()),"DecimalLiteral"===e.type&&(t.value=Number(e.value)),"Literal"===e.type&&t.decimal&&(t.decimal=Number(e.decimal)),"EmptyStatement"===e.type||"JSXText"===e.type||"JSXExpressionContainer"===e.type&&("Literal"===e.expression.type||"StringLiteral"===e.expression.type)&&" "===e.expression.value)return null;if(("Property"===e.type||"ObjectProperty"===e.type||"MethodDefinition"===e.type||"ClassProperty"===e.type||"ClassMethod"===e.type||"PropertyDefinition"===e.type||"TSDeclareMethod"===e.type||"TSPropertySignature"===e.type||"ObjectTypeProperty"===e.type||"ImportAttribute"===e.type)&&e.key&&!e.computed){let{key:n}=e;pe(n)||ie(n)?t.key=String(n.value):"Identifier"===n.type&&(t.key=n.name)}if("JSXElement"===e.type&&"style"===e.openingElement.name.name&&e.openingElement.attributes.some((e=>"JSXAttribute"===e.type&&"jsx"===e.name.name)))for(let{type:e,expression:n}of t.children)"JSXExpressionContainer"===e&&"TemplateLiteral"===n.type&&mt(n);"JSXAttribute"===e.type&&"css"===e.name.name&&"JSXExpressionContainer"===e.value.type&&"TemplateLiteral"===e.value.expression.type&&mt(t.value.expression),"JSXAttribute"===e.type&&"Literal"===(null==(r=e.value)?void 0:r.type)&&/["']|&quot;|&apos;/.test(e.value.value)&&(t.value.value=F(!1,e.value.value,/["']|&quot;|&apos;/g,'"'));let a=e.expression||e.callee;if("Decorator"===e.type&&"CallExpression"===a.type&&"Component"===a.callee.name&&1===a.arguments.length){let n=e.expression.arguments[0].properties;for(let[e,r]of t.expression.arguments[0].properties.entries())switch(n[e].key.name){case"styles":ae(r.value)&&mt(r.value.elements[0]);break;case"template":"TemplateLiteral"===r.value.type&&mt(r.value)}}"TaggedTemplateExpression"===e.type&&("MemberExpression"===e.tag.type||"Identifier"===e.tag.type&&("gql"===e.tag.name||"graphql"===e.tag.name||"css"===e.tag.name||"md"===e.tag.name||"markdown"===e.tag.name||"html"===e.tag.name)||"CallExpression"===e.tag.type)&&mt(t.quasi),"TemplateLiteral"===e.type&&(null!=(u=e.leadingComments)&&u.some((e=>H(e)&&["GraphQL","HTML"].some((t=>e.value===` ${t} `))))||"CallExpression"===n.type&&"graphql"===n.callee.name||!e.leadingComments)&&mt(t),"ChainExpression"===e.type&&"TSNonNullExpression"===e.expression.type&&(t.type="TSNonNullExpression",t.expression.type="ChainExpression")}ft.ignoredProperties=dt;var Et=ft,Ft="string",At="array",gt="cursor",ht="indent",xt="align",Ct="trim",Tt="group",St="fill",bt="if-break",Bt="indent-if-break",vt="line-suffix",kt="line-suffix-boundary",Pt="line",wt="label",Nt="break-parent",It=new Set([gt,ht,xt,Ct,Tt,St,bt,Bt,vt,kt,Pt,wt,Nt]);var jt=function(e){if("string"==typeof e)return Ft;if(Array.isArray(e))return At;if(!e)return;let{type:t}=e;return It.has(t)?t:void 0};function Lt(e){let t=null===e?"null":typeof e;if("string"!==t&&"object"!==t)return`Unexpected doc '${t}', \nExpected it to be 'string' or 'object'.`;if(jt(e))throw new Error("doc is valid.");let n=Object.prototype.toString.call(e);if("[object Object]"!==n)return`Unexpected doc '${n}'.`;let r=(e=>new Intl.ListFormat("en-US",{type:"disjunction"}).format(e))([...It].map((e=>`'${e}'`)));return`Unexpected doc.type '${e.type}'.\nExpected it to be ${r}.`}var Mt=class extends Error{name="InvalidDocError";constructor(e){super(Lt(e)),this.doc=e}},Ot=Mt,Jt={};var qt=function(e,t,n,r){let u=[e];for(;u.length>0;){let e=u.pop();if(e===Jt){n(u.pop());continue}n&&u.push(e,Jt);let a=jt(e);if(!a)throw new Ot(e);if(!1!==(null==t?void 0:t(e)))switch(a){case At:case St:{let t=a===At?e:e.parts;for(let e=t.length-1;e>=0;--e)u.push(t[e]);break}case bt:u.push(e.flatContents,e.breakContents);break;case Tt:if(r&&e.expandedStates)for(let t=e.expandedStates.length-1;t>=0;--t)u.push(e.expandedStates[t]);else u.push(e.contents);break;case xt:case ht:case Bt:case wt:case vt:u.push(e.contents);break;case Ft:case gt:case Ct:case kt:case Pt:case Nt:break;default:throw new Ot(e)}}},_t=()=>{},Xt=_t,Rt=_t;function $t(e){return Xt(e),{type:ht,contents:e}}function Wt(e,t){return Xt(t),{type:xt,contents:t,n:e}}function Ut(e,t={}){return Xt(e),Rt(t.expandedStates,!0),{type:Tt,id:t.id,contents:e,break:!!t.shouldBreak,expandedStates:t.expandedStates}}function Gt(e){return Wt(Number.NEGATIVE_INFINITY,e)}function Vt(e){return Wt(-1,e)}function Kt(e,t){return Ut(e[0],{...t,expandedStates:e})}function Ht(e){return Rt(e),{type:St,parts:e}}function zt(e,t="",n={}){return Xt(e),""!==t&&Xt(t),{type:bt,breakContents:e,flatContents:t,groupId:n.groupId}}function Qt(e,t){return Xt(e),{type:Bt,contents:e,groupId:t.groupId,negate:t.negate}}function Yt(e){return Xt(e),{type:vt,contents:e}}var Zt={type:kt},en={type:Nt},tn={type:Pt,hard:!0},nn={type:Pt},rn={type:Pt,soft:!0},un=[tn,en],an=[{type:Pt,hard:!0,literal:!0},en],on={type:gt};function sn(e,t){Xt(e),Rt(t);let n=[];for(let r=0;r<t.length;r++)0!==r&&n.push(e),n.push(t[r]);return n}function pn(e,t){return Xt(t),e?{type:wt,label:e,contents:t}:t}function ln(e,t){if("string"==typeof e)return t(e);let n=new Map;return r(e);function r(e){if(n.has(e))return n.get(e);let u=function(e){switch(jt(e)){case At:return t(e.map(r));case St:return t({...e,parts:e.parts.map(r)});case bt:return t({...e,breakContents:r(e.breakContents),flatContents:r(e.flatContents)});case Tt:{let{expandedStates:n,contents:u}=e;return n?(n=n.map(r),u=n[0]):u=r(u),t({...e,contents:u,expandedStates:n})}case xt:case ht:case Bt:case wt:case vt:return t({...e,contents:r(e.contents)});case Ft:case gt:case Ct:case kt:case Pt:case Nt:return t(e);default:throw new Ot(e)}}(e);return n.set(e,u),u}}function cn(e,t,n){let r=n,u=!1;return qt(e,(function(e){if(u)return!1;let n=t(e);void 0!==n&&(u=!0,r=n)})),r}function Dn(e){if(e.type===Tt&&e.break||e.type===Pt&&e.hard||e.type===Nt)return!0}function yn(e){return cn(e,Dn,!1)}function dn(e){if(e.length>0){let t=A(!1,e,-1);!t.expandedStates&&!t.break&&(t.break="propagated")}return null}function mn(e){return e.type!==Pt||e.hard?e.type===bt?e.flatContents:e:e.soft?"":" "}function fn(e){return ln(e,mn)}function En(e){return ln(e,(e=>function(e){switch(jt(e)){case St:if(e.parts.every((e=>""===e)))return"";break;case Tt:if(!(e.contents||e.id||e.break||e.expandedStates))return"";if(e.contents.type===Tt&&e.contents.id===e.id&&e.contents.break===e.break&&e.contents.expandedStates===e.expandedStates)return e.contents;break;case xt:case ht:case Bt:case vt:if(!e.contents)return"";break;case bt:if(!e.flatContents&&!e.breakContents)return"";break;case At:{let t=[];for(let n of e){if(!n)continue;let[e,...r]=Array.isArray(n)?n:[n];"string"==typeof e&&"string"==typeof A(!1,t,-1)?t[t.length-1]+=e:t.push(e),t.push(...r)}return 0===t.length?"":1===t.length?t[0]:t}case Ft:case gt:case Ct:case kt:case Pt:case wt:case Nt:break;default:throw new Ot(e)}return e}(e)))}function Fn(e,t=an){return ln(e,(e=>"string"==typeof e?sn(t,e.split("\n")):e))}function An(e){if(e.type===Pt)return!0}function gn(e,t){return e.type===wt?{...e,contents:t(e.contents)}:t(e)}var hn=function(e){let t=`*${e.value}*`.split("\n");return t.length>1&&t.every((e=>"*"===e.trimStart()[0]))};function xn(e,t){let n=e.node;if(re(n))return t.originalText.slice(_(n),X(n)).trimEnd();if(H(n))return hn(n)?function(e){let t=e.value.split("\n");return["/*",sn(un,t.map(((e,n)=>0===n?e.trimEnd():" "+(n<t.length-1?e.trim():e.trimStart())))),"*/"]}(n):["/*",Fn(n.value),"*/"];throw new Error("Not a comment: "+JSON.stringify(n))}var Cn={};function Tn(e,t){(e.comments??(e.comments=[])).push(t),t.printed=!1,t.nodeDescription=function(e){let t=e.type||e.kind||"(unknown type)",n=String(e.name||e.id&&("object"==typeof e.id?e.id.name:e.id)||e.key&&("object"==typeof e.key?e.key.name:e.key)||e.value&&("object"==typeof e.value?"":String(e.value))||e.operator||"");return n.length>20&&(n=n.slice(0,19)+"…"),t+(n?" "+n:"")}(e)}function Sn(e,t){t.leading=!0,t.trailing=!1,Tn(e,t)}function bn(e,t,n){t.leading=!1,t.trailing=!1,n&&(t.marker=n),Tn(e,t)}function Bn(e,t){t.leading=!1,t.trailing=!0,Tn(e,t)}D(Cn,{endOfLine:()=>In,ownLine:()=>Nn,remaining:()=>jn});var vn=function(e,t){let n=null,r=t;for(;r!==n;)n=r,r=B(e,r),r=N(e,r),r=I(e,r),r=P(e,r);return r};var kn=function(e,t){let n=vn(e,t);return!1===n?"":e.charAt(n)};var Pn=function(e,t,n){for(let r=t;r<n;++r)if("\n"===e.charAt(r))return!0;return!1};var wn=function(e){return H(e)&&"*"===e.value[0]&&/@(?:type|satisfies)\b/.test(e.value)};function Nn(e){return[dr,$n,er,Zn,Xn,Jn,qn,_n,Gn,ir,ur,or,sr,pr,Kn,tr,nr,Rn,Fr].some((t=>t(e)))}function In(e){return[On,er,$n,sr,Jn,qn,_n,Gn,tr,rr,ar,or,Dr,nr,fr,Er].some((t=>t(e)))}function jn(e){return[dr,Jn,qn,Wn,Yn,Kn,or,Qn,zn,mr,nr,yr].some((t=>t(e)))}function Ln(e,t){let n=(e.body||e.properties).find((({type:e})=>"EmptyStatement"!==e));n?Sn(n,t):bn(e,t)}function Mn(e,t){"BlockStatement"===e.type?Ln(e,t):Sn(e,t)}function On({comment:e,followingNode:t}){return!(!t||!wn(e))&&(Sn(t,e),!0)}function Jn({comment:e,precedingNode:t,enclosingNode:n,followingNode:r,text:u}){if("IfStatement"!==(null==n?void 0:n.type)||!r)return!1;if(")"===kn(u,X(e)))return Bn(t,e),!0;if(t===n.consequent&&r===n.alternate){if("BlockStatement"===t.type)Bn(t,e);else{let r=re(e)||e.loc.start.line===e.loc.end.line,u=e.loc.start.line===t.loc.start.line;r&&u?Bn(t,e):bn(n,e)}return!0}return"BlockStatement"===r.type?(Ln(r,e),!0):"IfStatement"===r.type?(Mn(r.consequent,e),!0):n.consequent===r&&(Sn(r,e),!0)}function qn({comment:e,precedingNode:t,enclosingNode:n,followingNode:r,text:u}){return!("WhileStatement"!==(null==n?void 0:n.type)||!r)&&(")"===kn(u,X(e))?(Bn(t,e),!0):"BlockStatement"===r.type?(Ln(r,e),!0):n.body===r&&(Sn(r,e),!0))}function _n({comment:e,precedingNode:t,enclosingNode:n,followingNode:r}){return!("TryStatement"!==(null==n?void 0:n.type)&&"CatchClause"!==(null==n?void 0:n.type)||!r)&&("CatchClause"===n.type&&t?(Bn(t,e),!0):"BlockStatement"===r.type?(Ln(r,e),!0):"TryStatement"===r.type?(Mn(r.finalizer,e),!0):"CatchClause"===r.type&&(Mn(r.body,e),!0))}function Xn({comment:e,enclosingNode:t,followingNode:n}){return!(!Be(t)||"Identifier"!==(null==n?void 0:n.type))&&(Sn(t,e),!0)}function Rn({comment:e,enclosingNode:t,followingNode:n,options:r}){return!(!r.experimentalTernaries||"ConditionalExpression"!==(null==t?void 0:t.type)&&"ConditionalTypeAnnotation"!==(null==t?void 0:t.type)&&"TSConditionalType"!==(null==t?void 0:t.type))&&(("ConditionalExpression"===(null==n?void 0:n.type)||"ConditionalTypeAnnotation"===(null==n?void 0:n.type)||"TSConditionalType"===(null==n?void 0:n.type))&&(bn(t,e),!0))}function $n({comment:e,precedingNode:t,enclosingNode:n,followingNode:r,text:u,options:a}){let o=t&&!Pn(u,X(t),_(e));return!(t&&o||"ConditionalExpression"!==(null==n?void 0:n.type)&&"ConditionalTypeAnnotation"!==(null==n?void 0:n.type)&&"TSConditionalType"!==(null==n?void 0:n.type)||!r)&&(!a.experimentalTernaries||n.alternate!==r||H(e)&&!Pn(a.originalText,_(e),X(e))?(Sn(r,e),!0):(bn(n,e),!0))}function Wn({comment:e,precedingNode:t,enclosingNode:n}){return!(!lt(n)||!n.shorthand||n.key!==t||"AssignmentPattern"!==n.value.type)&&(Bn(n.value.left,e),!0)}var Un=new Set(["ClassDeclaration","ClassExpression","DeclareClass","DeclareInterface","InterfaceDeclaration","TSInterfaceDeclaration"]);function Gn({comment:e,precedingNode:t,enclosingNode:n,followingNode:r}){if(Un.has(null==n?void 0:n.type)){if(L(n.decorators)&&"Decorator"!==(null==r?void 0:r.type))return Bn(A(!1,n.decorators,-1),e),!0;if(n.body&&r===n.body)return Ln(n.body,e),!0;if(r){if(n.superClass&&r===n.superClass&&t&&(t===n.id||t===n.typeParameters))return Bn(t,e),!0;for(let u of["implements","extends","mixins"])if(n[u]&&r===n[u][0])return!t||t!==n.id&&t!==n.typeParameters&&t!==n.superClass?bn(n,e,u):Bn(t,e),!0}}return!1}var Vn=new Set(["ClassMethod","ClassProperty","PropertyDefinition","TSAbstractPropertyDefinition","TSAbstractMethodDefinition","TSDeclareMethod","MethodDefinition","ClassAccessorProperty","AccessorProperty","TSAbstractAccessorProperty"]);function Kn({comment:e,precedingNode:t,enclosingNode:n,text:r}){return(n&&t&&"("===kn(r,X(e))&&("Property"===n.type||"TSDeclareMethod"===n.type||"TSAbstractMethodDefinition"===n.type)&&"Identifier"===t.type&&n.key===t&&":"!==kn(r,X(t))||!("Decorator"!==(null==t?void 0:t.type)||!Vn.has(null==n?void 0:n.type)))&&(Bn(t,e),!0)}var Hn=new Set(["FunctionDeclaration","FunctionExpression","ClassMethod","MethodDefinition","ObjectMethod"]);function zn({comment:e,precedingNode:t,enclosingNode:n,text:r}){return"("===kn(r,X(e))&&(!(!t||!Hn.has(null==n?void 0:n.type))&&(Bn(t,e),!0))}function Qn({comment:e,enclosingNode:t,text:n}){if("ArrowFunctionExpression"!==(null==t?void 0:t.type))return!1;let r=vn(n,X(e));return!1!==r&&"=>"===n.slice(r,r+2)&&(bn(t,e),!0)}function Yn({comment:e,enclosingNode:t,text:n}){return")"===kn(n,X(e))&&(t&&(Ar(t)&&0===Qe(t).length||pt(t)&&0===Ze(t).length)?(bn(t,e),!0):("MethodDefinition"===(null==t?void 0:t.type)||"TSAbstractMethodDefinition"===(null==t?void 0:t.type))&&0===Qe(t.value).length&&(bn(t.value,e),!0))}function Zn({comment:e,precedingNode:t,enclosingNode:n,followingNode:r,text:u}){return"ComponentTypeParameter"!==(null==t?void 0:t.type)||"DeclareComponent"!==(null==n?void 0:n.type)&&"ComponentTypeAnnotation"!==(null==n?void 0:n.type)||"ComponentTypeParameter"===(null==r?void 0:r.type)?("ComponentParameter"===(null==t?void 0:t.type)||"RestElement"===(null==t?void 0:t.type))&&"ComponentDeclaration"===(null==n?void 0:n.type)&&")"===kn(u,X(e))&&(Bn(t,e),!0):(Bn(t,e),!0)}function er({comment:e,precedingNode:t,enclosingNode:n,followingNode:r,text:u}){return"FunctionTypeParam"===(null==t?void 0:t.type)&&"FunctionTypeAnnotation"===(null==n?void 0:n.type)&&"FunctionTypeParam"!==(null==r?void 0:r.type)?(Bn(t,e),!0):"Identifier"!==(null==t?void 0:t.type)&&"AssignmentPattern"!==(null==t?void 0:t.type)&&"ObjectPattern"!==(null==t?void 0:t.type)&&"ArrayPattern"!==(null==t?void 0:t.type)&&"RestElement"!==(null==t?void 0:t.type)&&"TSParameterProperty"!==(null==t?void 0:t.type)||!Ar(n)||")"!==kn(u,X(e))?!(H(e)||"FunctionDeclaration"!==(null==n?void 0:n.type)&&"FunctionExpression"!==(null==n?void 0:n.type)&&"ObjectMethod"!==(null==n?void 0:n.type)||"BlockStatement"!==(null==r?void 0:r.type)||n.body!==r||vn(u,X(e))!==_(r))&&(Ln(r,e),!0):(Bn(t,e),!0)}function tr({comment:e,enclosingNode:t}){return"LabeledStatement"===(null==t?void 0:t.type)&&(Sn(t,e),!0)}function nr({comment:e,enclosingNode:t}){return!("ContinueStatement"!==(null==t?void 0:t.type)&&"BreakStatement"!==(null==t?void 0:t.type)||t.label)&&(Bn(t,e),!0)}function rr({comment:e,precedingNode:t,enclosingNode:n}){return!!(be(n)&&t&&n.callee===t&&n.arguments.length>0)&&(Sn(n.arguments[0],e),!0)}function ur({comment:e,precedingNode:t,enclosingNode:n,followingNode:r}){return Dt(n)?(nt(e)&&(r.prettierIgnore=!0,e.unignore=!0),!!t&&(Bn(t,e),!0)):(Dt(r)&&nt(e)&&(r.types[0].prettierIgnore=!0,e.unignore=!0),!1)}function ar({comment:e,enclosingNode:t}){return!!lt(t)&&(Sn(t,e),!0)}function or({comment:e,enclosingNode:t,ast:n,isLastComment:r}){var u;return 0===(null==(u=null==n?void 0:n.body)?void 0:u.length)?(r?bn(n,e):Sn(n,e),!0):"Program"===(null==t?void 0:t.type)&&0===t.body.length&&!L(t.directives)&&(r?bn(t,e):Sn(t,e),!0)}function ir({comment:e,enclosingNode:t}){return("ForInStatement"===(null==t?void 0:t.type)||"ForOfStatement"===(null==t?void 0:t.type))&&(Sn(t,e),!0)}function sr({comment:e,precedingNode:t,enclosingNode:n,text:r}){if("ImportSpecifier"===(null==n?void 0:n.type)||"ExportSpecifier"===(null==n?void 0:n.type))return Sn(n,e),!0;let u="ImportSpecifier"===(null==t?void 0:t.type)&&"ImportDeclaration"===(null==n?void 0:n.type),a="ExportSpecifier"===(null==t?void 0:t.type)&&"ExportNamedDeclaration"===(null==n?void 0:n.type);return!(!u&&!a||!w(r,X(e)))&&(Bn(t,e),!0)}function pr({comment:e,enclosingNode:t}){return"AssignmentPattern"===(null==t?void 0:t.type)&&(Sn(t,e),!0)}var lr=new Set(["VariableDeclarator","AssignmentExpression","TypeAlias","TSTypeAliasDeclaration"]),cr=new Set(["ObjectExpression","RecordExpression","ArrayExpression","TupleExpression","TemplateLiteral","TaggedTemplateExpression","ObjectTypeAnnotation","TSTypeLiteral"]);function Dr({comment:e,enclosingNode:t,followingNode:n}){return!(!lr.has(null==t?void 0:t.type)||!n||!cr.has(n.type)&&!H(e))&&(Sn(n,e),!0)}function yr({comment:e,enclosingNode:t,followingNode:n,text:r}){return!(n||"TSMethodSignature"!==(null==t?void 0:t.type)&&"TSDeclareFunction"!==(null==t?void 0:t.type)&&"TSAbstractMethodDefinition"!==(null==t?void 0:t.type)||";"!==kn(r,X(e)))&&(Bn(t,e),!0)}function dr({comment:e,enclosingNode:t,followingNode:n}){if(nt(e)&&"TSMappedType"===(null==t?void 0:t.type)&&"TSTypeParameter"===(null==n?void 0:n.type)&&n.constraint)return t.prettierIgnore=!0,e.unignore=!0,!0}function mr({comment:e,precedingNode:t,enclosingNode:n,followingNode:r}){return"TSMappedType"===(null==n?void 0:n.type)&&("TSTypeParameter"===(null==r?void 0:r.type)&&r.name?(Sn(r.name,e),!0):!("TSTypeParameter"!==(null==t?void 0:t.type)||!t.constraint)&&(Bn(t.constraint,e),!0))}function fr({comment:e,enclosingNode:t,followingNode:n}){return!(!t||"SwitchCase"!==t.type||t.test||!n||n!==t.consequent[0])&&("BlockStatement"===n.type&&re(e)?Ln(n,e):bn(t,e),!0)}function Er({comment:e,precedingNode:t,enclosingNode:n,followingNode:r}){return!(!Dt(t)||("TSArrayType"!==n.type&&"ArrayTypeAnnotation"!==n.type||r)&&!yt(n))&&(Bn(A(!1,t.types,-1),e),!0)}function Fr({comment:e,enclosingNode:t,precedingNode:n,followingNode:r}){if(("ObjectPattern"===(null==t?void 0:t.type)||"ArrayPattern"===(null==t?void 0:t.type))&&"TSTypeAnnotation"===(null==r?void 0:r.type))return n?Bn(n,e):bn(t,e),!0}var Ar=K(["ArrowFunctionExpression","FunctionExpression","FunctionDeclaration","ObjectMethod","ClassMethod","TSDeclareFunction","TSCallSignatureDeclaration","TSConstructSignatureDeclaration","TSMethodSignature","TSConstructorType","TSFunctionType","TSDeclareMethod"]),gr=new Set(["EmptyStatement","TemplateElement","Import","TSEmptyBodyFunctionExpression","ChainExpression"]);function hr(e){return!gr.has(e.type)}function xr(e,t){var n;if(("typescript"===t.parser||"flow"===t.parser||"acorn"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser)&&"MethodDefinition"===e.type&&"FunctionExpression"===(null==(n=e.value)?void 0:n.type)&&0===Qe(e.value).length&&!e.value.returnType&&!L(e.value.typeParameters)&&e.value.body)return[...e.decorators||[],e.key,e.value.body]}function Cr(e){let{node:t,parent:n}=e;return(fe(t)||n&&("JSXSpreadAttribute"===n.type||"JSXSpreadChild"===n.type||Dt(n)||("ClassDeclaration"===n.type||"ClassExpression"===n.type)&&n.superClass===t))&&(!rt(t)||Dt(n))}function Tr(e,{parser:t}){if("flow"===t||"babel-flow"===t)return""===(e=F(!1,e,/[\s(]/g,""))||"/*"===e||"/*::"===e}var Sr=Symbol("MODE_BREAK"),br=Symbol("MODE_FLAT"),Br=Symbol("cursor");function vr(e,t){return Pr(e,{type:"indent"},t)}function kr(e,t,n){return t===Number.NEGATIVE_INFINITY?e.root||{value:"",length:0,queue:[]}:t<0?Pr(e,{type:"dedent"},n):t?"root"===t.type?{...e,root:e}:Pr(e,{type:"string"==typeof t?"stringAlign":"numberAlign",n:t},n):e}function Pr(e,t,n){let r="dedent"===t.type?e.queue.slice(0,-1):[...e.queue,t],u="",a=0,o=0,i=0;for(let e of r)switch(e.type){case"indent":l(),n.useTabs?s(1):p(n.tabWidth);break;case"stringAlign":l(),u+=e.n,a+=e.n.length;break;case"numberAlign":o+=1,i+=e.n;break;default:throw new Error(`Unexpected type '${e.type}'`)}return c(),{...e,value:u,length:a,queue:r};function s(e){u+="\t".repeat(e),a+=n.tabWidth*e}function p(e){u+=" ".repeat(e),a+=e}function l(){n.useTabs?(o>0&&s(o),D()):c()}function c(){i>0&&p(i),D()}function D(){o=0,i=0}}function wr(e){let t=0,n=0,r=e.length;e:for(;r--;){let u=e[r];if(u!==Br)for(let n=u.length-1;n>=0;n--){let a=u[n];if(" "!==a&&"\t"!==a){e[r]=u.slice(0,n+1);break e}t++}else n++}if(t>0||n>0)for(e.length=r+1;n-- >0;)e.push(Br);return t}function Nr(e,t,n,r,u,a){if(n===Number.POSITIVE_INFINITY)return!0;let o=t.length,i=[e],s=[];for(;n>=0;){if(0===i.length){if(0===o)return!0;i.push(t[--o]);continue}let{mode:e,doc:p}=i.pop(),l=jt(p);switch(l){case Ft:s.push(p),n-=S(p);break;case At:case St:{let t=l===At?p:p.parts;for(let n=t.length-1;n>=0;n--)i.push({mode:e,doc:t[n]});break}case ht:case xt:case Bt:case wt:i.push({mode:e,doc:p.contents});break;case Ct:n+=wr(s);break;case Tt:{if(a&&p.break)return!1;let t=p.break?Sr:e,n=p.expandedStates&&t===Sr?A(!1,p.expandedStates,-1):p.contents;i.push({mode:t,doc:n});break}case bt:{let t=(p.groupId?u[p.groupId]||br:e)===Sr?p.breakContents:p.flatContents;t&&i.push({mode:e,doc:t});break}case Pt:if(e===Sr||p.hard)return!0;p.soft||(s.push(" "),n--);break;case vt:r=!0;break;case kt:if(r)return!1}}return!1}function Ir(e,t){let n={},r=t.printWidth,u=function(e){switch(e){case"cr":return"\r";case"crlf":return"\r\n";default:return"\n"}}(t.endOfLine),a=0,o=[{ind:{value:"",length:0,queue:[]},mode:Sr,doc:e}],i=[],s=!1,p=[],l=0;for(function(e){let t=new Set,n=[];qt(e,(function(e){if(e.type===Nt&&dn(n),e.type===Tt){if(n.push(e),t.has(e))return!1;t.add(e)}}),(function(e){e.type===Tt&&n.pop().break&&dn(n)}),!0)}(e);o.length>0;){let{ind:e,mode:c,doc:D}=o.pop();switch(jt(D)){case Ft:{let e="\n"!==u?F(!1,D,"\n",u):D;i.push(e),o.length>0&&(a+=S(e));break}case At:for(let t=D.length-1;t>=0;t--)o.push({ind:e,mode:c,doc:D[t]});break;case gt:if(l>=2)throw new Error("There are too many 'cursor' in doc.");i.push(Br),l++;break;case ht:o.push({ind:vr(e,t),mode:c,doc:D.contents});break;case xt:o.push({ind:kr(e,D.n,t),mode:c,doc:D.contents});break;case Ct:a-=wr(i);break;case Tt:switch(c){case br:if(!s){o.push({ind:e,mode:D.break?Sr:br,doc:D.contents});break}case Sr:{s=!1;let t={ind:e,mode:br,doc:D.contents},u=r-a,i=p.length>0;if(!D.break&&Nr(t,o,u,i,n))o.push(t);else if(D.expandedStates){let t=A(!1,D.expandedStates,-1);if(D.break){o.push({ind:e,mode:Sr,doc:t});break}for(let r=1;r<D.expandedStates.length+1;r++){if(r>=D.expandedStates.length){o.push({ind:e,mode:Sr,doc:t});break}{let t=D.expandedStates[r],a={ind:e,mode:br,doc:t};if(Nr(a,o,u,i,n)){o.push(a);break}}}}else o.push({ind:e,mode:Sr,doc:D.contents});break}}D.id&&(n[D.id]=A(!1,o,-1).mode);break;case St:{let t=r-a,{parts:u}=D;if(0===u.length)break;let[i,s]=u,l={ind:e,mode:br,doc:i},y={ind:e,mode:Sr,doc:i},d=Nr(l,[],t,p.length>0,n,!0);if(1===u.length){d?o.push(l):o.push(y);break}let m={ind:e,mode:br,doc:s},f={ind:e,mode:Sr,doc:s};if(2===u.length){d?o.push(m,l):o.push(f,y);break}u.splice(0,2);let E={ind:e,mode:c,doc:Ht(u)},F=u[0];Nr({ind:e,mode:br,doc:[i,s,F]},[],t,p.length>0,n,!0)?o.push(E,m,l):d?o.push(E,f,l):o.push(E,f,y);break}case bt:case Bt:{let t=D.groupId?n[D.groupId]:c;if(t===Sr){let t=D.type===bt?D.breakContents:D.negate?D.contents:$t(D.contents);t&&o.push({ind:e,mode:c,doc:t})}if(t===br){let t=D.type===bt?D.flatContents:D.negate?$t(D.contents):D.contents;t&&o.push({ind:e,mode:c,doc:t})}break}case vt:p.push({ind:e,mode:c,doc:D.contents});break;case kt:p.length>0&&o.push({ind:e,mode:c,doc:tn});break;case Pt:switch(c){case br:if(!D.hard){D.soft||(i.push(" "),a+=1);break}s=!0;case Sr:if(p.length>0){o.push({ind:e,mode:c,doc:D},...p.reverse()),p.length=0;break}D.literal?e.root?(i.push(u,e.root.value),a=e.root.length):(i.push(u),a=0):(a-=wr(i),i.push(u+e.value),a=e.length)}break;case wt:o.push({ind:e,mode:c,doc:D.contents});break;case Nt:break;default:throw new Ot(D)}0===o.length&&p.length>0&&(o.push(...p.reverse()),p.length=0)}let c=i.indexOf(Br);if(-1!==c){let e=i.indexOf(Br,c+1),t=i.slice(0,c).join(""),n=i.slice(c+1,e).join("");return{formatted:t+n+i.slice(e+1).join(""),cursorNodeStart:t.length,cursorNodeText:n}}return{formatted:i.join("")}}var jr=function(e,t,n=0){let r=0;for(let u=n;u<e.length;++u)"\t"===e[u]?r=r+t-r%t:r++;return r};var Lr=function(e,t){let n=e.lastIndexOf("\n");return-1===n?0:jr(e.slice(n+1).match(/^[\t ]*/)[0],t)};function Mr(e,t,n){let{node:r}=e;if("TemplateLiteral"===r.type&&function({node:e,parent:t}){let n=/^[fx]?(?:describe|it|test)$/;return"TaggedTemplateExpression"===t.type&&t.quasi===e&&"MemberExpression"===t.tag.type&&"Identifier"===t.tag.property.type&&"each"===t.tag.property.name&&("Identifier"===t.tag.object.type&&n.test(t.tag.object.name)||"MemberExpression"===t.tag.object.type&&"Identifier"===t.tag.object.property.type&&("only"===t.tag.object.property.name||"skip"===t.tag.object.property.name)&&"Identifier"===t.tag.object.object.type&&n.test(t.tag.object.object.name))}(e)){let r=function(e,t,n){let{node:r}=e,u=r.quasis[0].value.raw.trim().split(/\s*\|\s*/);if(u.length>1||u.some((e=>e.length>0))){t.__inJestEach=!0;let a=e.map(n,"expressions");t.__inJestEach=!1;let o=[],i=a.map((e=>"${"+Ir(e,{...t,printWidth:Number.POSITIVE_INFINITY,endOfLine:"lf"}).formatted+"}")),s=[{hasLineBreak:!1,cells:[]}];for(let e=1;e<r.quasis.length;e++){let t=A(!1,s,-1),n=i[e-1];t.cells.push(n),n.includes("\n")&&(t.hasLineBreak=!0),r.quasis[e].value.raw.includes("\n")&&s.push({hasLineBreak:!1,cells:[]})}let p=Math.max(u.length,...s.map((e=>e.cells.length))),l=Array.from({length:p}).fill(0),c=[{cells:u},...s.filter((e=>e.cells.length>0))];for(let{cells:e}of c.filter((e=>!e.hasLineBreak)))for(let[t,n]of e.entries())l[t]=Math.max(l[t],S(n));return o.push(Zt,"`",$t([un,sn(un,c.map((e=>sn(" | ",e.cells.map(((t,n)=>e.hasLineBreak?t:t+" ".repeat(l[n]-S(t))))))))]),un,"`"),o}}(e,n,t);if(r)return r}let u="expressions";"TSTemplateLiteralType"===r.type&&(u="types");let a=[],o=e.map(t,u);a.push(Zt,"`");let i=0;return e.each((({index:e,node:s})=>{if(a.push(t()),s.tail)return;let{tabWidth:p}=n,l=s.value.raw,c=l.includes("\n")?Lr(l,p):i;i=c;let D=o[e],y=r[u][e],d=Pn(n.originalText,X(s),_(r.quasis[e+1]));if(!d){let e=Ir(D,{...n,printWidth:Number.POSITIVE_INFINITY}).formatted;e.includes("\n")?d=!0:D=e}d&&(ot(y)||"Identifier"===y.type||Be(y)||"ConditionalExpression"===y.type||"SequenceExpression"===y.type||ct(y)||Ae(y))&&(D=[$t([rn,D]),rn]);let m=0===c&&l.endsWith("\n")?Wt(Number.NEGATIVE_INFINITY,D):function(e,t,n){Xt(e);let r=e;if(t>0){for(let e=0;e<Math.floor(t/n);++e)r=$t(r);r=Wt(t%n,r),r=Wt(Number.NEGATIVE_INFINITY,r)}return r}(D,c,p);a.push(Ut(["${",m,Zt,"}"]))}),"quasis"),a.push("`"),a}function Or(e,t){return e.map((e=>function(e,t){let{node:n}=e,r=t();return ot(n)&&(r=Ut([$t([rn,r]),rn])),["${",r,Zt,"}"]}(e,t)),"expressions")}function Jr(e,t){return ln(e,(e=>"string"==typeof e?t?F(!1,e,/(\\*)`/g,"$1$1\\`"):qr(e):e))}function qr(e){return F(!1,e,/([\\`]|\${)/g,String.raw`\$1`)}var _r=[(e,t)=>"ObjectExpression"===e.type&&"properties"===t,(e,t)=>"CallExpression"===e.type&&"Identifier"===e.callee.type&&"Component"===e.callee.name&&"arguments"===t,(e,t)=>"Decorator"===e.type&&"expression"===t];function Xr(e,t){return ot(e,ut.Block|ut.Leading,(({value:e})=>e===` ${t} `))}function Rr({node:e,parent:t},n){return Xr(e,n)||function(e){return"AsConstExpression"===e.type||"TSAsExpression"===e.type&&"TSTypeReference"===e.typeAnnotation.type&&"Identifier"===e.typeAnnotation.typeName.type&&"const"===e.typeAnnotation.typeName.name}(t)&&Xr(t,n)||"ExpressionStatement"===t.type&&Xr(t,n)}async function $r(e,t,n){let{node:r}=n,u=r.quasis.map((e=>e.value.raw)),a=0,o=u.reduce(((e,t,n)=>0===n?t:e+"@prettier-placeholder-"+a+++"-id"+t),""),i=function(e,t){if(!L(t))return e;let n=0,r=ln(En(e),(e=>"string"==typeof e&&e.includes("@prettier-placeholder")?e.split(/@prettier-placeholder-(\d+)-id/).map(((e,r)=>r%2==0?Fn(e):(n++,t[e]))):e));return t.length===n?r:null}(await e(o,{parser:"scss"}),Or(n,t));if(!i)throw new Error("Couldn't insert all the expressions");return["`",$t([un,i]),rn,"`"]}function Wr(e){return"Identifier"===e.type&&"styled"===e.name}function Ur(e){return/^[A-Z]/.test(e.object.name)&&"extend"===e.property.name}var Gr=function(e){if(function({node:e,parent:t,grandparent:n}){return n&&e.quasis&&"JSXExpressionContainer"===t.type&&"JSXElement"===n.type&&"style"===n.openingElement.name.name&&n.openingElement.attributes.some((e=>"JSXAttribute"===e.type&&"jsx"===e.name.name))||"TaggedTemplateExpression"===(null==t?void 0:t.type)&&"Identifier"===t.tag.type&&"css"===t.tag.name||"TaggedTemplateExpression"===(null==t?void 0:t.type)&&"MemberExpression"===t.tag.type&&"css"===t.tag.object.name&&("global"===t.tag.property.name||"resolve"===t.tag.property.name)}(e)||function({parent:e}){if(!e||"TaggedTemplateExpression"!==e.type)return!1;let t="ParenthesizedExpression"===e.tag.type?e.tag.expression:e.tag;switch(t.type){case"MemberExpression":return Wr(t.object)||Ur(t);case"CallExpression":return Wr(t.callee)||"MemberExpression"===t.callee.type&&("MemberExpression"===t.callee.object.type&&(Wr(t.callee.object.object)||Ur(t.callee.object))||"CallExpression"===t.callee.object.type&&Wr(t.callee.object.callee));case"Identifier":return"css"===t.name;default:return!1}}(e)||function({parent:e,grandparent:t}){return"JSXAttribute"===(null==t?void 0:t.type)&&"JSXExpressionContainer"===e.type&&"JSXIdentifier"===t.name.type&&"css"===t.name.name}(e)||function(e){let t=e=>"TemplateLiteral"===e.type,n=(e,t)=>lt(e)&&!e.computed&&"Identifier"===e.key.type&&"styles"===e.key.name&&"value"===t;return e.match(t,((e,t)=>ae(e)&&"elements"===t),n,..._r)||e.match(t,n,..._r)}(e))return $r};async function Vr(e,t,n){let{node:r}=n,u=r.quasis.length,a=Or(n,t),o=[];for(let t=0;t<u;t++){let n=0===t,i=t===u-1,s=r.quasis[t].value.cooked,p=s.split("\n"),l=p.length,c=a[t],D=l>2&&""===p[0].trim()&&""===p[1].trim(),y=l>2&&""===p[l-1].trim()&&""===p[l-2].trim(),d=p.every((e=>/^\s*(?:#[^\n\r]*)?$/.test(e)));if(!i&&/#[^\n\r]*$/.test(p[l-1]))return null;let m=null;m=d?Kr(p):await e(s,{parser:"graphql"}),m?(m=Jr(m,!1),!n&&D&&o.push(""),o.push(m),!i&&y&&o.push("")):!n&&!i&&D&&o.push(""),c&&o.push(c)}return["`",$t([un,sn(un,o)]),un,"`"]}function Kr(e){let t=[],n=!1,r=e.map((e=>e.trim()));for(let[e,u]of r.entries())""!==u&&(""===r[e-1]&&n?t.push([un,u]):t.push(u),n=!0);return 0===t.length?null:sn(un,t)}var Hr=function(e){if(function({node:e,parent:t}){return Rr({node:e,parent:t},"GraphQL")||t&&("TaggedTemplateExpression"===t.type&&("MemberExpression"===t.tag.type&&"graphql"===t.tag.object.name&&"experimental"===t.tag.property.name||"Identifier"===t.tag.type&&("gql"===t.tag.name||"graphql"===t.tag.name))||"CallExpression"===t.type&&"Identifier"===t.callee.type&&"graphql"===t.callee.name)}(e))return Vr},zr=0;async function Qr(e,t,n,r,u){let{node:a}=r,o=zr;zr=zr+1>>>0;let i=e=>`PRETTIER_HTML_PLACEHOLDER_${e}_${o}_IN_JS`,s=a.quasis.map(((e,t,n)=>t===n.length-1?e.value.cooked:e.value.cooked+i(t))).join(""),p=Or(r,n),l=new RegExp(i(String.raw`(\d+)`),"g"),c=0,D=ln(await t(s,{parser:e,__onHtmlRoot(e){c=e.children.length}}),(e=>{if("string"!=typeof e)return e;let t=[],n=e.split(l);for(let e=0;e<n.length;e++){let r=n[e];if(e%2==0){r&&(r=qr(r),u.__embeddedInHtml&&(r=F(!1,r,/<\/(?=script\b)/gi,String.raw`<\/`)),t.push(r));continue}let a=Number(r);t.push(p[a])}return t})),y=/^\s/.test(s)?" ":"",d=/\s$/.test(s)?" ":"",m="ignore"===u.htmlWhitespaceSensitivity?un:y&&d?nn:null;return m?Ut(["`",$t([m,Ut(D)]),m,"`"]):pn({hug:!1},Ut(["`",y,c>1?$t(Ut(D)):Ut(D),d,"`"]))}var Yr=Qr.bind(void 0,"html"),Zr=Qr.bind(void 0,"angular");var eu=function(e){return function(e){return Rr(e,"HTML")||e.match((e=>"TemplateLiteral"===e.type),((e,t)=>"TaggedTemplateExpression"===e.type&&"Identifier"===e.tag.type&&"html"===e.tag.name&&"quasi"===t))}(e)?Yr:function(e){return e.match((e=>"TemplateLiteral"===e.type),((e,t)=>lt(e)&&!e.computed&&"Identifier"===e.key.type&&"template"===e.key.name&&"value"===t),..._r)}(e)?Zr:void 0};async function tu(e,t,n){let{node:r}=n,u=F(!1,r.quasis[0].value.raw,/((?:\\\\)*)\\`/g,((e,t)=>"\\".repeat(t.length/2)+"`")),a=function(e){let t=e.match(/^([^\S\n]*)\S/m);return null===t?"":t[1]}(u),o=""!==a;o&&(u=F(!1,u,new RegExp(`^${a}`,"gm"),""));let i=Jr(await e(u,{parser:"markdown",__inJsTemplate:!0}),!0);return["`",o?$t([rn,i]):[an,Gt(i)],rn,"`"]}var nu=function(e){if(function({node:e,parent:t}){return"TaggedTemplateExpression"===(null==t?void 0:t.type)&&1===e.quasis.length&&"Identifier"===t.tag.type&&("md"===t.tag.name||"markdown"===t.tag.name)}(e))return tu};var ru=function(e){let t,{node:n}=e;if("TemplateLiteral"===n.type&&!function({quasis:e}){return e.some((({value:{cooked:e}})=>null===e))}(n))for(let r of[Gr,Hr,eu,nu])if(t=r(e),t)return 1===n.quasis.length&&""===n.quasis[0].value.raw.trim()?"``":async(...e)=>{let n=await t(...e);return n&&pn({embed:!0,...n.label},n)}},uu=((e,t,n)=>(n=null!=e?a(p(e)):{},((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let u of s(t))!l.call(e,u)&&u!==n&&o(e,u,{get:()=>t[u],enumerable:!(r=i(t,u))||r.enumerable});return e})(!t&&e&&e.__esModule?n:o(n,"default",{value:e,enumerable:!0}),e)))(m(),1);var au=function(e){if(!e.startsWith("#!"))return"";let t=e.indexOf("\n");return-1===t?e:e.slice(0,t)};function ou(e){let{shebang:t,text:n,pragmas:r,comments:u}=function(e){let t=au(e);t&&(e=e.slice(t.length+1));let n=(0,uu.extract)(e),{pragmas:r,comments:u}=(0,uu.parseWithComments)(n);return{shebang:t,text:e,pragmas:r,comments:u}}(e),a=(0,uu.strip)(n);return(t?`${t}\n`:"")+(0,uu.print)({pragmas:{format:"",...r},comments:u.trimStart()})+(a.startsWith("\n")?"\n":"\n\n")+a}var iu=function(e,t){let{originalText:n,[Symbol.for("comments")]:r,locStart:u,locEnd:a,[Symbol.for("printedComments")]:o}=t,{node:i}=e,s=u(i),p=a(i);for(let e of r)u(e)>=s&&a(e)<=p&&o.add(e);return n.slice(s,p)};function su(e,t){var n,r,u,a,o,i,s,p,l;if(e.isRoot)return!1;let{node:c,key:D,parent:y}=e;if(t.__isInHtmlInterpolation&&!t.bracketSpacing&&function(e){return oe(e)}(c)&&lu(e))return!0;if(pu(c))return!1;if("Identifier"===c.type){if(null!=(n=c.extra)&&n.parenthesized&&/^PRETTIER_HTML_PLACEHOLDER_\d+_\d+_IN_JS$/.test(c.name)||"left"===D&&("async"===c.name&&!y.await||"let"===c.name)&&"ForOfStatement"===y.type)return!0;if("let"===c.name){let t=null==(r=e.findAncestor((e=>"ForOfStatement"===e.type)))?void 0:r.left;if(t&&Re(t,(e=>e===c)))return!0}if("object"===D&&"let"===c.name&&"MemberExpression"===y.type&&y.computed&&!y.optional){let t=e.findAncestor((e=>"ExpressionStatement"===e.type||"ForStatement"===e.type||"ForInStatement"===e.type)),n=t?"ExpressionStatement"===t.type?t.expression:"ForStatement"===t.type?t.init:t.left:void 0;if(n&&Re(n,(e=>e===c)))return!0}if("expression"===D)switch(c.name){case"await":case"interface":case"module":case"using":case"yield":case"let":case"component":case"hook":case"type":{let t=e.findAncestor((e=>!ct(e)));if(t!==y&&"ExpressionStatement"===t.type)return!0}}return!1}if("ObjectExpression"===c.type||"FunctionExpression"===c.type||"ClassExpression"===c.type||"DoExpression"===c.type){let t=null==(u=e.findAncestor((e=>"ExpressionStatement"===e.type)))?void 0:u.expression;if(t&&Re(t,(e=>e===c)))return!0}if("ObjectExpression"===c.type){let t=null==(a=e.findAncestor((e=>"ArrowFunctionExpression"===e.type)))?void 0:a.body;if(t&&"SequenceExpression"!==t.type&&"AssignmentExpression"!==t.type&&Re(t,(e=>e===c)))return!0}switch(y.type){case"ParenthesizedExpression":return!1;case"ClassDeclaration":case"ClassExpression":if("superClass"===D&&("ArrowFunctionExpression"===c.type||"AssignmentExpression"===c.type||"AwaitExpression"===c.type||"BinaryExpression"===c.type||"ConditionalExpression"===c.type||"LogicalExpression"===c.type||"NewExpression"===c.type||"ObjectExpression"===c.type||"SequenceExpression"===c.type||"TaggedTemplateExpression"===c.type||"UnaryExpression"===c.type||"UpdateExpression"===c.type||"YieldExpression"===c.type||"TSNonNullExpression"===c.type||"ClassExpression"===c.type&&L(c.decorators)))return!0;break;case"ExportDefaultDeclaration":return cu(e,t)||"SequenceExpression"===c.type;case"Decorator":if("expression"===D){if(Be(c)&&c.computed)return!0;let e=!1,n=!1,r=c;for(;r;)switch(r.type){case"MemberExpression":n=!0,r=r.object;break;case"CallExpression":if(n||e)return"typescript"!==t.parser;e=!0,r=r.callee;break;case"Identifier":return!1;case"TaggedTemplateExpression":return"typescript"!==t.parser;default:return!0}return!0}break;case"TypeAnnotation":if(e.match(void 0,void 0,((e,t)=>"returnType"===t&&"ArrowFunctionExpression"===e.type))&&function(e){return Z(e,(e=>"ObjectTypeAnnotation"===e.type&&Z(e,(e=>"FunctionTypeAnnotation"===e.type))))}(c))return!0;break;case"BinaryExpression":if("left"===D&&("in"===y.operator||"instanceof"===y.operator)&&"UnaryExpression"===c.type)return!0}switch(c.type){case"UpdateExpression":if("UnaryExpression"===y.type)return c.prefix&&("++"===c.operator&&"+"===y.operator||"--"===c.operator&&"-"===y.operator);case"UnaryExpression":switch(y.type){case"UnaryExpression":return c.operator===y.operator&&("+"===c.operator||"-"===c.operator);case"BindExpression":case"TaggedTemplateExpression":case"TSNonNullExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===D;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===D;case"BinaryExpression":return"left"===D&&"**"===y.operator;default:return!1}case"BinaryExpression":if("UpdateExpression"===y.type||"in"===c.operator&&function(e){let t=0,{node:n}=e;for(;n;){let r=e.getParentNode(t++);if("ForStatement"===(null==r?void 0:r.type)&&r.init===n)return!0;n=r}return!1}(e))return!0;if("|>"===c.operator&&null!=(o=c.extra)&&o.parenthesized){let t=e.grandparent;if("BinaryExpression"===t.type&&"|>"===t.operator)return!0}case"TSTypeAssertion":case"TSAsExpression":case"TSSatisfiesExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":case"LogicalExpression":switch(y.type){case"TSAsExpression":case"TSSatisfiesExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":return!ct(c);case"ConditionalExpression":return ct(c);case"CallExpression":case"NewExpression":case"OptionalCallExpression":return"callee"===D;case"ClassExpression":case"ClassDeclaration":return"superClass"===D;case"TSTypeAssertion":case"TaggedTemplateExpression":case"UnaryExpression":case"JSXSpreadAttribute":case"SpreadElement":case"BindExpression":case"AwaitExpression":case"TSNonNullExpression":case"UpdateExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===D;case"AssignmentExpression":case"AssignmentPattern":return"left"===D&&("TSTypeAssertion"===c.type||ct(c));case"LogicalExpression":if("LogicalExpression"===c.type)return y.operator!==c.operator;case"BinaryExpression":{let{operator:e,type:t}=c;if(!e&&"TSTypeAssertion"!==t)return!0;let n=Ke(e),r=y.operator,u=Ke(r);return u>n||"right"===D&&u===n||u===n&&!Ge(r,e)||(u<n&&"%"===e?"+"===r||"-"===r:!!function(e){return!!Ue[e]||"|"===e||"^"===e||"&"===e}(r))}default:return!1}case"SequenceExpression":switch(y.type){case"ReturnStatement":case"ForStatement":return!1;case"ExpressionStatement":return"expression"!==D;case"ArrowFunctionExpression":return"body"!==D;default:return!0}case"YieldExpression":if("AwaitExpression"===y.type||"TSTypeAssertion"===y.type)return!0;case"AwaitExpression":switch(y.type){case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"SpreadElement":case"TSAsExpression":case"TSSatisfiesExpression":case"TSNonNullExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":case"BindExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":return"object"===D;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===D;case"ConditionalExpression":return"test"===D;case"BinaryExpression":return!(!c.argument&&"|>"===y.operator);default:return!1}case"TSFunctionType":if(e.match((e=>"TSFunctionType"===e.type),((e,t)=>"typeAnnotation"===t&&"TSTypeAnnotation"===e.type),((e,t)=>"returnType"===t&&"ArrowFunctionExpression"===e.type)))return!0;case"TSConditionalType":case"TSConstructorType":if("extendsType"===D&&"TSConditionalType"===y.type){if("TSConditionalType"===c.type)return!0;let{typeAnnotation:e}=c.returnType||c.typeAnnotation;if("TSTypePredicate"===e.type&&e.typeAnnotation&&(e=e.typeAnnotation.typeAnnotation),"TSInferType"===e.type&&e.typeParameter.constraint)return!0}if("checkType"===D&&"TSConditionalType"===y.type)return!0;case"TSUnionType":case"TSIntersectionType":if(("TSUnionType"===y.type||"TSIntersectionType"===y.type)&&y.types.length>1&&(!c.types||c.types.length>1))return!0;case"TSInferType":if("TSInferType"===c.type){if("TSRestType"===y.type)return!1;if("types"===D&&("TSUnionType"===y.type||"TSIntersectionType"===y.type)&&"TSTypeParameter"===c.typeParameter.type&&c.typeParameter.constraint)return!0}case"TSTypeOperator":return"TSArrayType"===y.type||"TSOptionalType"===y.type||"TSRestType"===y.type||"objectType"===D&&"TSIndexedAccessType"===y.type||"TSTypeOperator"===y.type||"TSTypeAnnotation"===y.type&&e.grandparent.type.startsWith("TSJSDoc");case"TSTypeQuery":return"objectType"===D&&"TSIndexedAccessType"===y.type||"elementType"===D&&"TSArrayType"===y.type;case"TypeOperator":return"ArrayTypeAnnotation"===y.type||"NullableTypeAnnotation"===y.type||"objectType"===D&&("IndexedAccessType"===y.type||"OptionalIndexedAccessType"===y.type)||"TypeOperator"===y.type;case"TypeofTypeAnnotation":return"objectType"===D&&("IndexedAccessType"===y.type||"OptionalIndexedAccessType"===y.type)||"elementType"===D&&"ArrayTypeAnnotation"===y.type;case"ArrayTypeAnnotation":return"NullableTypeAnnotation"===y.type;case"IntersectionTypeAnnotation":case"UnionTypeAnnotation":return"TypeOperator"===y.type||"ArrayTypeAnnotation"===y.type||"NullableTypeAnnotation"===y.type||"IntersectionTypeAnnotation"===y.type||"UnionTypeAnnotation"===y.type||"objectType"===D&&("IndexedAccessType"===y.type||"OptionalIndexedAccessType"===y.type);case"InferTypeAnnotation":case"NullableTypeAnnotation":return"ArrayTypeAnnotation"===y.type||"objectType"===D&&("IndexedAccessType"===y.type||"OptionalIndexedAccessType"===y.type);case"ComponentTypeAnnotation":case"FunctionTypeAnnotation":{if("ComponentTypeAnnotation"===c.type&&(null===c.rendersType||void 0===c.rendersType))return!1;if(e.match(void 0,((e,t)=>"typeAnnotation"===t&&"TypeAnnotation"===e.type),((e,t)=>"returnType"===t&&"ArrowFunctionExpression"===e.type))||e.match(void 0,((e,t)=>"typeAnnotation"===t&&"TypePredicate"===e.type),((e,t)=>"typeAnnotation"===t&&"TypeAnnotation"===e.type),((e,t)=>"returnType"===t&&"ArrowFunctionExpression"===e.type)))return!0;let t="NullableTypeAnnotation"===y.type?e.grandparent:y;return"UnionTypeAnnotation"===t.type||"IntersectionTypeAnnotation"===t.type||"ArrayTypeAnnotation"===t.type||"objectType"===D&&("IndexedAccessType"===t.type||"OptionalIndexedAccessType"===t.type)||"checkType"===D&&"ConditionalTypeAnnotation"===y.type||"extendsType"===D&&"ConditionalTypeAnnotation"===y.type&&"InferTypeAnnotation"===(null==(i=c.returnType)?void 0:i.type)&&(null==(s=c.returnType)?void 0:s.typeParameter.bound)||"NullableTypeAnnotation"===t.type||"FunctionTypeParam"===y.type&&null===y.name&&Qe(c).some((e=>{var t;return"NullableTypeAnnotation"===(null==(t=e.typeAnnotation)?void 0:t.type)}))}case"ConditionalTypeAnnotation":if("extendsType"===D&&"ConditionalTypeAnnotation"===y.type&&"ConditionalTypeAnnotation"===c.type||"checkType"===D&&"ConditionalTypeAnnotation"===y.type)return!0;case"OptionalIndexedAccessType":return"objectType"===D&&"IndexedAccessType"===y.type;case"StringLiteral":case"NumericLiteral":case"Literal":if("string"==typeof c.value&&"ExpressionStatement"===y.type&&!y.directive){let t=e.grandparent;return"Program"===t.type||"BlockStatement"===t.type}return"object"===D&&"MemberExpression"===y.type&&"number"==typeof c.value;case"AssignmentExpression":{let t=e.grandparent;return"body"===D&&"ArrowFunctionExpression"===y.type||("key"!==D||"ClassProperty"!==y.type&&"PropertyDefinition"!==y.type||!y.computed)&&("init"!==D&&"update"!==D||"ForStatement"!==y.type)&&("ExpressionStatement"===y.type?"ObjectPattern"===c.left.type:!("key"===D&&"TSPropertySignature"===y.type||"AssignmentExpression"===y.type||"SequenceExpression"===y.type&&"ForStatement"===t.type&&(t.init===y||t.update===y)||"value"===D&&"Property"===y.type&&"ObjectPattern"===t.type&&t.properties.includes(y)||"NGChainedExpression"===y.type))}case"ConditionalExpression":switch(y.type){case"TaggedTemplateExpression":case"UnaryExpression":case"SpreadElement":case"BinaryExpression":case"LogicalExpression":case"NGPipeExpression":case"ExportDefaultDeclaration":case"AwaitExpression":case"JSXSpreadAttribute":case"TSTypeAssertion":case"TypeCastExpression":case"TSAsExpression":case"TSSatisfiesExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":case"TSNonNullExpression":return!0;case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===D;case"ConditionalExpression":return!t.experimentalTernaries&&"test"===D;case"MemberExpression":case"OptionalMemberExpression":return"object"===D;default:return!1}case"FunctionExpression":switch(y.type){case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===D;case"TaggedTemplateExpression":return!0;default:return!1}case"ArrowFunctionExpression":switch(y.type){case"BinaryExpression":return"|>"!==y.operator||(null==(p=c.extra)?void 0:p.parenthesized);case"NewExpression":case"CallExpression":case"OptionalCallExpression":return"callee"===D;case"MemberExpression":case"OptionalMemberExpression":return"object"===D;case"TSAsExpression":case"TSSatisfiesExpression":case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":case"TSNonNullExpression":case"BindExpression":case"TaggedTemplateExpression":case"UnaryExpression":case"LogicalExpression":case"AwaitExpression":case"TSTypeAssertion":return!0;case"ConditionalExpression":return"test"===D;default:return!1}case"ClassExpression":return"NewExpression"===y.type&&"callee"===D;case"OptionalMemberExpression":case"OptionalCallExpression":case"CallExpression":case"MemberExpression":if(function(e){let{node:t,parent:n,grandparent:r,key:u}=e;return!!(("OptionalMemberExpression"===t.type||"OptionalCallExpression"===t.type)&&("object"===u&&"MemberExpression"===n.type||"callee"===u&&("CallExpression"===n.type||"NewExpression"===n.type)||"TSNonNullExpression"===n.type&&"MemberExpression"===r.type&&r.object===n)||e.match((()=>"CallExpression"===t.type||"MemberExpression"===t.type),((e,t)=>"expression"===t&&"ChainExpression"===e.type))&&(e.match(void 0,void 0,((e,t)=>"callee"===t&&("CallExpression"===e.type&&!e.optional||"NewExpression"===e.type)||"object"===t&&"MemberExpression"===e.type&&!e.optional))||e.match(void 0,void 0,((e,t)=>"expression"===t&&"TSNonNullExpression"===e.type),((e,t)=>"object"===t&&"MemberExpression"===e.type)))||e.match((()=>"CallExpression"===t.type||"MemberExpression"===t.type),((e,t)=>"expression"===t&&"TSNonNullExpression"===e.type),((e,t)=>"expression"===t&&"ChainExpression"===e.type),((e,t)=>"object"===t&&"MemberExpression"===e.type)))}(e))return!0;case"TaggedTemplateExpression":case"TSNonNullExpression":if("callee"===D&&("BindExpression"===y.type||"NewExpression"===y.type)){let e=c;for(;e;)switch(e.type){case"CallExpression":case"OptionalCallExpression":return!0;case"MemberExpression":case"OptionalMemberExpression":case"BindExpression":e=e.object;break;case"TaggedTemplateExpression":e=e.tag;break;case"TSNonNullExpression":e=e.expression;break;default:return!1}}return!1;case"BindExpression":return"callee"===D&&("BindExpression"===y.type||"NewExpression"===y.type)||"object"===D&&Be(y);case"NGPipeExpression":return!("NGRoot"===y.type||"NGMicrosyntaxExpression"===y.type||"ObjectProperty"===y.type&&(null==(l=c.extra)||!l.parenthesized)||ae(y)||"arguments"===D&&be(y)||"right"===D&&"NGPipeExpression"===y.type||"property"===D&&"MemberExpression"===y.type||"AssignmentExpression"===y.type);case"JSXFragment":case"JSXElement":return"callee"===D||"left"===D&&"BinaryExpression"===y.type&&"<"===y.operator||!ae(y)&&"ArrowFunctionExpression"!==y.type&&"AssignmentExpression"!==y.type&&"AssignmentPattern"!==y.type&&"BinaryExpression"!==y.type&&"NewExpression"!==y.type&&"ConditionalExpression"!==y.type&&"ExpressionStatement"!==y.type&&"JsExpressionRoot"!==y.type&&"JSXAttribute"!==y.type&&"JSXElement"!==y.type&&"JSXExpressionContainer"!==y.type&&"JSXFragment"!==y.type&&"LogicalExpression"!==y.type&&!be(y)&&!lt(y)&&"ReturnStatement"!==y.type&&"ThrowStatement"!==y.type&&"TypeCastExpression"!==y.type&&"VariableDeclarator"!==y.type&&"YieldExpression"!==y.type;case"TSInstantiationExpression":return"object"===D&&Be(y)}return!1}var pu=K(["BlockStatement","BreakStatement","ComponentDeclaration","ClassBody","ClassDeclaration","ClassMethod","ClassProperty","PropertyDefinition","ClassPrivateProperty","ContinueStatement","DebuggerStatement","DeclareComponent","DeclareClass","DeclareExportAllDeclaration","DeclareExportDeclaration","DeclareFunction","DeclareHook","DeclareInterface","DeclareModule","DeclareModuleExports","DeclareNamespace","DeclareVariable","DeclareEnum","DoWhileStatement","EnumDeclaration","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExpressionStatement","ForInStatement","ForOfStatement","ForStatement","FunctionDeclaration","HookDeclaration","IfStatement","ImportDeclaration","InterfaceDeclaration","LabeledStatement","MethodDefinition","ReturnStatement","SwitchStatement","ThrowStatement","TryStatement","TSDeclareFunction","TSEnumDeclaration","TSImportEqualsDeclaration","TSInterfaceDeclaration","TSModuleDeclaration","TSNamespaceExportDeclaration","TypeAlias","VariableDeclaration","WhileStatement","WithStatement"]);function lu(e){let{parent:t,key:n}=e;switch(t.type){case"NGPipeExpression":if("arguments"===n&&e.isLast)return e.callParent(lu);break;case"ObjectProperty":if("value"===n)return e.callParent((()=>"properties"===e.key&&e.isLast));break;case"BinaryExpression":case"LogicalExpression":if("right"===n)return e.callParent(lu);break;case"ConditionalExpression":if("alternate"===n)return e.callParent(lu);break;case"UnaryExpression":if(t.prefix)return e.callParent(lu)}return!1}function cu(e,t){let{node:n,parent:r}=e;return"FunctionExpression"===n.type||"ClassExpression"===n.type?"ExportDefaultDeclaration"===r.type||!su(e,t):!(!ee(n)||"ExportDefaultDeclaration"!==r.type&&su(e,t))&&e.call((()=>cu(e,t)),...ne(n))}var Du=su;var yu=function(e,t){let n=t-1;return n=B(e,n,{backwards:!0}),n=P(e,n,{backwards:!0}),n=B(e,n,{backwards:!0}),n!==P(e,n,{backwards:!0})},du=()=>!0;function mu(e,t){return e.node.printed=!0,t.printer.printComment(e,t)}function fu(e,t,n={}){let{node:r}=e;if(!L(null==r?void 0:r.comments))return"";let{indent:u=!1,marker:a,filter:o=du}=n,i=[];if(e.each((({node:n})=>{n.leading||n.trailing||n.marker!==a||!o(n)||i.push(mu(e,t))}),"comments"),0===i.length)return"";let s=sn(un,i);return u?$t([un,s]):s}function Eu(e,t){let n=e.node;if(!n)return{};let r=t[Symbol.for("printedComments")];if(0===(n.comments||[]).filter((e=>!r.has(e))).length)return{leading:"",trailing:""};let u,a=[],o=[];return e.each((()=>{let n=e.node;if(null!=r&&r.has(n))return;let{leading:i,trailing:s}=n;i?a.push(function(e,t){var n;let r=e.node,u=[mu(e,t)],{printer:a,originalText:o,locStart:i,locEnd:s}=t;if(null==(n=a.isBlockComment)?void 0:n.call(a,r)){let e=w(o,s(r))?w(o,i(r),{backwards:!0})?un:nn:" ";u.push(e)}else u.push(un);let p=P(o,B(o,s(r)));return!1!==p&&w(o,p)&&u.push(un),u}(e,t)):s&&(u=function(e,t,n){var r;let u=e.node,a=mu(e,t),{printer:o,originalText:i,locStart:s}=t,p=null==(r=o.isBlockComment)?void 0:r.call(o,u);if(null!=n&&n.hasLineSuffix&&(null==n||!n.isBlock)||w(i,s(u),{backwards:!0})){let e=yu(i,s(u));return{doc:Yt([un,e?un:"",a]),isBlock:p,hasLineSuffix:!0}}return!p||null!=n&&n.hasLineSuffix?{doc:[Yt([" ",a]),en],isBlock:p,hasLineSuffix:!0}:{doc:[" ",a],isBlock:p,hasLineSuffix:!1}}(e,t,u),o.push(u.doc))}),"comments"),{leading:a,trailing:o}}function Fu(e,t,n){let{leading:r,trailing:u}=Eu(e,n);return r||u?gn(t,(e=>[r,e,u])):t}var Au=class extends Error{name="UnexpectedNodeError";constructor(e,t,n="type"){super(`Unexpected ${t} node ${n}: ${JSON.stringify(e[n])}.`),this.node=e}},gu=Au;var hu;hu=new WeakMap;var xu=class{constructor(e){((e,t,n)=>{t.has(e)?c("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n)})(this,hu),((e,t,n,r)=>{y(e,t,"write to private field"),r?r.call(e,n):t.set(e,n)})(this,hu,new Set(e))}getLeadingWhitespaceCount(e){let t=d(this,hu),n=0;for(let r=0;r<e.length&&t.has(e.charAt(r));r++)n++;return n}getTrailingWhitespaceCount(e){let t=d(this,hu),n=0;for(let r=e.length-1;r>=0&&t.has(e.charAt(r));r--)n++;return n}getLeadingWhitespace(e){let t=this.getLeadingWhitespaceCount(e);return e.slice(0,t)}getTrailingWhitespace(e){let t=this.getTrailingWhitespaceCount(e);return e.slice(e.length-t)}hasLeadingWhitespace(e){return d(this,hu).has(e.charAt(0))}hasTrailingWhitespace(e){return d(this,hu).has(A(!1,e,-1))}trimStart(e){let t=this.getLeadingWhitespaceCount(e);return e.slice(t)}trimEnd(e){let t=this.getTrailingWhitespaceCount(e);return e.slice(0,e.length-t)}trim(e){return this.trimEnd(this.trimStart(e))}split(e,t=!1){let n=`[${function(e){if("string"!=typeof e)throw new TypeError("Expected a string");return e.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}([...d(this,hu)].join(""))}]+`,r=new RegExp(t?`(${n})`:n);return e.split(r)}hasWhitespaceCharacter(e){let t=d(this,hu);return Array.prototype.some.call(e,(e=>t.has(e)))}hasNonWhitespaceCharacter(e){let t=d(this,hu);return Array.prototype.some.call(e,(e=>!t.has(e)))}isWhitespaceOnly(e){let t=d(this,hu);return Array.prototype.every.call(e,(e=>t.has(e)))}},Cu=new xu(" \n\r\t"),Tu=e=>""===e||e===nn||e===un||e===rn;function Su(e,t,n){var r,u,a;let{node:o}=e;if("JSXElement"===o.type&&function(e){if(0===e.children.length)return!0;if(e.children.length>1)return!1;let t=e.children[0];return"JSXText"===t.type&&!Nu(t)}(o))return[n("openingElement"),n("closingElement")];let i="JSXElement"===o.type?n("openingElement"):n("openingFragment"),s="JSXElement"===o.type?n("closingElement"):n("closingFragment");if(1===o.children.length&&"JSXExpressionContainer"===o.children[0].type&&("TemplateLiteral"===o.children[0].expression.type||"TaggedTemplateExpression"===o.children[0].expression.type))return[i,...e.map(n,"children"),s];o.children=o.children.map((e=>function(e){return"JSXExpressionContainer"===e.type&&pe(e.expression)&&" "===e.expression.value&&!ot(e.expression)}(e)?{type:"JSXText",value:" ",raw:" "}:e));let p=o.children.some(fe),l=o.children.filter((e=>"JSXExpressionContainer"===e.type)).length>1,c="JSXElement"===o.type&&o.openingElement.attributes.length>1,D=yn(i)||p||c||l,y="mdx"===e.parent.rootMarker,d=t.singleQuote?"{' '}":'{" "}',m=y?" ":zt([d,rn]," "),f=function(e,t,n,r,u){let a=[];return e.each((({node:e,next:t})=>{if("JSXText"===e.type){let n=qe(e);if(Nu(e)){let o,i=Cu.split(n,!0);if(""===i[0]&&(a.push(""),i.shift(),/\n/.test(i[0])?a.push(Bu(u,i[1],e,t)):a.push(r),i.shift()),""===A(!1,i,-1)&&(i.pop(),o=i.pop()),0===i.length)return;for(let[e,t]of i.entries())e%2==1?a.push(nn):a.push(t);void 0!==o?/\n/.test(o)?a.push(Bu(u,A(!1,a,-1),e,t)):a.push(r):a.push(bu(u,A(!1,a,-1),e,t))}else/\n/.test(n)?n.match(/\n/g).length>1&&a.push("",un):a.push("",r)}else{let r=n();if(a.push(r),t&&Nu(t)){let n=Cu.trim(qe(t)),[r]=Cu.split(n);a.push(bu(u,r,e,t))}else a.push(un)}}),"children"),a}(e,0,n,m,"fbt"===(null==(u=null==(r=o.openingElement)?void 0:r.name)?void 0:u.name)),E=o.children.some((e=>Nu(e)));for(let e=f.length-2;e>=0;e--){let t=""===f[e]&&""===f[e+1],n=f[e]===un&&""===f[e+1]&&f[e+2]===un,r=(f[e]===rn||f[e]===un)&&""===f[e+1]&&f[e+2]===m,u=f[e]===m&&""===f[e+1]&&(f[e+2]===rn||f[e+2]===un),a=f[e]===m&&""===f[e+1]&&f[e+2]===m,o=f[e]===rn&&""===f[e+1]&&f[e+2]===un||f[e]===un&&""===f[e+1]&&f[e+2]===rn;n&&E||t||r||a||o?f.splice(e,2):u&&f.splice(e+1,2)}for(;f.length>0&&Tu(A(!1,f,-1));)f.pop();for(;f.length>1&&Tu(f[0])&&Tu(f[1]);)f.shift(),f.shift();let F=[];for(let[e,t]of f.entries()){if(t===m){if(1===e&&""===f[e-1]){if(2===f.length){F.push(d);continue}F.push([d,un]);continue}if(e===f.length-1){F.push(d);continue}if(""===f[e-1]&&f[e-2]===un){F.push(d);continue}}F.push(t),yn(t)&&(D=!0)}let g=E?Ht(F):Ut(F,{shouldBreak:!0});if("JSXText"===(null==(a=t.cursorNode)?void 0:a.type)&&o.children.includes(t.cursorNode)&&(g=[on,g,on]),y)return g;let h=Ut([i,$t([un,g]),un,s]);return D?h:Kt([Ut([i,...f,s]),h])}function bu(e,t,n,r){return e?"":"JSXElement"===n.type&&!n.closingElement||"JSXElement"===(null==r?void 0:r.type)&&!r.closingElement?1===t.length?rn:un:rn}function Bu(e,t,n,r){return e?un:1===t.length?"JSXElement"===n.type&&!n.closingElement||"JSXElement"===(null==r?void 0:r.type)&&!r.closingElement?un:rn:un}var vu=new Set(["ArrayExpression","TupleExpression","JSXAttribute","JSXElement","JSXExpressionContainer","JSXFragment","ExpressionStatement","CallExpression","OptionalCallExpression","ConditionalExpression","JsExpressionRoot"]);function ku(e,t,n){return e.selfClosing?[nn,"/>"]:function(e,t,n){let r=e.attributes.length>0&&ot(A(!1,e.attributes,-1),ut.Trailing);return 0===e.attributes.length&&!n||(t.bracketSameLine||t.jsxBracketSameLine)&&(!n||e.attributes.length>0)&&!r}(e,t,n)?[">"]:[rn,">"]}function Pu(e,t,n){return function(e,t,n){let{parent:r}=e;if(vu.has(r.type))return t;let u=e.match(void 0,(e=>"ArrowFunctionExpression"===e.type),be,(e=>"JSXExpressionContainer"===e.type)),a=Du(e,n);return Ut([a?"":zt("("),$t([rn,t]),rn,a?"":zt(")")],{shouldBreak:u})}(e,Fu(e,Su(e,t,n),t),t)}function wu(e,t,n){let{node:r}=e;if(r.type.startsWith("JSX"))switch(r.type){case"JSXAttribute":return function(e,t,n){let{node:r}=e,u=[];if(u.push(n("name")),r.value){let a;if(pe(r.value)){let n=qe(r.value),u=F(!1,F(!1,n.slice(1,-1),"&apos;","'"),"&quot;",'"'),o=O(u,t.jsxSingleQuote);u='"'===o?F(!1,u,'"',"&quot;"):F(!1,u,"'","&apos;"),a=e.call((()=>Fu(e,Fn(o+u+o),t)),"value")}else a=n("value");u.push("=",a)}return u}(e,t,n);case"JSXIdentifier":return r.name;case"JSXNamespacedName":return sn(":",[n("namespace"),n("name")]);case"JSXMemberExpression":return sn(".",[n("object"),n("property")]);case"JSXSpreadAttribute":case"JSXSpreadChild":return function(e,t,n){let{node:r}=e;return["{",e.call((({node:r})=>{let u=["...",n()];return ot(r)&&Cr(e)?[$t([rn,Fu(e,u,t)]),rn]:u}),"JSXSpreadAttribute"===r.type?"argument":"expression"),"}"]}(e,t,n);case"JSXExpressionContainer":return function(e,t,n){let{node:r}=e,u=(e,t)=>"JSXEmptyExpression"===e.type||!ot(e)&&(ae(e)||oe(e)||"ArrowFunctionExpression"===e.type||"AwaitExpression"===e.type&&(u(e.argument,e)||"JSXElement"===e.argument.type)||be(e)||"ChainExpression"===e.type&&be(e.expression)||"FunctionExpression"===e.type||"TemplateLiteral"===e.type||"TaggedTemplateExpression"===e.type||"DoExpression"===e.type||fe(t)&&("ConditionalExpression"===e.type||Ae(e)));return u(r.expression,e.parent)?Ut(["{",n("expression"),Zt,"}"]):Ut(["{",$t([rn,n("expression")]),rn,Zt,"}"])}(e,0,n);case"JSXFragment":case"JSXElement":return Pu(e,t,n);case"JSXOpeningElement":return function(e,t,n){var r,u;let{node:a}=e,o=ot(a.name)||ot(a.typeParameters)||ot(a.typeArguments);if(a.selfClosing&&0===a.attributes.length&&!o)return["<",n("name"),a.typeArguments?n("typeArguments"):n("typeParameters")," />"];if(1===(null==(r=a.attributes)?void 0:r.length)&&pe(a.attributes[0].value)&&!a.attributes[0].value.value.includes("\n")&&!o&&!ot(a.attributes[0]))return Ut(["<",n("name"),a.typeArguments?n("typeArguments"):n("typeParameters")," ",...e.map(n,"attributes"),a.selfClosing?" />":">"]);let i=null==(u=a.attributes)?void 0:u.some((e=>pe(e.value)&&e.value.value.includes("\n"))),s=t.singleAttributePerLine&&a.attributes.length>1?un:nn;return Ut(["<",n("name"),a.typeArguments?n("typeArguments"):n("typeParameters"),$t(e.map((()=>[s,n()]),"attributes")),...ku(a,t,o)],{shouldBreak:i})}(e,t,n);case"JSXClosingElement":return function(e,t,n){let{node:r}=e,u=[];u.push("</");let a=n("name");return ot(r.name,ut.Leading|ut.Line)?u.push($t([un,a]),un):ot(r.name,ut.Leading|ut.Block)?u.push(" ",a):u.push(a),u.push(">"),u}(e,0,n);case"JSXOpeningFragment":case"JSXClosingFragment":return function(e,t){let{node:n}=e,r=ot(n),u=ot(n,ut.Line),a="JSXOpeningFragment"===n.type;return[a?"<":"</",$t([u?un:r&&!a?" ":"",fu(e,t)]),u?un:"",">"]}(e,t);case"JSXEmptyExpression":return function(e,t){let{node:n}=e,r=ot(n,ut.Line);return[fu(e,t,{indent:r}),r?un:""]}(e,t);case"JSXText":throw new Error("JSXText should be handled by JSXElement");default:throw new gu(r,"JSX")}}function Nu(e){return"JSXText"===e.type&&(Cu.hasNonWhitespaceCharacter(qe(e))||!/\n/.test(qe(e)))}var Iu=function(e){return rt(e.node)||function(e){let{node:t,parent:n}=e;if(!fe(t)||!fe(n))return!1;let r,{index:u,siblings:a}=e;for(let e=u;e>0;e--){let t=a[e-1];if("JSXText"!==t.type||Nu(t)){r=t;break}}return"JSXExpressionContainer"===(null==r?void 0:r.type)&&"JSXEmptyExpression"===r.expression.type&&rt(r.expression)}(e)},ju=0;function Lu(e,t,n){var r;let{node:u,parent:a,grandparent:o,key:i}=e,s="body"!==i&&("IfStatement"===a.type||"WhileStatement"===a.type||"SwitchStatement"===a.type||"DoWhileStatement"===a.type),p="|>"===u.operator&&(null==(r=e.root.extra)?void 0:r.__isUsingHackPipeline),l=Mu(e,n,t,!1,s);if(s)return l;if(p)return Ut(l);if(be(a)&&a.callee===u||"UnaryExpression"===a.type||Be(a)&&!a.computed)return Ut([$t([rn,...l]),rn]);let c="ReturnStatement"===a.type||"ThrowStatement"===a.type||"JSXExpressionContainer"===a.type&&"JSXAttribute"===o.type||"|"!==u.operator&&"JsExpressionRoot"===a.type||"NGPipeExpression"!==u.type&&("NGRoot"===a.type&&"__ng_binding"===t.parser||"NGMicrosyntaxExpression"===a.type&&"NGMicrosyntax"===o.type&&1===o.body.length)||u===a.body&&"ArrowFunctionExpression"===a.type||u!==a.body&&"ForStatement"===a.type||"ConditionalExpression"===a.type&&"ReturnStatement"!==o.type&&"ThrowStatement"!==o.type&&!be(o)||"TemplateLiteral"===a.type,D="AssignmentExpression"===a.type||"VariableDeclarator"===a.type||"ClassProperty"===a.type||"PropertyDefinition"===a.type||"TSAbstractPropertyDefinition"===a.type||"ClassPrivateProperty"===a.type||lt(a),y=Ae(u.left)&&Ge(u.operator,u.left.operator);if(c||Ou(u)&&!y||!Ou(u)&&D)return Ut(l);if(0===l.length)return"";let d=fe(u.right),m=l.findIndex((e=>"string"!=typeof e&&!Array.isArray(e)&&e.type===Tt)),f=l.slice(0,-1===m?1:m+1),E=l.slice(f.length,d?-1:void 0),F=Symbol("logicalChain-"+ ++ju),g=Ut([...f,$t(E)],{id:F});return d?Ut([g,Qt(A(!1,l,-1),{groupId:F})]):g}function Mu(e,t,n,r,u){var a;let{node:o}=e;if(!Ae(o))return[Ut(t())];let i=[];Ge(o.operator,o.left.operator)?i=e.call((e=>Mu(e,t,n,!0,u)),"left"):i.push(Ut(t("left")));let s,p=Ou(o),l=("|>"===o.operator||"NGPipeExpression"===o.type||function(e,t){return("__vue_expression"===t.parser||"__vue_ts_expression"===t.parser)&&Ju(e.node)&&!e.hasAncestor((e=>!Ju(e)&&"JsExpressionRoot"!==e.type))}(e,n))&&!Ne(n.originalText,o.right),c="NGPipeExpression"===o.type?"|":o.operator,D="NGPipeExpression"===o.type&&o.arguments.length>0?Ut($t([rn,": ",sn([nn,": "],e.map((()=>Wt(2,Ut(t()))),"arguments"))])):"";if(p)s=[c," ",t("right"),D];else{let r="|>"===c&&(null==(a=e.root.extra)?void 0:a.__isUsingHackPipeline)?e.call((e=>Mu(e,t,n,!0,u)),"right"):t("right");s=[l?nn:"",c,l?" ":nn,r,D]}let{parent:y}=e,d=ot(o.left,ut.Trailing|ut.Line),m=d||!(u&&"LogicalExpression"===o.type)&&y.type!==o.type&&o.left.type!==o.type&&o.right.type!==o.type;if(i.push(l?"":" ",m?Ut(s,{shouldBreak:d}):s),r&&ot(o)){let t=En(Fu(e,i,n));return t.type===St?t.parts:Array.isArray(t)?t:[t]}return i}function Ou(e){return"LogicalExpression"===e.type&&!!(oe(e.right)&&e.right.properties.length>0||ae(e.right)&&e.right.elements.length>0||fe(e.right))}var Ju=e=>"BinaryExpression"===e.type&&"|"===e.operator;function qu(e,t,n){let{node:r}=e;if(r.type.startsWith("NG"))switch(r.type){case"NGRoot":return[n("node"),ot(r.node)?" //"+it(r.node)[0].value.trimEnd():""];case"NGPipeExpression":return Lu(e,t,n);case"NGChainedExpression":return Ut(sn([";",nn],e.map((()=>function({node:e}){return Z(e,Xu)}(e)?n():["(",n(),")"]),"expressions")));case"NGEmptyExpression":return"";case"NGMicrosyntax":return e.map((()=>[e.isFirst?"":_u(e)?" ":[";",nn],n()]),"body");case"NGMicrosyntaxKey":return/^[$_a-z][\w$]*(?:-[$_a-z][\w$])*$/i.test(r.name)?r.name:JSON.stringify(r.name);case"NGMicrosyntaxExpression":return[n("expression"),null===r.alias?"":[" as ",n("alias")]];case"NGMicrosyntaxKeyedExpression":{let{index:t,parent:u}=e,a=_u(e)||(1===t&&("then"===r.key.name||"else"===r.key.name||"as"===r.key.name)||(2===t||3===t)&&("else"===r.key.name&&"NGMicrosyntaxKeyedExpression"===u.body[t-1].type&&"then"===u.body[t-1].key.name||"track"===r.key.name))&&"NGMicrosyntaxExpression"===u.body[0].type;return[n("key"),a?" ":": ",n("expression")]}case"NGMicrosyntaxLet":return["let ",n("key"),null===r.value?"":[" = ",n("value")]];case"NGMicrosyntaxAs":return[n("key")," as ",n("alias")];default:throw new gu(r,"Angular")}}function _u({node:e,index:t}){return"NGMicrosyntaxKeyedExpression"===e.type&&"of"===e.key.name&&1===t}var Xu=K(["CallExpression","OptionalCallExpression","AssignmentExpression"]);function Ru(e,t,n){let{node:r}=e;return Ut([sn(nn,e.map(n,"decorators")),Wu(r,t)?un:nn])}function $u(e,t,n){return Uu(e.node)?[sn(un,e.map(n,"declaration","decorators")),un]:""}function Wu(e,t){return e.decorators.some((e=>w(t.originalText,X(e))))}function Uu(e){var t;if("ExportDefaultDeclaration"!==e.type&&"ExportNamedDeclaration"!==e.type&&"DeclareExportDeclaration"!==e.type)return!1;let n=null==(t=e.declaration)?void 0:t.decorators;return L(n)&&R(e,n[0])}var Gu=class extends Error{name="ArgExpansionBailout"};function Vu(e,t=!1){return oe(e)&&(e.properties.length>0||ot(e))||ae(e)&&(e.elements.length>0||ot(e))||"TSTypeAssertion"===e.type&&Vu(e.expression)||ct(e)&&Vu(e.expression)||"FunctionExpression"===e.type||"ArrowFunctionExpression"===e.type&&(!e.returnType||!e.returnType.typeAnnotation||"TSTypeReference"!==e.returnType.typeAnnotation.type||function(e){return"BlockStatement"===e.type&&(e.body.some((e=>"EmptyStatement"!==e.type))||ot(e,ut.Dangling))}(e.body))&&("BlockStatement"===e.body.type||"ArrowFunctionExpression"===e.body.type&&Vu(e.body,!0)||oe(e.body)||ae(e.body)||!t&&(be(e.body)||"ConditionalExpression"===e.body.type)||fe(e.body))||"DoExpression"===e.type||"ModuleExpression"===e.type}function Ku(e){var t;if("ParenthesizedExpression"===e.type)return Ku(e.expression);if(ct(e)||"TypeCastExpression"===e.type){let{typeAnnotation:n}=e;return"TypeAnnotation"===n.type&&(n=n.typeAnnotation),"TSArrayType"===n.type&&(n=n.elementType,"TSArrayType"===n.type&&(n=n.elementType)),("GenericTypeAnnotation"===n.type||"TSTypeReference"===n.type)&&1===(null==(t=n.typeParameters)?void 0:t.params.length)&&(n=n.typeParameters.params[0]),xe(n)&&Je(e.expression,1)}return!(pt(e)&&Ze(e).length>1)&&(Ae(e)?Je(e.left,1)&&Je(e.right,1):le(e)||Je(e))}function Hu(e,t){let n=e[t],r=e[t+1];return"ArrowFunctionExpression"===n.type&&0===Qe(n).length&&"BlockStatement"===n.body.type&&"ArrayExpression"===r.type&&!e.some((e=>ot(e)))}var zu=function(e,t,n){let{node:r}=e,u=Ze(r);if(0===u.length)return["(",fu(e,t),")"];let a=u.length-1;if(function(e){return 2===e.length?Hu(e,0):3===e.length&&("Identifier"===e[0].type&&Hu(e,1))}(u)){let t=["("];return et(e,((e,r)=>{t.push(n()),r!==a&&t.push(", ")})),t.push(")"),t}let o=!1,i=[];et(e,(({node:e},r)=>{let u=n();r===a||(st(e,t)?(o=!0,u=[u,",",un,un]):u=[u,",",nn]),i.push(u)}));let s="ImportExpression"===r.type||"Import"===r.callee.type,p=t.parser.startsWith("__ng_")||s||!Xe(t,"all")?"":",";function l(){return Ut(["(",$t([nn,...i]),p,nn,")"],{shouldBreak:!0})}if(o||"Decorator"!==e.parent.type&&function(e){if(e.length<=1)return!1;let t=0;for(let n of e)if(de(n)){if(t+=1,t>1)return!0}else if(be(n))for(let e of Ze(n))if(de(e))return!0;return!1}(u))return l();if(function(e){if(2!==e.length)return!1;let[t,n]=e;return!("ModuleExpression"!==t.type||!function(e){return"ObjectExpression"===e.type&&1===e.properties.length&&lt(e.properties[0])&&"Identifier"===e.properties[0].key.type&&"type"===e.properties[0].key.name&&pe(e.properties[0].value)&&"module"===e.properties[0].value.value}(n))||!ot(t)&&("FunctionExpression"===t.type||"ArrowFunctionExpression"===t.type&&"BlockStatement"===t.body.type)&&"FunctionExpression"!==n.type&&"ArrowFunctionExpression"!==n.type&&"ConditionalExpression"!==n.type&&Ku(n)&&!Vu(n)}(u)){let e,t=i.slice(1);if(t.some(yn))return l();try{e=n(tt(r,0),{expandFirstArg:!0})}catch(e){if(e instanceof Gu)return l();throw e}return yn(e)?[en,Kt([["(",Ut(e,{shouldBreak:!0}),", ",...t,")"],l()])]:Kt([["(",e,", ",...t,")"],["(",Ut(e,{shouldBreak:!0}),", ",...t,")"],l()])}if(function(e,t,n){var r,u;let a=A(!1,e,-1);if(1===e.length){let e=A(!1,t,-1);if(null!=(r=e.label)&&r.embed&&!1!==(null==(u=e.label)?void 0:u.hug))return!0}let o=A(!1,e,-2);return!ot(a,ut.Leading)&&!ot(a,ut.Trailing)&&Vu(a)&&(!o||o.type!==a.type)&&(2!==e.length||"ArrowFunctionExpression"!==o.type||!ae(a))&&!(e.length>1&&Wa(a,n))}(u,i,t)){let e,t=i.slice(0,-1);if(t.some(yn))return l();try{e=n(tt(r,-1),{expandLastArg:!0})}catch(e){if(e instanceof Gu)return l();throw e}return yn(e)?[en,Kt([["(",...t,Ut(e,{shouldBreak:!0}),")"],l()])]:Kt([["(",...t,e,")"],["(",...t,Ut(e,{shouldBreak:!0}),")"],l()])}let c=["(",$t([rn,...i]),zt(p),rn,")"];return Me(e)?c:Ut(c,{shouldBreak:i.some(yn)||o})},Qu=e=>(("ChainExpression"===e.type||"TSNonNullExpression"===e.type)&&(e=e.expression),be(e)&&Ze(e).length>0);function Yu(e,t,n){let r=n("property"),{node:u}=e,a=Na(e);return u.computed?!u.property||ie(u.property)?[a,"[",r,"]"]:Ut([a,"[",$t([rn,r]),rn,"]"]):[a,".",r]}var Zu=function e(t,n,r){if("ChainExpression"===t.node.type)return t.call((()=>e(t,n,r)),"expression");let{parent:u}=t,a=!u||"ExpressionStatement"===u.type,o=[];function i(e){let{originalText:t}=n,r=vn(t,X(e));return")"===t.charAt(r)?!1!==r&&j(t,r+1):st(e,n)}function s(e){let{node:t}=e;if("ChainExpression"===t.type)return e.call((()=>s(e)),"expression");if(be(t)&&(ge(t.callee)||be(t.callee))){let u=i(t);o.unshift({node:t,hasTrailingEmptyLine:u,printed:[Fu(e,[Na(e),Ja(e,n,r),zu(e,n,r)],n),u?un:""]}),e.call((e=>s(e)),"callee")}else ge(t)?(o.unshift({node:t,needsParens:Du(e,n),printed:Fu(e,Be(t)?Yu(e,0,r):qa(e,n,r),n)}),e.call((e=>s(e)),"object")):"TSNonNullExpression"===t.type?(o.unshift({node:t,printed:Fu(e,"!",n)}),e.call((e=>s(e)),"expression")):o.unshift({node:t,printed:r()})}let{node:p}=t;o.unshift({node:p,printed:[Na(t),Ja(t,n,r),zu(t,n,r)]}),p.callee&&t.call((e=>s(e)),"callee");let l=[],c=[o[0]],D=1;for(;D<o.length&&("TSNonNullExpression"===o[D].node.type||be(o[D].node)||Be(o[D].node)&&o[D].node.computed&&ie(o[D].node.property));++D)c.push(o[D]);if(!be(o[0].node))for(;D+1<o.length&&ge(o[D].node)&&ge(o[D+1].node);++D)c.push(o[D]);l.push(c),c=[];let y=!1;for(;D<o.length;++D){if(y&&ge(o[D].node)){if(o[D].node.computed&&ie(o[D].node.property)){c.push(o[D]);continue}l.push(c),c=[],y=!1}(be(o[D].node)||"ImportExpression"===o[D].node.type)&&(y=!0),c.push(o[D]),ot(o[D].node,ut.Trailing)&&(l.push(c),c=[],y=!1)}function d(e){return/^[A-Z]|^[$_]+$/.test(e)}c.length>0&&l.push(c);let m=l.length>=2&&!ot(l[1][0].node)&&function(e){var t;let r=null==(t=e[1][0])?void 0:t.node.computed;if(1===e[0].length){let t=e[0][0].node;return"ThisExpression"===t.type||"Identifier"===t.type&&(d(t.name)||a&&function(e){return e.length<=n.tabWidth}(t.name)||r)}let u=A(!1,e[0],-1).node;return Be(u)&&"Identifier"===u.property.type&&(d(u.property.name)||r)}(l);function f(e){let t=e.map((e=>e.printed));return e.length>0&&A(!1,e,-1).needsParens?["(",...t,")"]:t}let E=l.map(f),F=E,g=m?3:2,h=l.flat(),x=h.slice(1,-1).some((e=>ot(e.node,ut.Leading)))||h.slice(0,-1).some((e=>ot(e.node,ut.Trailing)))||l[g]&&ot(l[g][0].node,ut.Leading);if(l.length<=g&&!x&&!l.some((e=>A(!1,e,-1).hasTrailingEmptyLine)))return Me(t)?F:Ut(F);let C=A(!1,l[m?1:0],-1).node,T=!be(C)&&i(C),S=[f(l[0]),m?l.slice(1,2).map(f):"",T?un:"",(B=l.slice(m?2:1),0===B.length?"":$t([un,sn(un,B.map(f))]))],b=o.map((({node:e})=>e)).filter(be);var B;let v;return v=x||b.length>2&&b.some((e=>!e.arguments.every((e=>Je(e)))))||E.slice(0,-1).some(yn)||function(){let e=A(!1,A(!1,l,-1),-1).node,t=A(!1,E,-1);return be(e)&&yn(t)&&b.slice(0,-1).some((e=>e.arguments.some(de)))}()?Ut(S):[yn(F)||T?en:"",Kt([F,S])],pn({memberChain:!0},v)};function ea(e,t,n){var r;let{node:u,parent:a}=e,o="NewExpression"===u.type,i="ImportExpression"===u.type,s=Na(e),p=Ze(u),l=1===p.length&&je(p[0],t.originalText);if(l||p.length>0&&!o&&!i&&(function(e,t){if("Identifier"!==e.callee.type)return!1;if("require"===e.callee.name){let t=Ze(e);return 1===t.length&&pe(t[0])||t.length>1}if("define"===e.callee.name){let n=Ze(e);return"ExpressionStatement"===t.type&&(1===n.length||2===n.length&&"ArrayExpression"===n[0].type||3===n.length&&pe(n[0])&&"ArrayExpression"===n[1].type)}return!1}(u,a)||Te(u,a))){let a=[];if(et(e,(()=>{a.push(n())})),!l||null==(r=a[0].label)||!r.embed)return[o?"new ":"",i?ta(u):n("callee"),s,Ja(e,t,n),"(",sn(", ",a),")"]}if(!i&&!o&&ge(u.callee)&&!e.call((e=>Du(e,t)),"callee",..."ChainExpression"===u.callee.type?["expression"]:[]))return Zu(e,t,n);let c=[o?"new ":"",i?ta(u):n("callee"),s,Ja(e,t,n),zu(e,t,n)];return i||be(u.callee)?Ut(c):c}function ta(e){return e.phase?`import.${e.phase}`:"import"}function na(e,t,n,r,u,a){let o=function(e,t,n,r,u){let{node:a}=e,o=a[u];if(!o)return"only-left";let i=!ra(o);if(e.match(ra,ua,(e=>!i||"ExpressionStatement"!==e.type&&"VariableDeclaration"!==e.type)))return i?"ArrowFunctionExpression"===o.type&&"ArrowFunctionExpression"===o.body.type?"chain-tail-arrow-chain":"chain-tail":"chain";if(!i&&ra(o.right)||Ne(t.originalText,o))return"break-after-operator";if("ImportAttribute"===a.type||"CallExpression"===o.type&&"require"===o.callee.name||"json5"===t.parser||"jsonc"===t.parser||"json"===t.parser)return"never-break-after-operator";let s=function(e){return cn(e,An,!1)}(r);if(function(e){if(ua(e)){let t=e.left||e.id;return"ObjectPattern"===t.type&&t.properties.length>2&&t.properties.some((e=>{var t;return lt(e)&&(!e.shorthand||"AssignmentPattern"===(null==(t=e.value)?void 0:t.type))}))}return!1}(a)||function(e){if("VariableDeclarator"!==e.type)return!1;let{typeAnnotation:t}=e.id;if(!t||!t.typeAnnotation)return!1;let n=sa(t.typeAnnotation);return L(n)&&n.length>1&&n.some((e=>L(sa(e))||"TSConditionalType"===e.type))}(a)||oa(a)&&s)return"break-lhs";let p=function(e,t,n){return!!lt(e)&&(t=En(t),"string"==typeof t&&S(t)<n.tabWidth+3)}(a,r,t);return e.call((()=>function(e,t,n,r){let u=e.node;if(Ae(u)&&!Ou(u))return!0;switch(u.type){case"StringLiteralTypeAnnotation":case"SequenceExpression":return!0;case"TSConditionalType":case"ConditionalTypeAnnotation":if(!t.experimentalTernaries&&!function(e){function t(e){switch(e.type){case"FunctionTypeAnnotation":case"GenericTypeAnnotation":case"TSFunctionType":case"TSTypeReference":return!!e.typeParameters;default:return!1}}return t(e.checkType)||t(e.extendsType)}(u))break;return!0;case"ConditionalExpression":{if(!t.experimentalTernaries){let{test:e}=u;return Ae(e)&&!Ou(e)}let{consequent:e,alternate:n}=u;return"ConditionalExpression"===e.type||"ConditionalExpression"===n.type}case"ClassExpression":return L(u.decorators)}if(r)return!1;let a=u,o=[];for(;;)if("UnaryExpression"===a.type||"AwaitExpression"===a.type||"YieldExpression"===a.type&&null!==a.argument)a=a.argument,o.push("argument");else{if("TSNonNullExpression"!==a.type)break;a=a.expression,o.push("expression")}return!(!pe(a)&&!e.call((()=>pa(e,t,n)),...o))}(e,t,n,p)),u)?"break-after-operator":function(e){let t=function(e){var t;if(aa(e))return null==(t=e.typeParameters)?void 0:t.params}(e);if(L(t)){let n="TSTypeAliasDeclaration"===e.type?"constraint":"bound";if(t.length>1&&t.some((e=>e[n]||e.default)))return!0}return!1}(a)?"break-lhs":s||!p&&"TemplateLiteral"!==o.type&&"TaggedTemplateExpression"!==o.type&&"BooleanLiteral"!==o.type&&!ie(o)&&"ClassExpression"!==o.type?"fluid":"never-break-after-operator"}(e,t,n,r,a),i=a?n(a,{assignmentLayout:o}):"";switch(o){case"break-after-operator":return Ut([Ut(r),u,Ut($t([nn,i]))]);case"never-break-after-operator":return Ut([Ut(r),u," ",i]);case"fluid":{let e=Symbol("assignment");return Ut([Ut(r),u,Ut($t(nn),{id:e}),Zt,Qt(i,{groupId:e})])}case"break-lhs":return Ut([r,u," ",Ut(i)]);case"chain":return[Ut(r),u,nn,i];case"chain-tail":return[Ut(r),u,$t([nn,i])];case"chain-tail-arrow-chain":return[Ut(r),u,i];case"only-left":return r}}function ra(e){return"AssignmentExpression"===e.type}function ua(e){return ra(e)||"VariableDeclarator"===e.type}var aa=K(["TSTypeAliasDeclaration","TypeAlias"]);function oa(e){var t;return"VariableDeclarator"===e.type&&"ArrowFunctionExpression"===(null==(t=e.init)?void 0:t.type)}var ia=K(["TSTypeReference","GenericTypeAnnotation"]);function sa(e){var t;if(ia(e))return null==(t=e.typeParameters)?void 0:t.params}function pa(e,t,n,r=!1){var u;let{node:a}=e,o=()=>pa(e,t,n,!0);if("ChainExpression"===a.type||"TSNonNullExpression"===a.type)return e.call(o,"expression");if(be(a)){if(null!=(u=ea(e,t,n).label)&&u.memberChain)return!1;let r=Ze(a);return!(!(0===r.length||1===r.length&&we(r[0],t))||function(e,t){let n=function(e){var t;return null==(t=e.typeParameters??e.typeArguments)?void 0:t.params}(e);if(L(n)){if(n.length>1)return!0;if(1===n.length){let e=n[0];if(Dt(e)||yt(e)||"TSTypeLiteral"===e.type||"ObjectTypeAnnotation"===e.type)return!0}if(yn(t(e.typeParameters?"typeParameters":"typeArguments")))return!0}return!1}(a,n))&&e.call(o,"callee")}return Be(a)?e.call(o,"object"):r&&("Identifier"===a.type||"ThisExpression"===a.type)}function la(e,t,n,r,u){let a=e.node,o=Qe(a),i=u?Ja(e,n,t):"";if(0===o.length)return[i,"(",fu(e,n,{filter:e=>")"===kn(n.originalText,X(e))}),")"];let{parent:s}=e,p=Te(s),l=ca(a),c=[];if(function(e,t){let{node:n}=e,r=0,u=e=>t(e,r++);n.this&&e.call(u,"this"),Array.isArray(n.parameters)?e.each(u,"parameters"):Array.isArray(n.params)&&e.each(u,"params"),n.rest&&e.call(u,"rest")}(e,((e,r)=>{let u=r===o.length-1;u&&a.rest&&c.push("..."),c.push(t()),!u&&(c.push(","),p||l?c.push(" "):st(o[r],n)?c.push(un,un):c.push(nn))})),r&&!function(e){return e.match((e=>"ArrowFunctionExpression"===e.type&&"BlockStatement"===e.body.type),((e,t)=>{if("CallExpression"===e.type&&"arguments"===t&&1===e.arguments.length&&"CallExpression"===e.callee.type){let t=e.callee.callee;return"Identifier"===t.type||"MemberExpression"===t.type&&!t.computed&&"Identifier"===t.object.type&&"Identifier"===t.property.type}return!1}),((e,t)=>"VariableDeclarator"===e.type&&"init"===t||"ExportDefaultDeclaration"===e.type&&"declaration"===t||"TSExportAssignment"===e.type&&"expression"===t||"AssignmentExpression"===e.type&&"right"===t&&"MemberExpression"===e.left.type&&"Identifier"===e.left.object.type&&"module"===e.left.object.name&&"Identifier"===e.left.property.type&&"exports"===e.left.property.name),(e=>"VariableDeclaration"!==e.type||"const"===e.kind&&1===e.declarations.length))}(e)){if(yn(i)||yn(c))throw new Gu;return Ut([fn(i),"(",fn(c),")"])}let D=o.every((e=>!L(e.decorators)));return l&&D||p?[i,"(",...c,")"]:(Fe(s)||function(e){return!("TypeAnnotation"!==e.type&&"TSTypeAnnotation"!==e.type||"FunctionTypeAnnotation"!==e.typeAnnotation.type||e.static||R(e,e.typeAnnotation))}(s)||"TypeAlias"===s.type||"UnionTypeAnnotation"===s.type||"IntersectionTypeAnnotation"===s.type||"FunctionTypeAnnotation"===s.type&&s.returnType===a)&&1===o.length&&null===o[0].name&&a.this!==o[0]&&o[0].typeAnnotation&&null===a.typeParameters&&xe(o[0].typeAnnotation)&&!a.rest?"always"===n.arrowParens||"HookTypeAnnotation"===a.type?["(",...c,")"]:c:[i,"(",$t([rn,...c]),zt(!He(a)&&Xe(n,"all")?",":""),rn,")"]}function ca(e){if(!e)return!1;let t=Qe(e);if(1!==t.length)return!1;let[n]=t;return!ot(n)&&("ObjectPattern"===n.type||"ArrayPattern"===n.type||"Identifier"===n.type&&n.typeAnnotation&&("TypeAnnotation"===n.typeAnnotation.type||"TSTypeAnnotation"===n.typeAnnotation.type)&&ye(n.typeAnnotation.typeAnnotation)||"FunctionTypeParam"===n.type&&ye(n.typeAnnotation)&&n!==e.rest||"AssignmentPattern"===n.type&&("ObjectPattern"===n.left.type||"ArrayPattern"===n.left.type)&&("Identifier"===n.right.type||oe(n.right)&&0===n.right.properties.length||ae(n.right)&&0===n.right.elements.length))}function Da(e,t){var n;let r=function(e){let t;return e.returnType?(t=e.returnType,t.typeAnnotation&&(t=t.typeAnnotation)):e.typeAnnotation&&(t=e.typeAnnotation),t}(e);if(!r)return!1;let u=null==(n=e.typeParameters)?void 0:n.params;if(u){if(u.length>1)return!1;if(1===u.length){let e=u[0];if(e.constraint||e.default)return!1}}return 1===Qe(e).length&&(ye(r)||yn(t))}var ya=K(["VoidTypeAnnotation","TSVoidKeyword","NullLiteralTypeAnnotation","TSNullKeyword"]),da=K(["ObjectTypeAnnotation","TSTypeLiteral","GenericTypeAnnotation","TSTypeReference"]);function ma(e){return!(!xe(e)&&!ye(e))||!!Dt(e)&&function(e){let{types:t}=e;if(t.some((e=>ot(e))))return!1;let n=t.find((e=>da(e)));return!!n&&t.every((e=>e===n||ya(e)))}(e)}function fa(e,t,n){let r=t.semi?";":"",{node:u}=e,a=[La(e)];return a.push("type ",n("id"),n("typeParameters")),[na(e,t,n,a," =","TSTypeAliasDeclaration"===u.type?"typeAnnotation":"right"),r]}function Ea(e,t,n){let r=!1;return Ut(e.map((({isFirst:e,previous:t,node:u,index:a})=>{let o=n();if(e)return o;let i=ye(u),s=ye(t);return s&&i?[" & ",r?$t(o):o]:s||i?(a>1&&(r=!0),[" & ",a>1?$t(o):o]):$t([" &",nn,o])}),"types"))}function Fa(e,t,n){let{node:r}=e,{parent:u}=e,a=!("TypeParameterInstantiation"===u.type||"TSConditionalType"===u.type&&t.experimentalTernaries||"ConditionalTypeAnnotation"===u.type&&t.experimentalTernaries||"TSTypeParameterInstantiation"===u.type||"GenericTypeAnnotation"===u.type||"TSTypeReference"===u.type||"TSTypeAssertion"===u.type||"TupleTypeAnnotation"===u.type||"TSTupleType"===u.type||"FunctionTypeParam"===u.type&&!u.name&&e.grandparent.this!==u||("TypeAlias"===u.type||"VariableDeclarator"===u.type||"TSTypeAliasDeclaration"===u.type)&&Ne(t.originalText,r)),o=ma(r),i=e.map((e=>{let r=n();return o||(r=Wt(2,r)),Fu(e,r,t)}),"types");if(o)return sn(" | ",i);let s=[zt([a&&!Ne(t.originalText,r)?nn:"","| "]),sn([nn,"| "],i)];return Du(e,t)?Ut([$t(s),rn]):("TupleTypeAnnotation"===u.type||"TSTupleType"===u.type)&&u["TupleTypeAnnotation"===u.type&&u.types?"types":"elementTypes"].length>1?Ut([$t([zt(["(",rn]),s]),rn,zt(")")]):Ut(a?$t(s):s)}function Aa(e,t,n){let{node:r}=e,u=[Oa(e)];("TSConstructorType"===r.type||"TSConstructSignatureDeclaration"===r.type)&&u.push("new ");let a=la(e,n,t,!1,!0),o=[];return"FunctionTypeAnnotation"===r.type?o.push(function(e){var t;let{node:n,parent:r}=e;return"FunctionTypeAnnotation"===n.type&&(Fe(r)||!(("ObjectTypeProperty"===r.type||"ObjectTypeInternalSlot"===r.type)&&!r.variance&&!r.optional&&R(r,n)||"ObjectTypeCallProperty"===r.type||"DeclareFunction"===(null==(t=e.getParentNode(2))?void 0:t.type)))}(e)?" => ":": ",n("returnType")):o.push(ba(e,n,r.returnType?"returnType":"typeAnnotation")),Da(r,o)&&(a=Ut(a)),u.push(a,o),Ut(u)}function ga(e,t,n){return[n("objectType"),Na(e),"[",n("indexType"),"]"]}function ha(e,t,n){return["infer ",n("typeParameter")]}function xa(e,t,n){let{node:r}=e;return[r.postfix?"":n,ba(e,t),r.postfix?n:""]}function Ca(e,t,n){let{node:r}=e;return["...",..."TupleTypeSpreadElement"===r.type&&r.label?[n("label"),": "]:[],n("typeAnnotation")]}function Ta(e,t,n){let{node:r}=e;return[r.variance?n("variance"):"",n("label"),r.optional?"?":"",": ",n("elementType")]}var Sa=new WeakSet;function ba(e,t,n="typeAnnotation"){let{node:{[n]:r}}=e;if(!r)return"";let u=!1;if("TSTypeAnnotation"===r.type||"TypeAnnotation"===r.type){let t=e.call(Ba,n);("=>"===t||":"===t&&ot(r,ut.Leading))&&(u=!0),Sa.add(r)}return u?[" ",t(n)]:t(n)}var Ba=e=>e.match((e=>"TSTypeAnnotation"===e.type),((e,t)=>!("returnType"!==t&&"typeAnnotation"!==t||"TSFunctionType"!==e.type&&"TSConstructorType"!==e.type)))?"=>":e.match((e=>"TSTypeAnnotation"===e.type),((e,t)=>"typeAnnotation"===t&&("TSJSDocNullableType"===e.type||"TSJSDocNonNullableType"===e.type||"TSTypePredicate"===e.type)))||e.match((e=>"TypeAnnotation"===e.type),((e,t)=>"typeAnnotation"===t&&"Identifier"===e.type),((e,t)=>"id"===t&&"DeclareFunction"===e.type))||e.match((e=>"TypeAnnotation"===e.type),((e,t)=>"typeAnnotation"===t&&"Identifier"===e.type),((e,t)=>"id"===t&&"DeclareHook"===e.type))||e.match((e=>"TypeAnnotation"===e.type),((e,t)=>"bound"===t&&"TypeParameter"===e.type&&e.usesExtendsBound))?"":":";function va(e,t,n){let r=Ba(e);return r?[r," ",n("typeAnnotation")]:n("typeAnnotation")}function ka(e){return[e("elementType"),"[]"]}function Pa({node:e},t){let n="TSTypeQuery"===e.type?"exprName":"argument",r="TSTypeQuery"===e.type?"typeParameters":"typeArguments";return["typeof ",t(n),t(r)]}function wa(e,t){let{node:n}=e;return["TSTypePredicate"===n.type&&n.asserts?"asserts ":"TypePredicate"===n.type&&n.kind?`${n.kind} `:"",t("parameterName"),n.typeAnnotation?[" is ",ba(e,t)]:""]}function Na(e){let{node:t}=e;return!t.optional||"Identifier"===t.type&&t===e.parent.key?"":be(t)||Be(t)&&t.computed||"OptionalIndexedAccessType"===t.type?"?.":"?"}function Ia(e){return e.node.definite||e.match(void 0,((e,t)=>"id"===t&&"VariableDeclarator"===e.type&&e.definite))?"!":""}var ja=new Set(["DeclareClass","DeclareComponent","DeclareFunction","DeclareHook","DeclareVariable","DeclareExportDeclaration","DeclareExportAllDeclaration","DeclareOpaqueType","DeclareTypeAlias","DeclareEnum","DeclareInterface"]);function La(e){let{node:t}=e;return t.declare||ja.has(t.type)&&"DeclareExportDeclaration"!==e.parent.type?"declare ":""}var Ma=new Set(["TSAbstractMethodDefinition","TSAbstractPropertyDefinition","TSAbstractAccessorProperty"]);function Oa({node:e}){return e.abstract||Ma.has(e.type)?"abstract ":""}function Ja(e,t,n){let r=e.node;return r.typeArguments?n("typeArguments"):r.typeParameters?n("typeParameters"):""}function qa(e,t,n){return["::",n("callee")]}function _a(e,t,n){return"EmptyStatement"===e.type?";":"BlockStatement"===e.type||n?[" ",t]:$t([nn,t])}function Xa(e,t){return["...",t("argument"),ba(e,t)]}function Ra(e){return e.accessibility?e.accessibility+" ":""}function $a(e,t,n){let{node:r}=e,u=[],a="TupleExpression"===r.type?"#[":"[",o="TupleTypeAnnotation"===r.type&&r.types?"types":"TSTupleType"===r.type||"TupleTypeAnnotation"===r.type?"elementTypes":"elements",i=r[o];if(0===i.length)u.push(function(e,t,n,r){let{node:u}=e,a=u.inexact?"...":"";return ot(u,ut.Dangling)?Ut([n,a,fu(e,t,{indent:!0}),rn,r]):[n,a,r]}(e,t,a,"]"));else{let s=A(!1,i,-1),p="RestElement"!==(null==s?void 0:s.type)&&!r.inexact,l=null===s,c=Symbol("array"),D=!t.__inJestEach&&i.length>1&&i.every(((e,t,n)=>{let r=null==e?void 0:e.type;if(!ae(e)&&!oe(e))return!1;let u=n[t+1];if(u&&r!==u.type)return!1;let a=ae(e)?"elements":"properties";return e[a]&&e[a].length>1})),y=Wa(r,t),d=p?l?",":Xe(t)?y?zt(",","",{groupId:c}):zt(","):"":"";u.push(Ut([a,$t([rn,y?Va(e,t,n,d):[Ga(e,t,o,r.inexact,n),d],fu(e,t)]),rn,"]"],{shouldBreak:D,id:c}))}return u.push(Na(e),ba(e,n)),u}function Wa(e,t){return ae(e)&&e.elements.length>1&&e.elements.every((e=>e&&(ie(e)||se(e)&&!ot(e.argument))&&!ot(e,ut.Trailing|ut.Line,(e=>!w(t.originalText,_(e),{backwards:!0})))))}function Ua({node:e},{originalText:t}){let n=e=>","===t[e]?e:n((e=>N(t,I(t,e)))(e+1));return j(t,n(X(e)))}function Ga(e,t,n,r,u){let a=[];return e.each((({node:n,isLast:o})=>{a.push(n?Ut(u()):""),(!o||r)&&a.push([",",nn,n&&Ua(e,t)?rn:""])}),n),r&&a.push("..."),a}function Va(e,t,n,r){let u=[];return e.each((({isLast:a,next:o})=>{u.push([n(),a?r:","]),a||u.push(Ua(e,t)?[un,un]:ot(o,ut.Leading|ut.Line)?un:nn)}),"elements"),Ht(u)}var Ka=new Proxy((()=>{}),{get:()=>Ka}),Ha=Ka,za=/^[\$A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC][\$0-9A-Z_a-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]*$/,Qa=e=>za.test(e);var Ya=function(e){return 1===e.length?e:e.toLowerCase().replace(/^([+-]?[\d.]+e)(?:\+|(-))?0*(?=\d)/,"$1$2").replace(/^([+-]?[\d.]+)e[+-]?0+$/,"$1").replace(/^([+-])?\./,"$10.").replace(/(\.\d+?)0+(?=e|$)/,"$1").replace(/\.(?=e|$)/,"")},Za=new WeakMap;function eo(e){return/^(?:\d+|\d+\.\d+)$/.test(e)}function to(e,t){return!("json"===t.parser||"jsonc"===t.parser||!pe(e.key)||q(qe(e.key),t).slice(1,-1)!==e.key.value)&&!!(Qa(e.key.value)&&!("babel-ts"===t.parser&&"ClassProperty"===e.type||"typescript"===t.parser&&"PropertyDefinition"===e.type)||eo(e.key.value)&&String(Number(e.key.value))===e.key.value&&"ImportAttribute"!==e.type&&("babel"===t.parser||"acorn"===t.parser||"espree"===t.parser||"meriyah"===t.parser||"__babel_estree"===t.parser))}function no(e,t,n){let{node:r}=e;if(r.computed)return["[",n("key"),"]"];let{parent:u}=e,{key:a}=r;if("consistent"===t.quoteProps&&!Za.has(u)){let n=e.siblings.some((e=>!e.computed&&pe(e.key)&&!to(e,t)));Za.set(u,n)}if(function(e,t){let{key:n}=e.node;return("Identifier"===n.type||ie(n)&&eo(Ya(qe(n)))&&String(n.value)===Ya(qe(n))&&!("typescript"===t.parser||"babel-ts"===t.parser))&&("json"===t.parser||"jsonc"===t.parser||"consistent"===t.quoteProps&&Za.get(e.parent))}(e,t)){let n=q(JSON.stringify("Identifier"===a.type?a.name:a.value.toString()),t);return e.call((e=>Fu(e,n,t)),"key")}return to(r,t)&&("as-needed"===t.quoteProps||"consistent"===t.quoteProps&&!Za.get(u))?e.call((e=>Fu(e,/^\d/.test(a.value)?Ya(a.value):a.value,t)),"key"):n("key")}function ro(e,t,n){let{node:r}=e;return r.shorthand?n("value"):na(e,t,n,no(e,t,n),":","value")}var uo=({node:e,key:t,parent:n})=>"value"===t&&"FunctionExpression"===e.type&&("ObjectMethod"===n.type||"ClassMethod"===n.type||"ClassPrivateMethod"===n.type||"MethodDefinition"===n.type||"TSAbstractMethodDefinition"===n.type||"TSDeclareMethod"===n.type||"Property"===n.type&&Ee(n));function ao(e,t,n,r){if(uo(e))return io(e,n,t);let{node:u}=e,a=!1;if(("FunctionDeclaration"===u.type||"FunctionExpression"===u.type)&&null!=r&&r.expandLastArg){let{parent:t}=e;be(t)&&(Ze(t).length>1||Qe(u).every((e=>"Identifier"===e.type&&!e.typeAnnotation)))&&(a=!0)}let o=[La(e),u.async?"async ":"",`function${u.generator?"*":""} `,u.id?t("id"):""],i=la(e,t,n,a),s=po(e,t),p=Da(u,s);return o.push(Ja(e,0,t),Ut([p?Ut(i):i,s]),u.body?" ":"",t("body")),n.semi&&(u.declare||!u.body)&&o.push(";"),o}function oo(e,t,n){let{node:r}=e,{kind:u}=r,a=r.value||r,o=[];return u&&"init"!==u&&"method"!==u&&"constructor"!==u?(Ha.ok("get"===u||"set"===u),o.push(u," ")):a.async&&o.push("async "),a.generator&&o.push("*"),o.push(no(e,t,n),r.optional||r.key.optional?"?":"",r===a?io(e,t,n):n("value")),o}function io(e,t,n){let{node:r}=e,u=la(e,n,t),a=po(e,n),o=function(e){let t=Qe(e);return t.length>1&&t.some((e=>"TSParameterProperty"===e.type))}(r),i=Da(r,a),s=[Ja(e,0,n),Ut([o?Ut(u,{shouldBreak:!0}):i?Ut(u):u,a])];return r.body?s.push(" ",n("body")):s.push(t.semi?";":""),s}function so(e,t){if("always"===t.arrowParens)return!1;if("avoid"===t.arrowParens){let{node:t}=e;return function(e){let t=Qe(e);return!(1!==t.length||e.typeParameters||ot(e,ut.Dangling)||"Identifier"!==t[0].type||t[0].typeAnnotation||ot(t[0])||t[0].optional||e.predicate||e.returnType)}(t)}return!1}function po(e,t){let{node:n}=e,r=[ba(e,t,"returnType")];return n.predicate&&r.push(t("predicate")),r}function lo(e,t,n){let{node:r}=e,u=t.semi?";":"",a=[];if(r.argument){let e=n("argument");!function(e,t){if(Ne(e.originalText,t)||ot(t,ut.Leading,(t=>Pn(e.originalText,_(t),X(t))))&&!fe(t))return!0;if(ee(t)){let n,r=t;for(;n=te(r);)if(r=n,Ne(e.originalText,r))return!0}return!1}(t,r.argument)?(Ae(r.argument)||"SequenceExpression"===r.argument.type||t.experimentalTernaries&&"ConditionalExpression"===r.argument.type&&("ConditionalExpression"===r.argument.consequent.type||"ConditionalExpression"===r.argument.alternate.type))&&(e=Ut([zt("("),$t([rn,e]),rn,zt(")")])):e=["(",$t([un,e]),un,")"],a.push(" ",e)}let o=ot(r,ut.Dangling),i=u&&o&&ot(r,ut.Last|ut.Line);return i&&a.push(u),o&&a.push(" ",fu(e,t)),i||a.push(u),a}var co=new WeakMap;function Do(e){return co.has(e)||co.set(e,"ConditionalExpression"===e.type&&!Re(e,(e=>"ObjectExpression"===e.type))),co.get(e)}var yo=e=>"SequenceExpression"===e.type;function mo(e,t,n,r={}){let u,a,o=[],i=[],s=!1,p=!r.expandLastArg&&"ArrowFunctionExpression"===e.node.body.type;!function l(){let{node:c}=e,D=function(e,t,n,r){let{node:u}=e,a=[];if(u.async&&a.push("async "),so(e,t))a.push(n(["params",0]));else{let u=r.expandLastArg||r.expandFirstArg,o=po(e,n);if(u){if(yn(o))throw new Gu;o=Ut(fn(o))}a.push(Ut([la(e,n,t,u,!0),o]))}let o=fu(e,t,{filter(e){let n=vn(t.originalText,X(e));return!1!==n&&"=>"===t.originalText.slice(n,n+2)}});return o&&a.push(" ",o),a}(e,t,n,r);if(0===o.length)o.push(D);else{let{leading:n,trailing:r}=Eu(e,t);o.push([n,D]),i.unshift(r)}p&&(s||(s=c.returnType&&Qe(c).length>0||c.typeParameters||Qe(c).some((e=>"Identifier"!==e.type)))),p&&"ArrowFunctionExpression"===c.body.type?e.call(l,"body"):(u=n("body",r),a=c.body)}();let l,c=!Ne(t.originalText,a)&&(yo(a)||function(e,t,n){var r,u;return ae(e)||oe(e)||"ArrowFunctionExpression"===e.type||"DoExpression"===e.type||"BlockStatement"===e.type||fe(e)||!1!==(null==(r=t.label)?void 0:r.hug)&&((null==(u=t.label)?void 0:u.embed)||je(e,n.originalText))}(a,u,t)||!s&&Do(a)),D="callee"===e.key&&pt(e.parent),y=Symbol("arrow-chain"),d=function(e,t,{signatureDocs:n,shouldBreak:r}){if(1===n.length)return n[0];let{parent:u,key:a}=e;return"callee"!==a&&pt(u)||Ae(u)?Ut([n[0]," =>",$t([nn,sn([" =>",nn],n.slice(1))])],{shouldBreak:r}):"callee"===a&&pt(u)||t.assignmentLayout?Ut(sn([" =>",nn],n),{shouldBreak:r}):Ut($t(sn([" =>",nn],n)),{shouldBreak:r})}(e,r,{signatureDocs:o,shouldBreak:s}),m=!1;return p&&(D||r.assignmentLayout)&&(m=!0,l="chain-tail-arrow-chain"===r.assignmentLayout||D&&!c),u=function(e,t,n,{bodyDoc:r,bodyComments:u,functionBody:a,shouldPutBodyOnSameLine:o}){let{node:i,parent:s}=e,p=n.expandLastArg&&Xe(t,"all")?zt(","):"",l=!n.expandLastArg&&"JSXExpressionContainer"!==s.type||ot(i)?"":rn;return o&&Do(a)?[" ",Ut([zt("","("),$t([rn,r]),zt("",")"),p,l]),u]:(yo(a)&&(r=Ut(["(",$t([rn,r]),rn,")"])),o?[" ",r,u]:[$t([nn,r,u]),p,l])}(e,t,r,{bodyDoc:u,bodyComments:i,functionBody:a,shouldPutBodyOnSameLine:c}),Ut([Ut(m?$t([rn,d]):d,{shouldBreak:l,id:y})," =>",p?Qt(u,{groupId:y}):Ut(u),p&&D?zt(rn,"",{groupId:y}):""])}var fo=(e,t,n)=>{if(!e||null!=t){if(t.findLast)return t.findLast(n);for(let e=t.length-1;e>=0;e--){let r=t[e];if(n(r,e,t))return r}}};function Eo(e,t,n,r){let{node:u}=e,a=[],o=fo(!1,u[r],(e=>"EmptyStatement"!==e.type));return e.each((({node:e})=>{"EmptyStatement"!==e.type&&(a.push(n()),e!==o&&(a.push(un),st(e,t)&&a.push(un)))}),r),a}function Fo(e,t,n){let r=function(e,t,n){let{node:r}=e,u=L(r.directives),a=r.body.some((e=>"EmptyStatement"!==e.type)),o=ot(r,ut.Dangling);if(!u&&!a&&!o)return"";let i=[];return u&&(i.push(Eo(e,t,n,"directives")),(a||o)&&(i.push(un),st(A(!1,r.directives,-1),t)&&i.push(un))),a&&i.push(Eo(e,t,n,"body")),o&&i.push(fu(e,t)),i}(e,t,n),{node:u,parent:a}=e;if("Program"===u.type&&"ModuleExpression"!==(null==a?void 0:a.type))return r?[r,un]:"";let o=[];if("StaticBlock"===u.type&&o.push("static "),o.push("{"),r)o.push($t([un,r]),un);else{let t=e.grandparent;"ArrowFunctionExpression"===a.type||"FunctionExpression"===a.type||"FunctionDeclaration"===a.type||"ComponentDeclaration"===a.type||"HookDeclaration"===a.type||"ObjectMethod"===a.type||"ClassMethod"===a.type||"ClassPrivateMethod"===a.type||"ForStatement"===a.type||"WhileStatement"===a.type||"DoWhileStatement"===a.type||"DoExpression"===a.type||"ModuleExpression"===a.type||"CatchClause"===a.type&&!t.finalizer||"TSModuleDeclaration"===a.type||"StaticBlock"===u.type||o.push(un)}return o.push("}"),o}var Ao=function(e){let t=new WeakMap;return function(n){return t.has(n)||t.set(n,Symbol(e)),t.get(n)}};function go(e){switch(e){case null:return"";case"PlusOptional":return"+?";case"MinusOptional":return"-?";case"Optional":return"?"}}function ho(e,t){return"+"===e||"-"===e?e+t:t}var xo=Ao("typeParameters");function Co(e,t,n,r){let{node:u}=e;if(!u[r])return"";if(!Array.isArray(u[r]))return n(r);let a=e.getNode(2),o=a&&Te(a),i=e.match((e=>!(1===e[r].length&&ye(e[r][0]))),void 0,((e,t)=>"typeAnnotation"===t),(e=>"Identifier"===e.type),oa);if(0===u[r].length||!i&&(o||1===u[r].length&&("NullableTypeAnnotation"===u[r][0].type||ma(u[r][0]))))return["<",sn(", ",e.map(n,r)),To(e,t),">"];let s="TSTypeParameterInstantiation"===u.type?"":function(e,t,n){let{node:r}=e;return 1===Qe(r).length&&r.type.startsWith("TS")&&!r[n][0].constraint&&"ArrowFunctionExpression"===e.parent.type&&!(t.filepath&&/\.ts$/.test(t.filepath))}(e,t,r)?",":Xe(t)?zt(","):"";return Ut(["<",$t([rn,sn([",",nn],e.map(n,r))]),s,rn,">"],{id:xo(u)})}function To(e,t){let{node:n}=e;if(!ot(n,ut.Dangling))return"";let r=!ot(n,ut.Line),u=fu(e,t,{indent:!r});return r?u:[u,un]}function So(e,t,n){let{node:r,parent:u}=e,a=["TSTypeParameter"===r.type&&r.const?"const ":""],o="TSTypeParameter"===r.type?n("name"):r.name;if("TSMappedType"===u.type)return u.readonly&&a.push(ho(u.readonly,"readonly")," "),a.push("[",o),r.constraint&&a.push(" in ",n("constraint")),u.nameType&&a.push(" as ",e.callParent((()=>n("nameType")))),a.push("]"),a;if(r.variance&&a.push(n("variance")),r.in&&a.push("in "),r.out&&a.push("out "),a.push(o),r.bound&&(r.usesExtendsBound&&a.push(" extends "),a.push(ba(e,n,"bound"))),r.constraint){let e=Symbol("constraint");a.push(" extends",Ut($t(nn),{id:e}),Zt,Qt(n("constraint"),{groupId:e}))}return r.default&&a.push(" = ",n("default")),Ut(a)}var bo=K(["ClassProperty","PropertyDefinition","ClassPrivateProperty","ClassAccessorProperty","AccessorProperty","TSAbstractPropertyDefinition","TSAbstractAccessorProperty"]);function Bo(e,t,n){let{node:r}=e,u=[La(e),Oa(e),"class"],a=ot(r.id,ut.Trailing)||ot(r.typeParameters,ut.Trailing)||ot(r.superClass)||L(r.extends)||L(r.mixins)||L(r.implements),o=[],i=[];if(r.id&&o.push(" ",n("id")),o.push(n("typeParameters")),r.superClass){let r=[No(e,t,n),n("superTypeParameters")],u=e.call((e=>["extends ",Fu(e,r,t)]),"superClass");a?i.push(nn,Ut(u)):i.push(" ",u)}else i.push(wo(e,t,n,"extends"));if(i.push(wo(e,t,n,"mixins"),wo(e,t,n,"implements")),a){let e;e=Po(r)?[...o,$t(i)]:$t([...o,i]),u.push(Ut(e,{id:vo(r)}))}else u.push(...o,...i);return u.push(" ",n("body")),u}var vo=Ao("heritageGroup");function ko(e){return zt(un,"",{groupId:vo(e)})}function Po(e){return e.typeParameters&&!ot(e.typeParameters,ut.Trailing|ut.Line)&&!function(e){return["extends","mixins","implements"].reduce(((t,n)=>t+(Array.isArray(e[n])?e[n].length:0)),e.superClass?1:0)>1}(e)}function wo(e,t,n,r){let{node:u}=e;if(!L(u[r]))return"";let a=fu(e,t,{marker:r});return[Po(u)?zt(" ",nn,{groupId:xo(u.typeParameters)}):nn,a,a&&un,r,Ut($t([nn,sn([",",nn],e.map(n,r))]))]}function No(e,t,n){let r=n("superClass"),{parent:u}=e;return"AssignmentExpression"===u.type?Ut(zt(["(",$t([rn,r]),rn,")"],r)):r}function Io(e,t,n){let{node:r}=e,u=[];return L(r.decorators)&&u.push(Ru(e,t,n)),u.push(Ra(r)),r.static&&u.push("static "),u.push(Oa(e)),r.override&&u.push("override "),u.push(oo(e,t,n)),u}function jo(e,t,n){let{node:r}=e,u=[],a=t.semi?";":"";return L(r.decorators)&&u.push(Ru(e,t,n)),u.push(Ra(r),La(e)),r.static&&u.push("static "),u.push(Oa(e)),r.override&&u.push("override "),r.readonly&&u.push("readonly "),r.variance&&u.push(n("variance")),("ClassAccessorProperty"===r.type||"AccessorProperty"===r.type||"TSAbstractAccessorProperty"===r.type)&&u.push("accessor "),u.push(no(e,t,n),Na(e),Ia(e),ba(e,n)),[na(e,t,n,u," =","TSAbstractPropertyDefinition"===r.type||"TSAbstractAccessorProperty"===r.type?void 0:"value"),a]}function Lo(e,t,n){let{node:r}=e,u=[];return e.each((({node:e,next:r,isLast:a})=>{u.push(n()),!t.semi&&bo(e)&&function(e,t){var n;let{type:r,name:u}=e.key;if(!(e.computed||"Identifier"!==r||"static"!==u&&"get"!==u&&"set"!==u||e.value||e.typeAnnotation))return!0;if(!t||t.static||t.accessibility||t.readonly)return!1;if(!t.computed){let e=null==(n=t.key)?void 0:n.name;if("in"===e||"instanceof"===e)return!0}if(bo(t)&&t.variance&&!t.static&&!t.declare)return!0;switch(t.type){case"ClassProperty":case"PropertyDefinition":case"TSAbstractPropertyDefinition":return t.computed;case"MethodDefinition":case"TSAbstractMethodDefinition":case"ClassMethod":case"ClassPrivateMethod":{if((t.value?t.value.async:t.async)||"get"===t.kind||"set"===t.kind)return!1;let e=t.value?t.value.generator:t.generator;return!(!t.computed&&!e)}case"TSIndexSignature":return!0}return!1}(e,r)&&u.push(";"),a||(u.push(un),st(e,t)&&u.push(un))}),"body"),ot(r,ut.Dangling)&&u.push(fu(e,t)),[L(r.body)?ko(e.parent):"","{",u.length>0?[$t([un,u]),un]:"","}"]}function Mo(e,t){if(t.semi||Jo(e,t)||_o(e,t))return!1;let{node:n,key:r,parent:u}=e;return!("ExpressionStatement"!==n.type||("body"!==r||"Program"!==u.type&&"BlockStatement"!==u.type&&"StaticBlock"!==u.type&&"TSModuleBlock"!==u.type)&&("consequent"!==r||"SwitchCase"!==u.type)||!e.call((()=>Oo(e,t)),"expression"))}function Oo(e,t){let{node:n}=e;switch(n.type){case"ParenthesizedExpression":case"TypeCastExpression":case"ArrayExpression":case"ArrayPattern":case"TemplateLiteral":case"TemplateElement":case"RegExpLiteral":return!0;case"ArrowFunctionExpression":if(!so(e,t))return!0;break;case"UnaryExpression":{let{prefix:e,operator:t}=n;if(e&&("+"===t||"-"===t))return!0;break}case"BindExpression":if(!n.object)return!0;break;case"Literal":if(n.regex)return!0;break;default:if(fe(n))return!0}return!!Du(e,t)||!!ee(n)&&e.call((()=>Oo(e,t)),...ne(n))}function Jo({node:e,parent:t},n){return("markdown"===n.parentParser||"mdx"===n.parentParser)&&"ExpressionStatement"===e.type&&fe(e.expression)&&"Program"===t.type&&1===t.body.length}function qo(e){switch(e.type){case"MemberExpression":switch(e.property.type){case"Identifier":case"NumericLiteral":case"StringLiteral":return qo(e.object)}return!1;case"Identifier":return!0;default:return!1}}function _o({node:e,parent:t},n){return("__vue_event_binding"===n.parser||"__vue_ts_event_binding"===n.parser)&&"ExpressionStatement"===e.type&&"Program"===t.type&&1===t.body.length}function Xo(e,t,n){let r=[n("expression")];return _o(e,t)?qo(e.node.expression)&&r.push(";"):Jo(e,t)||t.semi&&r.push(";"),r}function Ro(e){return e.toLowerCase()}function $o({pattern:e,flags:t}){return`/${e}/${t=[...t].sort().join("")}`}function Wo(e,t){let n=e.slice(1,-1);if(n.includes('"')||n.includes("'"))return e;let r=t.singleQuote?"'":'"';return r+n+r}var Uo=function(e,t,n){let r=e.originalText.slice(t,n);for(let u of e[Symbol.for("comments")]){let e=_(u);if(e>n)break;let a=X(u);if(a<t)continue;let o=a-e;r=r.slice(0,e-t)+" ".repeat(o)+r.slice(a-t)}return r};var Go=e=>"ExportDefaultDeclaration"===e.type||"DeclareExportDeclaration"===e.type&&e.default;function Vo(e,t,n){let{node:r}=e,u=[$u(e,0,n),La(e),"export",Go(r)?" default":""],{declaration:a,exported:o}=r;return ot(r,ut.Dangling)&&(u.push(" ",fu(e,t)),Le(r)&&u.push(un)),a?u.push(" ",n("declaration")):(u.push(function(e){return Ho(e.exportKind)}(r)),"ExportAllDeclaration"===r.type||"DeclareExportAllDeclaration"===r.type?(u.push(" *"),o&&u.push(" as ",n("exported"))):u.push(Yo(e,t,n)),u.push(Qo(e,t,n),ei(e,t,n))),u.push(function(e,t){return t.semi&&(!e.declaration||Go(e)&&!Ko(e.declaration))?";":""}(r,t)),u}var Ko=K(["ClassDeclaration","ComponentDeclaration","FunctionDeclaration","TSInterfaceDeclaration","DeclareClass","DeclareComponent","DeclareFunction","DeclareHook","HookDeclaration","TSDeclareFunction","EnumDeclaration"]);function Ho(e,t=!0){return e&&"value"!==e?`${t?" ":""}${e}${t?"":" "}`:""}function zo(e,t){return Ho(e.importKind,t)}function Qo(e,t,n){let{node:r}=e;if(!r.source)return"";let u=[];return Zo(r,t)&&u.push(" from"),u.push(" ",n("source")),u}function Yo(e,t,n){let{node:r}=e;if(!Zo(r,t))return"";let u=[" "];if(L(r.specifiers)){let a=[],o=[];e.each((()=>{let t=e.node.type;if("ExportNamespaceSpecifier"===t||"ExportDefaultSpecifier"===t||"ImportNamespaceSpecifier"===t||"ImportDefaultSpecifier"===t)a.push(n());else{if("ExportSpecifier"!==t&&"ImportSpecifier"!==t)throw new gu(r,"specifier");o.push(n())}}),"specifiers"),u.push(sn(", ",a)),o.length>0&&(a.length>0&&u.push(", "),o.length>1||a.length>0||r.specifiers.some((e=>ot(e)))?u.push(Ut(["{",$t([t.bracketSpacing?nn:rn,sn([",",nn],o)]),zt(Xe(t)?",":""),t.bracketSpacing?nn:rn,"}"])):u.push(["{",t.bracketSpacing?" ":"",...o,t.bracketSpacing?" ":"","}"]))}else u.push("{}");return u}function Zo(e,t){return!("ImportDeclaration"===e.type&&!L(e.specifiers)&&"type"!==e.importKind)||Uo(t,_(e),_(e.source)).trimEnd().endsWith("from")}function ei(e,t,n){let{node:r}=e;if(!r.source)return"";let u=function(e,t){var n,r;if(null!=(n=e.extra)&&n.deprecatedAssertSyntax)return"assert";let u=Uo(t,X(e.source),null!=(r=e.attributes)&&r[0]?_(e.attributes[0]):X(e)).trimStart();return u.startsWith("assert")?"assert":u.startsWith("with")||L(e.attributes)?"with":void 0}(r,t);if(!u)return"";let a=[` ${u} {`];return L(r.attributes)&&(t.bracketSpacing&&a.push(" "),a.push(sn(", ",e.map(n,"attributes"))),t.bracketSpacing&&a.push(" ")),a.push("}"),a}function ti(e,t,n){let{node:r}=e,{type:u}=r,a=u.startsWith("Import"),o=a?"imported":"local",i=a?"local":"exported",s=r[o],p=r[i],l="",c="";return"ExportNamespaceSpecifier"===u||"ImportNamespaceSpecifier"===u?l="*":s&&(l=n(o)),p&&!function(e){if("ImportSpecifier"!==e.type&&"ExportSpecifier"!==e.type)return!1;let{local:t,["ImportSpecifier"===e.type?"imported":"exported"]:n}=e;if(t.type!==n.type||!$(t,n))return!1;if(pe(t))return t.value===n.value&&qe(t)===qe(n);if("Identifier"===t.type)return t.name===n.name;return!1}(r)&&(c=n(i)),[Ho("ImportSpecifier"===u?r.importKind:r.exportKind,!1),l,l&&c?" as ":"",c]}function ni(e,t,n){var r;let u=t.semi?";":"",{node:a}=e,o="ObjectTypeAnnotation"===a.type,i="TSEnumDeclaration"===a.type||"EnumBooleanBody"===a.type||"EnumNumberBody"===a.type||"EnumBigIntBody"===a.type||"EnumStringBody"===a.type||"EnumSymbolBody"===a.type,s=["TSTypeLiteral"===a.type||i?"members":"TSInterfaceBody"===a.type?"body":"properties"];o&&s.push("indexers","callProperties","internalSlots");let p=s.flatMap((t=>e.map((({node:e})=>({node:e,printed:n(),loc:_(e)})),t)));s.length>1&&p.sort(((e,t)=>e.loc-t.loc));let{parent:l,key:c}=e,D=o&&"body"===c&&("InterfaceDeclaration"===l.type||"DeclareInterface"===l.type||"DeclareClass"===l.type),y="TSInterfaceBody"===a.type||i||D||"ObjectPattern"===a.type&&"FunctionDeclaration"!==l.type&&"FunctionExpression"!==l.type&&"ArrowFunctionExpression"!==l.type&&"ObjectMethod"!==l.type&&"ClassMethod"!==l.type&&"ClassPrivateMethod"!==l.type&&"AssignmentPattern"!==l.type&&"CatchClause"!==l.type&&a.properties.some((e=>e.value&&("ObjectPattern"===e.value.type||"ArrayPattern"===e.value.type)))||"ObjectPattern"!==a.type&&p.length>0&&Pn(t.originalText,_(a),p[0].loc),d=D?";":"TSInterfaceBody"===a.type||"TSTypeLiteral"===a.type?zt(u,";"):",",m="RecordExpression"===a.type?"#{":a.exact?"{|":"{",f=a.exact?"|}":"}",E=[],F=p.map((e=>{let n=[...E,Ut(e.printed)];return E=[d,nn],("TSPropertySignature"===e.node.type||"TSMethodSignature"===e.node.type||"TSConstructSignatureDeclaration"===e.node.type||"TSCallSignatureDeclaration"===e.node.type)&&ot(e.node,ut.PrettierIgnore)&&E.shift(),st(e.node,t)&&E.push(un),n}));if(a.inexact||a.hasUnknownMembers){let n;if(ot(a,ut.Dangling)){let r=ot(a,ut.Line);n=[fu(e,t),r||w(t.originalText,X(A(!1,it(a),-1)))?un:nn,"..."]}else n=["..."];F.push([...E,...n])}let g,h=null==(r=A(!1,p,-1))?void 0:r.node,x=!(a.inexact||a.hasUnknownMembers||h&&("RestElement"===h.type||("TSPropertySignature"===h.type||"TSCallSignatureDeclaration"===h.type||"TSMethodSignature"===h.type||"TSConstructSignatureDeclaration"===h.type)&&ot(h,ut.PrettierIgnore)));if(0===F.length){if(!ot(a,ut.Dangling))return[m,f,ba(e,n)];g=Ut([m,fu(e,t,{indent:!0}),rn,f,Na(e),ba(e,n)])}else g=[D&&L(a.properties)?ko(l):"",m,$t([t.bracketSpacing?nn:rn,...F]),zt(x&&(","!==d||Xe(t))?d:""),t.bracketSpacing?nn:rn,f,Na(e),ba(e,n)];return e.match((e=>"ObjectPattern"===e.type&&!L(e.decorators)),ri)||ye(a)&&(e.match(void 0,((e,t)=>"typeAnnotation"===t),((e,t)=>"typeAnnotation"===t),ri)||e.match(void 0,((e,t)=>"FunctionTypeParam"===e.type&&"typeAnnotation"===t),ri))||!y&&e.match((e=>"ObjectPattern"===e.type),(e=>"AssignmentExpression"===e.type||"VariableDeclarator"===e.type))?g:Ut(g,{shouldBreak:y})}function ri(e,t){return("params"===t||"parameters"===t||"this"===t||"rest"===t)&&ca(e)}function ui(e,t,n){let{node:r}=e,u="ConditionalExpression"===r.type,a=u?"alternate":"falseType",{parent:o}=e,i=u?n("test"):[n("checkType")," ","extends"," ",n("extendsType")];return o.type===r.type&&o[a]===r?Wt(2,i):i}var ai=new Map([["AssignmentExpression","right"],["VariableDeclarator","init"],["ReturnStatement","argument"],["ThrowStatement","argument"],["UnaryExpression","argument"],["YieldExpression","argument"],["AwaitExpression","argument"]]);function oi(e,t,n){let r,u,{node:a}=e,o="ConditionalExpression"===a.type,i=o?"consequent":"trueType",s=o?"alternate":"falseType",p=o?["test"]:["checkType","extendsType"],l=a[i],c=a[s],D=[],y=!1,{parent:d}=e,m=d.type===a.type&&p.some((e=>d[e]===a)),f=d.type===a.type&&!m,E=0;do{u=r||a,r=e.getParentNode(E),E++}while(r&&r.type===a.type&&p.every((e=>r[e]!==u)));let F=r||d,A=u;if(o&&(fe(a[p[0]])||fe(l)||fe(c)||function(e){let t=[e];for(let e=0;e<t.length;e++){let n=t[e];for(let e of["test","consequent","alternate"]){let r=n[e];if(fe(r))return!0;"ConditionalExpression"===r.type&&t.push(r)}}return!1}(A))){y=!0,f=!0;let e=e=>[zt("("),$t([rn,e]),rn,zt(")")],t=e=>"NullLiteral"===e.type||"Literal"===e.type&&null===e.value||"Identifier"===e.type&&"undefined"===e.name;D.push(" ? ",t(l)?n(i):e(n(i))," : ",c.type===a.type||t(c)?n(s):e(n(s)))}else{let e=e=>t.useTabs?$t(n(e)):Wt(2,n(e)),r=[nn,"? ",l.type===a.type?zt("","("):"",e(i),l.type===a.type?zt("",")"):"",nn,": ",e(s)];D.push(d.type!==a.type||d[s]===a||m?r:t.useTabs?Vt($t(r)):Wt(Math.max(0,t.tabWidth-2),r))}let g=[i,s,...p].some((e=>ot(a[e],(e=>H(e)&&Pn(t.originalText,_(e),X(e)))))),h=!y&&(Be(d)||"NGPipeExpression"===d.type&&d.left===a)&&!d.computed,x=function(e){let{node:t}=e;if("ConditionalExpression"!==t.type)return!1;let n,r=t;for(let t=0;!n;t++){let u=e.getParentNode(t);"ChainExpression"===u.type&&u.expression===r||be(u)&&u.callee===r||Be(u)&&u.object===r||"TSNonNullExpression"===u.type&&u.expression===r?r=u:"NewExpression"===u.type&&u.callee===r||ct(u)&&u.expression===r?(n=e.getParentNode(t+1),r=u):n=u}return r!==t&&n[ai.get(n.type)]===r}(e),C=(T=[ui(e,0,n),f?D:$t(D),o&&h&&!x?rn:""],d===F?Ut(T,{shouldBreak:g}):g?[T,en]:T);var T;return m||x?Ut([$t([rn,C]),rn]):C}var ii=new Map([["AssignmentExpression","right"],["VariableDeclarator","init"],["ReturnStatement","argument"],["ThrowStatement","argument"],["UnaryExpression","argument"],["YieldExpression","argument"],["AwaitExpression","argument"]]);var si=e=>[zt("("),$t([rn,e]),rn,zt(")")];function pi(e,t,n,r){if(!t.experimentalTernaries)return oi(e,t,n);let u,a,{node:o}=e,i="ConditionalExpression"===o.type,s="TSConditionalType"===o.type||"ConditionalTypeAnnotation"===o.type,p=i?"consequent":"trueType",l=i?"alternate":"falseType",c=i?["test"]:["checkType","extendsType"],D=o[p],y=o[l],d=c.map((e=>o[e])),{parent:m}=e,f=m.type===o.type,E=f&&c.some((e=>m[e]===o)),F=f&&m[l]===o,A=D.type===o.type,g=y.type===o.type,h=g||F,x=t.tabWidth>2||t.useTabs,C=0;do{a=u||o,u=e.getParentNode(C),C++}while(u&&u.type===o.type&&c.every((e=>u[e]!==a)));let T=u||m,S=r&&r.assignmentLayout&&"break-after-operator"!==r.assignmentLayout&&("AssignmentExpression"===m.type||"VariableDeclarator"===m.type||"ClassProperty"===m.type||"PropertyDefinition"===m.type||"ClassPrivateProperty"===m.type||"ObjectProperty"===m.type||"Property"===m.type),b=("ReturnStatement"===m.type||"ThrowStatement"===m.type)&&!(A||g),B=i&&"JSXExpressionContainer"===T.type&&"JSXAttribute"!==e.grandparent.type,v=function(e){let{node:t}=e;if("ConditionalExpression"!==t.type)return!1;let n,r=t;for(let t=0;!n;t++){let u=e.getParentNode(t);"ChainExpression"===u.type&&u.expression===r||be(u)&&u.callee===r||Be(u)&&u.object===r||"TSNonNullExpression"===u.type&&u.expression===r?r=u:"NewExpression"===u.type&&u.callee===r||ct(u)&&u.expression===r?(n=e.getParentNode(t+1),r=u):n=u}return r!==t&&n[ii.get(n.type)]===r}(e),k=function(e,t){return(Be(t)||"NGPipeExpression"===t.type&&t.left===e)&&!t.computed}(o,m),P=s&&Du(e,t),w=x?t.useTabs?"\t":" ".repeat(t.tabWidth-1):"",N=function(e,t,n,r){return[...e.map((e=>it(e))),it(t),it(n)].flat().some((e=>H(e)&&Pn(r.originalText,_(e),X(e))))}(d,D,y,t)||A||g,I=!h&&!f&&!s&&(B?"NullLiteral"===D.type||"Literal"===D.type&&null===D.value:we(D,t)&&ve(o.test,3)),j=h||F||s&&!f||f&&i&&ve(o.test,1)||I,L=[];!A&&ot(D,ut.Dangling)&&e.call((e=>{L.push(fu(e,t),un)}),"consequent");let M=[];ot(o.test,ut.Dangling)&&e.call((e=>{M.push(fu(e,t))}),"test"),!g&&ot(y,ut.Dangling)&&e.call((e=>{M.push(fu(e,t))}),"alternate"),ot(o,ut.Dangling)&&M.push(fu(e,t));let O=Symbol("test"),J=Symbol("consequent"),q=Symbol("test-and-consequent"),R=i?[si(n("test")),"ConditionalExpression"===o.test.type?en:""]:[n("checkType")," ","extends"," ","TSConditionalType"===o.extendsType.type||"ConditionalTypeAnnotation"===o.extendsType.type||"TSMappedType"===o.extendsType.type?n("extendsType"):Ut(si(n("extendsType")))],$=Ut([R," ?"],{id:O}),W=n(p),U=$t([A||B&&(fe(D)||f||h)?un:nn,L,W]),G=j?Ut([$,h?U:zt(U,Ut(U,{id:J}),{groupId:O})],{id:q}):[$,U],V=n(l),K=I?zt(V,Vt(si(V)),{groupId:q}):V,z=[G,M.length>0?[$t([un,M]),un]:g?un:I?zt(nn," ",{groupId:q}):nn,":",g?" ":x?j?zt(w,zt(h||I?" ":w," "),{groupId:q}):zt(w," "):" ",g?K:Ut([$t(K),B&&!I?rn:""]),k&&!v?rn:"",N?en:""];return S&&!N?Ut($t([rn,Ut(z)])):S||b?Ut($t(z)):v||s&&E?Ut([$t([rn,z]),P?rn:""]):m===T?Ut(z):z}function li(e,t,n,r){let{node:u}=e;if(ce(u))return function(e,t){let{node:n}=e;switch(n.type){case"RegExpLiteral":return $o(n);case"BigIntLiteral":return Ro(n.extra.raw);case"NumericLiteral":return Ya(n.extra.raw);case"StringLiteral":return Fn(q(n.extra.raw,t));case"NullLiteral":return"null";case"BooleanLiteral":return String(n.value);case"DecimalLiteral":return Ya(n.value)+"m";case"DirectiveLiteral":return Wo(n.extra.raw,t);case"Literal":{if(n.regex)return $o(n.regex);if(n.bigint)return Ro(n.raw);if(n.decimal)return Ya(n.decimal)+"m";let{value:r}=n;return"number"==typeof r?Ya(n.raw):"string"==typeof r?function(e){if("expression"!==e.key)return;let{parent:t}=e;return"ExpressionStatement"===t.type&&t.directive}(e)?Wo(n.raw,t):Fn(q(n.raw,t)):String(r)}}}(e,t);let a=t.semi?";":"",o=[];switch(u.type){case"JsExpressionRoot":return n("node");case"JsonRoot":return[n("node"),un];case"File":return function(e,t,n){if(t.__isVueBindings||t.__isVueForBindingLeft){let r=e.map(n,"program","body",0,"params");if(1===r.length)return r[0];let u=sn([",",nn],r);return t.__isVueForBindingLeft?["(",$t([rn,Ut(u)]),rn,")"]:u}if(t.__isEmbeddedTypescriptGenericParameters){let t=e.map(n,"program","body",0,"typeParameters","params");return sn([",",nn],t)}}(e,t,n)??n("program");case"EmptyStatement":return"";case"ExpressionStatement":return Xo(e,t,n);case"ChainExpression":return n("expression");case"ParenthesizedExpression":return ot(u.expression)||!oe(u.expression)&&!ae(u.expression)?Ut(["(",$t([rn,n("expression")]),rn,")"]):["(",n("expression"),")"];case"AssignmentExpression":return function(e,t,n){let{node:r}=e;return na(e,t,n,n("left"),[" ",r.operator],"right")}(e,t,n);case"VariableDeclarator":return function(e,t,n){return na(e,t,n,n("id")," =","init")}(e,t,n);case"BinaryExpression":case"LogicalExpression":return Lu(e,t,n);case"AssignmentPattern":return[n("left")," = ",n("right")];case"OptionalMemberExpression":case"MemberExpression":return function(e,t,n){var r;let u=n("object"),a=Yu(e,0,n),{node:o}=e,i=e.findAncestor((e=>!(Be(e)||"TSNonNullExpression"===e.type))),s=e.findAncestor((e=>!("ChainExpression"===e.type||"TSNonNullExpression"===e.type))),p=i&&("NewExpression"===i.type||"BindExpression"===i.type||"AssignmentExpression"===i.type&&"Identifier"!==i.left.type)||o.computed||"Identifier"===o.object.type&&"Identifier"===o.property.type&&!Be(s)||("AssignmentExpression"===s.type||"VariableDeclarator"===s.type)&&(Qu(o.object)||(null==(r=u.label)?void 0:r.memberChain));return pn(u.label,[u,p?a:Ut($t([rn,a]))])}(e,0,n);case"MetaProperty":return[n("meta"),".",n("property")];case"BindExpression":return u.object&&o.push(n("object")),o.push(Ut($t([rn,qa(0,0,n)]))),o;case"Identifier":return[u.name,Na(e),Ia(e),ba(e,n)];case"V8IntrinsicIdentifier":return["%",u.name];case"SpreadElement":case"SpreadElementPattern":case"SpreadPropertyPattern":case"RestElement":return Xa(e,n);case"FunctionDeclaration":case"FunctionExpression":return ao(e,n,t,r);case"ArrowFunctionExpression":return mo(e,t,n,r);case"YieldExpression":return o.push("yield"),u.delegate&&o.push("*"),u.argument&&o.push(" ",n("argument")),o;case"AwaitExpression":if(o.push("await"),u.argument){o.push(" ",n("argument"));let{parent:t}=e;if(be(t)&&t.callee===u||Be(t)&&t.object===u){o=[$t([rn,...o]),rn];let t=e.findAncestor((e=>"AwaitExpression"===e.type||"BlockStatement"===e.type));if("AwaitExpression"!==(null==t?void 0:t.type)||!Re(t.argument,(e=>e===u)))return Ut(o)}}return o;case"ExportDefaultDeclaration":case"ExportNamedDeclaration":case"ExportAllDeclaration":return Vo(e,t,n);case"ImportDeclaration":return function(e,t,n){let{node:r}=e;return["import",r.module?" module":"",r.phase?` ${r.phase}`:"",zo(r),Yo(e,t,n),Qo(e,t,n),ei(e,t,n),t.semi?";":""]}(e,t,n);case"ImportSpecifier":case"ExportSpecifier":case"ImportNamespaceSpecifier":case"ExportNamespaceSpecifier":case"ImportDefaultSpecifier":case"ExportDefaultSpecifier":return ti(e,0,n);case"ImportAttribute":case"ObjectProperty":return ro(e,t,n);case"Import":return"import";case"Program":case"BlockStatement":case"StaticBlock":return Fo(e,t,n);case"ClassBody":return Lo(e,t,n);case"ThrowStatement":return function(e,t,n){return["throw",lo(e,t,n)]}(e,t,n);case"ReturnStatement":return function(e,t,n){return["return",lo(e,t,n)]}(e,t,n);case"NewExpression":case"ImportExpression":case"OptionalCallExpression":case"CallExpression":return ea(e,t,n);case"ObjectExpression":case"ObjectPattern":case"RecordExpression":return ni(e,t,n);case"Property":return Ee(u)?oo(e,t,n):ro(e,t,n);case"ObjectMethod":return oo(e,t,n);case"Decorator":return["@",n("expression")];case"ArrayExpression":case"ArrayPattern":case"TupleExpression":return $a(e,t,n);case"SequenceExpression":{let{parent:t}=e;if("ExpressionStatement"===t.type||"ForStatement"===t.type){let t=[];return e.each((({isFirst:e})=>{e?t.push(n()):t.push(",",$t([nn,n()]))}),"expressions"),Ut(t)}return Ut(sn([",",nn],e.map(n,"expressions")))}case"ThisExpression":return"this";case"Super":return"super";case"Directive":return[n("value"),a];case"UnaryExpression":return o.push(u.operator),/[a-z]$/.test(u.operator)&&o.push(" "),ot(u.argument)?o.push(Ut(["(",$t([rn,n("argument")]),rn,")"])):o.push(n("argument")),o;case"UpdateExpression":return[u.prefix?u.operator:"",n("argument"),u.prefix?"":u.operator];case"ConditionalExpression":return pi(e,t,n,r);case"VariableDeclaration":{let t,r=e.map(n,"declarations"),i=e.parent,s="ForStatement"===i.type||"ForInStatement"===i.type||"ForOfStatement"===i.type,p=u.declarations.some((e=>e.init));return 1!==r.length||ot(u.declarations[0])?r.length>0&&(t=$t(r[0])):t=r[0],o=[La(e),u.kind,t?[" ",t]:"",$t(r.slice(1).map((e=>[",",p&&!s?un:nn,e])))],s&&i.body!==u||o.push(a),Ut(o)}case"WithStatement":return Ut(["with (",n("object"),")",_a(u.body,n("body"))]);case"IfStatement":{let r=_a(u.consequent,n("consequent")),a=Ut(["if (",Ut([$t([rn,n("test")]),rn]),")",r]);if(o.push(a),u.alternate){let r=ot(u.consequent,ut.Trailing|ut.Line)||Le(u),a="BlockStatement"===u.consequent.type&&!r;o.push(a?" ":un),ot(u,ut.Dangling)&&o.push(fu(e,t),r?un:" "),o.push("else",Ut(_a(u.alternate,n("alternate"),"IfStatement"===u.alternate.type)))}return o}case"ForStatement":{let r=_a(u.body,n("body")),a=fu(e,t),o=a?[a,rn]:"";return u.init||u.test||u.update?[o,Ut(["for (",Ut([$t([rn,n("init"),";",nn,n("test"),";",nn,n("update")]),rn]),")",r])]:[o,Ut(["for (;;)",r])]}case"WhileStatement":return Ut(["while (",Ut([$t([rn,n("test")]),rn]),")",_a(u.body,n("body"))]);case"ForInStatement":return Ut(["for (",n("left")," in ",n("right"),")",_a(u.body,n("body"))]);case"ForOfStatement":return Ut(["for",u.await?" await":""," (",n("left")," of ",n("right"),")",_a(u.body,n("body"))]);case"DoWhileStatement":return o=[Ut(["do",_a(u.body,n("body"))])],"BlockStatement"===u.body.type?o.push(" "):o.push(un),o.push("while (",Ut([$t([rn,n("test")]),rn]),")",a),o;case"DoExpression":return[u.async?"async ":"","do ",n("body")];case"BreakStatement":case"ContinueStatement":return o.push("BreakStatement"===u.type?"break":"continue"),u.label&&o.push(" ",n("label")),o.push(a),o;case"LabeledStatement":return"EmptyStatement"===u.body.type?[n("label"),":;"]:[n("label"),": ",n("body")];case"TryStatement":return["try ",n("block"),u.handler?[" ",n("handler")]:"",u.finalizer?[" finally ",n("finalizer")]:""];case"CatchClause":if(u.param){let e=ot(u.param,(e=>!H(e)||e.leading&&w(t.originalText,X(e))||e.trailing&&w(t.originalText,_(e),{backwards:!0}))),r=n("param");return["catch ",e?["(",$t([rn,r]),rn,") "]:["(",r,") "],n("body")]}return["catch ",n("body")];case"SwitchStatement":return[Ut(["switch (",$t([rn,n("discriminant")]),rn,")"])," {",u.cases.length>0?$t([un,sn(un,e.map((({node:e,isLast:r})=>[n(),!r&&st(e,t)?un:""]),"cases"))]):"",un,"}"];case"SwitchCase":{u.test?o.push("case ",n("test"),":"):o.push("default:"),ot(u,ut.Dangling)&&o.push(" ",fu(e,t));let r=u.consequent.filter((e=>"EmptyStatement"!==e.type));if(r.length>0){let u=Eo(e,t,n,"consequent");o.push(1===r.length&&"BlockStatement"===r[0].type?[" ",u]:$t([un,u]))}return o}case"DebuggerStatement":return["debugger",a];case"ClassDeclaration":case"ClassExpression":return Bo(e,t,n);case"ClassMethod":case"ClassPrivateMethod":case"MethodDefinition":return Io(e,t,n);case"ClassProperty":case"PropertyDefinition":case"ClassPrivateProperty":case"ClassAccessorProperty":case"AccessorProperty":return jo(e,t,n);case"TemplateElement":return Fn(u.value.raw);case"TemplateLiteral":return Mr(e,n,t);case"TaggedTemplateExpression":return function(e){let t=e("quasi");return pn(t.label&&{tagged:!0,...t.label},[e("tag"),e("typeParameters"),Zt,t])}(n);case"PrivateIdentifier":return["#",u.name];case"PrivateName":return["#",n("id")];case"TopicReference":return"%";case"ArgumentPlaceholder":return"?";case"ModuleExpression":return["module ",n("body")];default:throw new gu(u,"ESTree")}}function ci(e,t,n){let{parent:r,node:u,key:a}=e,o=[n("expression")];switch(u.type){case"AsConstExpression":o.push(" as const");break;case"AsExpression":case"TSAsExpression":o.push(" as ",n("typeAnnotation"));break;case"SatisfiesExpression":case"TSSatisfiesExpression":o.push(" satisfies ",n("typeAnnotation"))}return"callee"===a&&be(r)||"object"===a&&Be(r)?Ut([$t([rn,...o]),rn]):o}function Di(e,t,n){let{node:r}=e,u=[La(e),"component"];r.id&&u.push(" ",n("id")),u.push(n("typeParameters"));let a=function(e,t,n){let{node:r}=e,u=r.params;if(r.rest&&(u=[...u,r.rest]),0===u.length)return["(",fu(e,n,{filter:e=>")"===kn(n.originalText,X(e))}),")"];let a=[];return function(e,t){let{node:n}=e,r=0,u=e=>t(e,r++);e.each(u,"params"),n.rest&&e.call(u,"rest")}(e,((e,o)=>{let i=o===u.length-1;i&&r.rest&&a.push("..."),a.push(t()),!i&&(a.push(","),st(u[o],n)?a.push(un,un):a.push(nn))})),["(",$t([rn,...a]),zt(Xe(n,"all")&&!yi(r,u)?",":""),rn,")"]}(e,n,t);return r.rendersType?u.push(Ut([a," ",n("rendersType")])):u.push(Ut([a])),r.body&&u.push(" ",n("body")),t.semi&&"DeclareComponent"===r.type&&u.push(";"),u}function yi(e,t){var n;return e.rest||"RestElement"===(null==(n=A(!1,t,-1))?void 0:n.type)}function di(e,t,n){return ni(e,n,t)}function mi(e,t){let{node:n}=e,r=t("id");n.computed&&(r=["[",r,"]"]);let u="";return n.initializer&&(u=t("initializer")),n.init&&(u=t("init")),u?[r," = ",u]:r}function fi(e,t,n){let{node:r}=e;return[La(e),r.const?"const ":"","enum ",t("id")," ","TSEnumDeclaration"===r.type?di(e,t,n):t("body")]}function Ei(e){var t;let{node:n}=e;return"HookTypeAnnotation"===n.type&&"DeclareHook"===(null==(t=e.getParentNode(2))?void 0:t.type)}function Fi(e,t,n){let{node:r}=e,u=[La(e),"interface"],a=[],o=[];"InterfaceTypeAnnotation"!==r.type&&a.push(" ",n("id"),n("typeParameters"));let i=r.typeParameters&&!ot(r.typeParameters,ut.Trailing|ut.Line);return L(r.extends)&&o.push(i?zt(" ",nn,{groupId:xo(r.typeParameters)}):nn,"extends ",(1===r.extends.length?_e:$t)(sn([",",nn],e.map(n,"extends")))),ot(r.id,ut.Trailing)||L(r.extends)?i?u.push(Ut([...a,$t(o)])):u.push(Ut($t([...a,...o]))):u.push(...a,...o),u.push(" ",n("body")),Ut(u)}function Ai(e,t,n){let{node:r}=e;if(z(r))return r.type.slice(0,-14).toLowerCase();let u=t.semi?";":"";switch(r.type){case"ComponentDeclaration":case"DeclareComponent":case"ComponentTypeAnnotation":return Di(e,t,n);case"ComponentParameter":return function(e,t,n){let{node:r}=e;return r.shorthand?n("local"):[n("name")," as ",n("local")]}(e,0,n);case"ComponentTypeParameter":return function(e,t,n){let{node:r}=e,u=[];return r.name&&u.push(n("name"),r.optional?"?: ":": "),u.push(n("typeAnnotation")),u}(e,0,n);case"HookDeclaration":return function(e,t,n){let{node:r}=e,u=["hook"];r.id&&u.push(" ",n("id"));let a=la(e,n,t,!1,!0),o=po(e,n),i=Da(r,o);return u.push(Ut([i?Ut(a):a,o]),r.body?" ":"",n("body")),u}(e,t,n);case"DeclareHook":return function(e,t,n){let{node:r}=e,u=[La(e),"hook"];return r.id&&u.push(" ",n("id")),t.semi&&u.push(";"),u}(e,t,n);case"HookTypeAnnotation":return function(e,t,n){let{node:r}=e,u=[];u.push(Ei(e)?"":"hook ");let a=la(e,n,t,!1,!0),o=[];return o.push(Ei(e)?": ":" => ",n("returnType")),Da(r,o)&&(a=Ut(a)),u.push(a,o),Ut(u)}(e,t,n);case"DeclareClass":return Bo(e,t,n);case"DeclareFunction":return[La(e),"function ",n("id"),n("predicate"),u];case"DeclareModule":return["declare module ",n("id")," ",n("body")];case"DeclareModuleExports":return["declare module.exports",ba(e,n),u];case"DeclareNamespace":return["declare namespace ",n("id")," ",n("body")];case"DeclareVariable":return[La(e),r.kind??"var"," ",n("id"),u];case"DeclareExportDeclaration":case"DeclareExportAllDeclaration":return Vo(e,t,n);case"DeclareOpaqueType":case"OpaqueType":return function(e,t,n){let r=t.semi?";":"",{node:u}=e,a=[La(e),"opaque type ",n("id"),n("typeParameters")];return u.supertype&&a.push(": ",n("supertype")),u.impltype&&a.push(" = ",n("impltype")),a.push(r),a}(e,t,n);case"DeclareTypeAlias":case"TypeAlias":return fa(e,t,n);case"IntersectionTypeAnnotation":return Ea(e,0,n);case"UnionTypeAnnotation":return Fa(e,t,n);case"ConditionalTypeAnnotation":return pi(e,t,n);case"InferTypeAnnotation":return ha(0,0,n);case"FunctionTypeAnnotation":return Aa(e,t,n);case"TupleTypeAnnotation":return $a(e,t,n);case"TupleTypeLabeledElement":return Ta(e,0,n);case"TupleTypeSpreadElement":return Ca(e,0,n);case"GenericTypeAnnotation":return[n("id"),Co(e,t,n,"typeParameters")];case"IndexedAccessType":case"OptionalIndexedAccessType":return ga(e,0,n);case"TypeAnnotation":return va(e,0,n);case"TypeParameter":return So(e,0,n);case"TypeofTypeAnnotation":return Pa(e,n);case"ExistsTypeAnnotation":return"*";case"ArrayTypeAnnotation":return ka(n);case"DeclareEnum":case"EnumDeclaration":return fi(e,n,t);case"EnumBooleanBody":case"EnumNumberBody":case"EnumBigIntBody":case"EnumStringBody":case"EnumSymbolBody":return function(e,t,n){let r,{node:u}=e;if("EnumSymbolBody"===u.type||u.explicitType)switch(u.type){case"EnumBooleanBody":r="boolean";break;case"EnumNumberBody":r="number";break;case"EnumBigIntBody":r="bigint";break;case"EnumStringBody":r="string";break;case"EnumSymbolBody":r="symbol"}return[r?`of ${r} `:"",di(e,t,n)]}(e,n,t);case"EnumBooleanMember":case"EnumNumberMember":case"EnumBigIntMember":case"EnumStringMember":case"EnumDefaultedMember":return mi(e,n);case"FunctionTypeParam":{let t=r.name?n("name"):e.parent.this===r?"this":"";return[t,Na(e),t?": ":"",n("typeAnnotation")]}case"DeclareInterface":case"InterfaceDeclaration":case"InterfaceTypeAnnotation":return Fi(e,0,n);case"ClassImplements":case"InterfaceExtends":return[n("id"),n("typeParameters")];case"NullableTypeAnnotation":return["?",n("typeAnnotation")];case"Variance":{let{kind:e}=r;return Ha.ok("plus"===e||"minus"===e),"plus"===e?"+":"-"}case"KeyofTypeAnnotation":return["keyof ",n("argument")];case"ObjectTypeCallProperty":return[r.static?"static ":"",n("value")];case"ObjectTypeMappedTypeProperty":return function(e,t,n){let{node:r}=e;return Ut([r.variance?n("variance"):"","[",$t([n("keyTparam")," in ",n("sourceType")]),"]",go(r.optional),": ",n("propType")])}(e,0,n);case"ObjectTypeIndexer":return[r.static?"static ":"",r.variance?n("variance"):"","[",n("id"),r.id?": ":"",n("key"),"]: ",n("value")];case"ObjectTypeProperty":{let u="";return r.proto?u="proto ":r.static&&(u="static "),[u,"init"!==r.kind?r.kind+" ":"",r.variance?n("variance"):"",no(e,t,n),Na(e),Ee(r)?"":": ",n("value")]}case"ObjectTypeAnnotation":return ni(e,t,n);case"ObjectTypeInternalSlot":return[r.static?"static ":"","[[",n("id"),"]]",Na(e),r.method?"":": ",n("value")];case"ObjectTypeSpreadProperty":return Xa(e,n);case"QualifiedTypeofIdentifier":case"QualifiedTypeIdentifier":return[n("qualification"),".",n("id")];case"NullLiteralTypeAnnotation":return"null";case"BooleanLiteralTypeAnnotation":return String(r.value);case"StringLiteralTypeAnnotation":return Fn(q(qe(r),t));case"NumberLiteralTypeAnnotation":return Ya(r.raw??r.extra.raw);case"BigIntLiteralTypeAnnotation":return Ro(r.raw??r.extra.raw);case"TypeCastExpression":return["(",n("expression"),ba(e,n),")"];case"TypePredicate":return wa(e,n);case"TypeOperator":return[r.operator," ",n("typeAnnotation")];case"TypeParameterDeclaration":case"TypeParameterInstantiation":return Co(e,t,n,"params");case"InferredPredicate":case"DeclaredPredicate":return["predicate"!==e.key||"DeclareFunction"===e.parent.type||e.parent.returnType?" ":": ","%checks",..."DeclaredPredicate"===r.type?["(",n("value"),")"]:[]];case"AsExpression":case"AsConstExpression":case"SatisfiesExpression":return ci(e,0,n)}}function gi(e,t,n){var r;let{node:u}=e;if(!u.type.startsWith("TS"))return;if(Y(u))return u.type.slice(2,-7).toLowerCase();let a=t.semi?";":"",o=[];switch(u.type){case"TSThisType":return"this";case"TSTypeAssertion":{let e=!(ae(u.expression)||oe(u.expression)),t=Ut(["<",$t([rn,n("typeAnnotation")]),rn,">"]),r=[zt("("),$t([rn,n("expression")]),rn,zt(")")];return e?Kt([[t,n("expression")],[t,Ut(r,{shouldBreak:!0})],[t,n("expression")]]):Ut([t,n("expression")])}case"TSDeclareFunction":return ao(e,n,t);case"TSExportAssignment":return["export = ",n("expression"),a];case"TSModuleBlock":return Fo(e,t,n);case"TSInterfaceBody":case"TSTypeLiteral":return ni(e,t,n);case"TSTypeAliasDeclaration":return fa(e,t,n);case"TSQualifiedName":return[n("left"),".",n("right")];case"TSAbstractMethodDefinition":case"TSDeclareMethod":return Io(e,t,n);case"TSAbstractAccessorProperty":case"TSAbstractPropertyDefinition":return jo(e,t,n);case"TSInterfaceHeritage":case"TSClassImplements":case"TSExpressionWithTypeArguments":case"TSInstantiationExpression":return[n("expression"),n("typeParameters")];case"TSTemplateLiteralType":return Mr(e,n,t);case"TSNamedTupleMember":return Ta(e,0,n);case"TSRestType":return Ca(e,0,n);case"TSOptionalType":return[n("typeAnnotation"),"?"];case"TSInterfaceDeclaration":return Fi(e,0,n);case"TSTypeParameterDeclaration":case"TSTypeParameterInstantiation":return Co(e,t,n,"params");case"TSTypeParameter":return So(e,0,n);case"TSAsExpression":case"TSSatisfiesExpression":return ci(e,0,n);case"TSArrayType":return ka(n);case"TSPropertySignature":return[u.readonly?"readonly ":"",no(e,t,n),Na(e),ba(e,n)];case"TSParameterProperty":return[Ra(u),u.static?"static ":"",u.override?"override ":"",u.readonly?"readonly ":"",n("parameter")];case"TSTypeQuery":return Pa(e,n);case"TSIndexSignature":{let r=u.parameters.length>1?zt(Xe(t)?",":""):"",o=Ut([$t([rn,sn([", ",rn],e.map(n,"parameters"))]),r,rn]),i="ClassBody"===e.parent.type&&"body"===e.key;return[i&&u.static?"static ":"",u.readonly?"readonly ":"","[",u.parameters?o:"","]",ba(e,n),i?a:""]}case"TSTypePredicate":return wa(e,n);case"TSNonNullExpression":return[n("expression"),"!"];case"TSImportType":return[u.isTypeOf?"typeof ":"","import(",n("argument"),")",u.qualifier?[".",n("qualifier")]:"",Co(e,t,n,u.typeArguments?"typeArguments":"typeParameters")];case"TSLiteralType":return n("literal");case"TSIndexedAccessType":return ga(e,0,n);case"TSTypeOperator":return[u.operator," ",n("typeAnnotation")];case"TSMappedType":return function(e,t,n){let{node:r}=e,u=Pn(t.originalText,_(r),_(r.typeParameter));return Ut(["{",$t([t.bracketSpacing?nn:rn,Ut([n("typeParameter"),r.optional?ho(r.optional,"?"):"",r.typeAnnotation?": ":"",n("typeAnnotation")]),t.semi?zt(";"):""]),fu(e,t),t.bracketSpacing?nn:rn,"}"],{shouldBreak:u})}(e,t,n);case"TSMethodSignature":{let r=u.kind&&"method"!==u.kind?`${u.kind} `:"";o.push(Ra(u),r,u.computed?"[":"",n("key"),u.computed?"]":"",Na(e));let a=la(e,n,t,!1,!0),i=u.returnType?"returnType":"typeAnnotation",s=u[i],p=s?ba(e,n,i):"",l=Da(u,p);return o.push(l?Ut(a):a),s&&o.push(Ut(p)),Ut(o)}case"TSNamespaceExportDeclaration":return["export as namespace ",n("id"),t.semi?";":""];case"TSEnumDeclaration":return fi(e,n,t);case"TSEnumMember":return mi(e,n);case"TSImportEqualsDeclaration":return[u.isExport?"export ":"","import ",zo(u,!1),n("id")," = ",n("moduleReference"),t.semi?";":""];case"TSExternalModuleReference":return["require(",n("expression"),")"];case"TSModuleDeclaration":{let{parent:i}=e,s="TSModuleDeclaration"===i.type,p="TSModuleDeclaration"===(null==(r=u.body)?void 0:r.type);if(s)o.push(".");else if(o.push(La(e)),"global"!==u.kind&&!u.global){let e=u.kind??(pe(u.id)||Uo(t,_(u),_(u.id)).trim().endsWith("module")?"module":"namespace");o.push(e," ")}return o.push(n("id")),p?o.push(n("body")):u.body?o.push(" ",Ut(n("body"))):o.push(a),o}case"TSConditionalType":return pi(e,t,n);case"TSInferType":return ha(0,0,n);case"TSIntersectionType":return Ea(e,0,n);case"TSUnionType":return Fa(e,t,n);case"TSFunctionType":case"TSCallSignatureDeclaration":case"TSConstructorType":case"TSConstructSignatureDeclaration":return Aa(e,t,n);case"TSTupleType":return $a(e,t,n);case"TSTypeReference":return[n("typeName"),Co(e,t,n,"typeParameters")];case"TSTypeAnnotation":return va(e,0,n);case"TSEmptyBodyFunctionExpression":return io(e,t,n);case"TSJSDocAllType":return"*";case"TSJSDocUnknownType":return"?";case"TSJSDocNullableType":return xa(e,n,"?");case"TSJSDocNonNullableType":return xa(e,n,"!");default:throw new gu(u,"TypeScript")}}var hi=K(["ClassMethod","ClassPrivateMethod","ClassProperty","ClassAccessorProperty","AccessorProperty","TSAbstractAccessorProperty","PropertyDefinition","TSAbstractPropertyDefinition","ClassPrivateProperty","MethodDefinition","TSAbstractMethodDefinition","TSDeclareMethod"]);var xi=function(e,t,n,r){var u;e.isRoot&&(null==(u=t.__onHtmlBindingRoot)||u.call(t,e.node,t));let a=function(e,t,n,r){if(Iu(e))return iu(e,t);for(let u of[qu,wu,Ai,gi,li]){let a=u(e,t,n,r);if(void 0!==a)return a}}(e,t,n,r);if(!a)return"";let{node:o}=e;if(hi(o))return a;let i=L(o.decorators),s=function(e,t,n){let{node:r,parent:u}=e,{decorators:a}=r;if(!L(a)||Uu(u)||Iu(e))return"";let o="ClassExpression"===r.type||"ClassDeclaration"===r.type||Wu(r,t);return["declaration"===e.key&&ue(u)?un:o?en:"",sn(nn,e.map(n,"decorators")),nn]}(e,t,n),p="ClassExpression"===o.type;if(i&&!p)return gn(a,(e=>Ut([s,e])));let l=Du(e,t),c=Mo(e,t);return s||l||c?gn(a,(e=>[c?";":"",l?"(":"",l&&p&&i?[$t([nn,s,e]),nn]:[s,e],l?")":""])):a},Ci={avoidAstMutation:!0},Ti={};D(Ti,{getVisitorKeys:()=>Si,massageAstNode:()=>ki,print:()=>bi});var Si=G({JsonRoot:["node"],ArrayExpression:["elements"],ObjectExpression:["properties"],ObjectProperty:["key","value"],UnaryExpression:["argument"],NullLiteral:[],BooleanLiteral:[],StringLiteral:[],NumericLiteral:[],Identifier:[],TemplateLiteral:["quasis"],TemplateElement:[]});function bi(e,t,n){let{node:r}=e;switch(r.type){case"JsonRoot":return[n("node"),un];case"ArrayExpression":{if(0===r.elements.length)return"[]";let t=e.map((()=>null===e.node?"null":n()),"elements");return["[",$t([un,sn([",",un],t)]),un,"]"]}case"ObjectExpression":return 0===r.properties.length?"{}":["{",$t([un,sn([",",un],e.map(n,"properties"))]),un,"}"];case"ObjectProperty":return[n("key"),": ",n("value")];case"UnaryExpression":return["+"===r.operator?"":r.operator,n("argument")];case"NullLiteral":return"null";case"BooleanLiteral":return r.value?"true":"false";case"StringLiteral":return JSON.stringify(r.value);case"NumericLiteral":return Bi(e)?JSON.stringify(String(r.value)):JSON.stringify(r.value);case"Identifier":return Bi(e)?JSON.stringify(r.name):r.name;case"TemplateLiteral":return n(["quasis",0]);case"TemplateElement":return JSON.stringify(r.value.cooked);default:throw new gu(r,"JSON")}}function Bi(e){return"key"===e.key&&"ObjectProperty"===e.parent.type}var vi=new Set(["start","end","extra","loc","comments","leadingComments","trailingComments","innerComments","errors","range","tokens"]);function ki(e,t){let{type:n}=e;if("ObjectProperty"!==n){if("UnaryExpression"===n&&"+"===e.operator)return t.argument;if("ArrayExpression"!==n)return"TemplateLiteral"===n?{type:"StringLiteral",value:e.quasis[0].value.cooked}:void 0;for(let[n,r]of e.elements.entries())null===r&&t.elements.splice(n,0,{type:"NullLiteral"})}else{let{key:n}=e;"Identifier"===n.type?t.key={type:"StringLiteral",value:n.name}:"NumericLiteral"===n.type&&(t.key={type:"StringLiteral",value:String(n.value)})}}ki.ignoredProperties=vi;var Pi={bracketSpacing:{category:"Common",type:"boolean",default:!0,description:"Print spaces between brackets.",oppositeDescription:"Do not print spaces between brackets."},singleQuote:{category:"Common",type:"boolean",default:!1,description:"Use single quotes instead of double quotes."},proseWrap:{category:"Common",type:"choice",default:"preserve",description:"How to wrap prose.",choices:[{value:"always",description:"Wrap prose if it exceeds the print width."},{value:"never",description:"Do not wrap prose."},{value:"preserve",description:"Wrap prose as-is."}]},bracketSameLine:{category:"Common",type:"boolean",default:!1,description:"Put > of opening tags on the last line instead of on a new line."},singleAttributePerLine:{category:"Common",type:"boolean",default:!1,description:"Enforce single attribute per line in HTML, Vue and JSX."}},wi="JavaScript",Ni={arrowParens:{category:wi,type:"choice",default:"always",description:"Include parentheses around a sole arrow function parameter.",choices:[{value:"always",description:"Always include parens. Example: `(x) => x`"},{value:"avoid",description:"Omit parens when possible. Example: `x => x`"}]},bracketSameLine:Pi.bracketSameLine,bracketSpacing:Pi.bracketSpacing,jsxBracketSameLine:{category:wi,type:"boolean",description:"Put > on the last line instead of at a new line.",deprecated:"2.4.0"},semi:{category:wi,type:"boolean",default:!0,description:"Print semicolons.",oppositeDescription:"Do not print semicolons, except at the beginning of lines which may need them."},experimentalTernaries:{category:wi,type:"boolean",default:!1,description:"Use curious ternaries, with the question mark after the condition.",oppositeDescription:"Default behavior of ternaries; keep question marks on the same line as the consequent."},singleQuote:Pi.singleQuote,jsxSingleQuote:{category:wi,type:"boolean",default:!1,description:"Use single quotes in JSX."},quoteProps:{category:wi,type:"choice",default:"as-needed",description:"Change when properties in objects are quoted.",choices:[{value:"as-needed",description:"Only add quotes around object properties where required."},{value:"consistent",description:"If at least one property in an object requires quotes, quote all properties."},{value:"preserve",description:"Respect the input use of quotes in object properties."}]},trailingComma:{category:wi,type:"choice",default:"all",description:"Print trailing commas wherever possible when multi-line.",choices:[{value:"all",description:"Trailing commas wherever possible (including function arguments)."},{value:"es5",description:"Trailing commas where valid in ES5 (objects, arrays, etc.)"},{value:"none",description:"No trailing commas."}]},singleAttributePerLine:Pi.singleAttributePerLine},Ii={estree:E,"estree-json":Ti},ji=[{linguistLanguageId:183,name:"JavaScript",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:["js","node"],extensions:[".js","._js",".bones",".cjs",".es",".es6",".frag",".gs",".jake",".javascript",".jsb",".jscad",".jsfl",".jslib",".jsm",".jspre",".jss",".mjs",".njs",".pac",".sjs",".ssjs",".xsjs",".xsjslib",".wxs"],filenames:["Jakefile"],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell","zx"],parsers:["babel","acorn","espree","meriyah","babel-flow","babel-ts","flow","typescript"],vscodeLanguageIds:["javascript","mongo"]},{linguistLanguageId:183,name:"Flow",type:"programming",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",color:"#f1e05a",aliases:[],extensions:[".js.flow"],filenames:[],interpreters:["chakra","d8","gjs","js","node","nodejs","qjs","rhino","v8","v8-shell"],parsers:["flow","babel-flow"],vscodeLanguageIds:["javascript"]},{linguistLanguageId:183,name:"JSX",type:"programming",tmScope:"source.js.jsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",color:void 0,aliases:void 0,extensions:[".jsx"],filenames:void 0,interpreters:void 0,parsers:["babel","babel-flow","babel-ts","flow","typescript","espree","meriyah"],vscodeLanguageIds:["javascriptreact"],group:"JavaScript"},{linguistLanguageId:378,name:"TypeScript",type:"programming",color:"#3178c6",aliases:["ts"],interpreters:["deno","ts-node"],extensions:[".ts",".cts",".mts"],tmScope:"source.ts",aceMode:"typescript",codemirrorMode:"javascript",codemirrorMimeType:"application/typescript",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescript"]},{linguistLanguageId:94901924,name:"TSX",type:"programming",color:"#3178c6",group:"TypeScript",extensions:[".tsx"],tmScope:"source.tsx",aceMode:"javascript",codemirrorMode:"jsx",codemirrorMimeType:"text/jsx",parsers:["typescript","babel-ts"],vscodeLanguageIds:["typescriptreact"]},{linguistLanguageId:174,name:"JSON.stringify",type:"data",color:"#292929",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",aliases:["geojson","jsonl","topojson"],extensions:[".importmap"],filenames:["package.json","package-lock.json","composer.json"],parsers:["json-stringify"],vscodeLanguageIds:["json"]},{linguistLanguageId:174,name:"JSON",type:"data",color:"#292929",tmScope:"source.json",aceMode:"json",codemirrorMode:"javascript",codemirrorMimeType:"application/json",aliases:["geojson","jsonl","topojson"],extensions:[".json",".4DForm",".4DProject",".avsc",".geojson",".gltf",".har",".ice",".JSON-tmLanguage",".mcmeta",".tfstate",".tfstate.backup",".topojson",".webapp",".webmanifest",".yy",".yyp"],filenames:[".all-contributorsrc",".arcconfig",".auto-changelog",".c8rc",".htmlhintrc",".imgbotconfig",".nycrc",".tern-config",".tern-project",".watchmanconfig","Pipfile.lock","composer.lock","flake.lock","mcmod.info",".babelrc",".jscsrc",".jshintrc",".jslintrc",".swcrc"],parsers:["json"],vscodeLanguageIds:["json"]},{linguistLanguageId:423,name:"JSON with Comments",type:"data",color:"#292929",group:"JSON",tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"text/javascript",aliases:["jsonc"],extensions:[".jsonc",".code-snippets",".code-workspace",".sublime-build",".sublime-commands",".sublime-completions",".sublime-keymap",".sublime-macro",".sublime-menu",".sublime-mousemap",".sublime-project",".sublime-settings",".sublime-theme",".sublime-workspace",".sublime_metrics",".sublime_session"],filenames:[],parsers:["jsonc"],vscodeLanguageIds:["jsonc"]},{linguistLanguageId:175,name:"JSON5",type:"data",color:"#267CB9",extensions:[".json5"],tmScope:"source.js",aceMode:"javascript",codemirrorMode:"javascript",codemirrorMimeType:"application/json",parsers:["json5"],vscodeLanguageIds:["json5"]}],Li=f}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,